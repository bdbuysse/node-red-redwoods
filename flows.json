[
    {
        "id": "e851f138fbd198fe",
        "type": "tab",
        "label": "TTN.v3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "abf038f.43da5c8",
        "type": "tab",
        "label": "Home Assistant",
        "disabled": false,
        "info": ""
    },
    {
        "id": "baf4429beef64559",
        "type": "tab",
        "label": "Z-Wave",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "aa130715069a6eeb",
        "type": "tab",
        "label": "Influxdb",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f905b49ce5011782",
        "type": "tab",
        "label": "GCP Remote",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1600a05a.fc816",
        "type": "tab",
        "label": "Twillo",
        "disabled": true,
        "info": ""
    },
    {
        "id": "171b21f.9e6efde",
        "type": "tab",
        "label": "RainMachine",
        "disabled": false,
        "info": ""
    },
    {
        "id": "bf8b5ca4b28f6892",
        "type": "tab",
        "label": "MongoDB",
        "disabled": true,
        "info": ""
    },
    {
        "id": "4576b216.7dd43c",
        "type": "tab",
        "label": "Grafana",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c2dba5e02909beed",
        "type": "tab",
        "label": "Alerts",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b78ed3d06ab6db61",
        "type": "tab",
        "label": "GoogleHome",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "8ee38fc4c4808acf",
        "type": "tab",
        "label": "Weather",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5a34b650.a16c48",
        "type": "tab",
        "label": "Google Services",
        "disabled": false,
        "info": ""
    },
    {
        "id": "978ca627078b4010",
        "type": "tab",
        "label": "Unifi",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "44c96c079469bdd0",
        "type": "tab",
        "label": "WIP",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2b79d1365169f919",
        "type": "subflow",
        "name": "device_name ",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 200,
                "wires": [
                    {
                        "id": "8777becfbd016b0a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 200,
                "wires": [
                    {
                        "id": "ab2a910779716323",
                        "port": 0
                    }
                ]
            },
            {
                "x": 640,
                "y": 300,
                "wires": [
                    {
                        "id": "8777becfbd016b0a",
                        "port": 0
                    }
                ]
            },
            {
                "x": 720,
                "y": 300,
                "wires": [
                    {
                        "id": "82d9ab252e9b8089",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 820,
            "y": 300,
            "wires": [
                {
                    "id": "82d9ab252e9b8089",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "322cbb2615da3e18",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "11b943bb2882710d",
        "type": "mqtt-broker",
        "name": "RadioBridge-ttnv3",
        "broker": "nam1.cloud.thethings.network",
        "port": "8883",
        "tls": "322cbb2615da3e18",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "76f8126894e2f90f",
        "type": "mqtt-broker",
        "name": "Dragino-ttnv3",
        "broker": "nam1.cloud.thethings.network",
        "port": "8883",
        "tls": "322cbb2615da3e18",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "a45e499a8d2a59db",
        "type": "influxdb",
        "hostname": "influxdb",
        "port": "8086",
        "protocol": "http",
        "database": "LoRaWAN",
        "name": "influxdb",
        "usetls": false,
        "tls": "322cbb2615da3e18",
        "influxdbVersion": "2.0",
        "url": "http://influxdb:8086",
        "rejectUnauthorized": false
    },
    {
        "id": "3b0c9cf9dbc6cbe2",
        "type": "mqtt-broker",
        "name": "SenseCAP-TTNv3",
        "broker": "nam1.cloud.thethings.network",
        "port": "1883",
        "tls": "322cbb2615da3e18",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "3",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "824a7d9e09a2be8d",
        "type": "mqtt-broker",
        "name": "MultiTech-TTNv3",
        "broker": "nam1.cloud.thethings.network",
        "port": "8883",
        "tls": "322cbb2615da3e18",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "dbb495c520f68730",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "3a9c7e55.2fdf72",
        "type": "ui_group",
        "name": "GPS Survey",
        "tab": "aa5557b0.ab79c8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "48e3f75d.5d7798",
        "type": "ui_group",
        "name": "LoRa Demo",
        "tab": "aa5557b0.ab79c8",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "aa5557b0.ab79c8",
        "type": "ui_tab",
        "name": "LoRa",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7f2ebed0.9fcd3",
        "type": "ui_group",
        "name": "GPS Survey",
        "tab": "9cc4d04a.b62aa",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "87d11ec8.ee325",
        "type": "ui_group",
        "name": "LoRa Demo",
        "tab": "9cc4d04a.b62aa",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "9cc4d04a.b62aa",
        "type": "ui_tab",
        "name": "LoRa",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5010ad6c.df5ca4",
        "type": "server",
        "name": "Home Assistant",
        "version": 5,
        "addon": false,
        "rejectUnauthorizedCerts": false,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true,
        "heartbeat": false,
        "heartbeatInterval": "30",
        "areaSelector": "friendlyName",
        "deviceSelector": "friendlyName",
        "entitySelector": "friendlyName",
        "statusSeparator": "at: ",
        "statusYear": "hidden",
        "statusMonth": "short",
        "statusDay": "numeric",
        "statusHourCycle": "h23",
        "statusTimeFormat": "h:m",
        "enableGlobalContextStore": true
    },
    {
        "id": "e81e7427.232dd8",
        "type": "influxdb",
        "hostname": "influxdb",
        "port": "8086",
        "protocol": "http",
        "database": "homeassistant",
        "name": "",
        "usetls": false,
        "tls": "d15f51f5.84dab",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "d15f51f5.84dab",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "b841d93f.1fc228",
        "type": "ui_group",
        "name": "Wind Speed",
        "tab": "355c6684.d14cea",
        "order": 7,
        "disp": true,
        "width": "6"
    },
    {
        "id": "61d8381c.d631b8",
        "type": "ui_group",
        "name": "OAT",
        "tab": "355c6684.d14cea",
        "order": 6,
        "disp": true,
        "width": "6"
    },
    {
        "id": "1687319f.26f19e",
        "type": "ui_group",
        "name": "Storms",
        "tab": "355c6684.d14cea",
        "order": 8,
        "disp": true,
        "width": "6"
    },
    {
        "id": "355c6684.d14cea",
        "type": "ui_tab",
        "name": "Home Control",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "db11d248.010a3",
        "type": "influxdb",
        "hostname": "influxdb",
        "port": "8086",
        "protocol": "http",
        "database": "weather",
        "name": "",
        "usetls": false,
        "tls": "d15f51f5.84dab",
        "influxdbVersion": "1.x",
        "url": "",
        "rejectUnauthorized": false
    },
    {
        "id": "b03b267.f2a54d8",
        "type": "twilio-api",
        "name": "",
        "sid": "$(TWILLIOSID)",
        "from": "6127127904"
    },
    {
        "id": "f21111d7.3018c",
        "type": "tls-config",
        "name": "defaultTLS",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "c813143834382b28",
        "type": "mongodb",
        "hostname": "10.1.1.10",
        "connectOptions": "",
        "port": "27017",
        "db": "sensors",
        "name": ""
    },
    {
        "id": "f8ce23bb.23857",
        "type": "influxdb",
        "hostname": "influxdb",
        "port": "8086",
        "protocol": "http",
        "database": "zwave",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x"
    },
    {
        "id": "09f2c70562eb4732",
        "type": "google-home-conf",
        "d": true,
        "username": "bdbuysse"
    },
    {
        "id": "88e1b19a.74497",
        "type": "tls-config",
        "name": "defaultTLS",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "3b0217bc.de55b8",
        "type": "mqtt-broker",
        "name": "Redwoods MQTT",
        "broker": "$(RWMQTT)",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "d0b6d8cf.354418",
        "type": "influxdb",
        "hostname": "influxdb",
        "port": "8086",
        "protocol": "http",
        "database": "fail2ban",
        "name": "",
        "usetls": false,
        "tls": "ef2c57f1.833998",
        "influxdbVersion": "1.x"
    },
    {
        "id": "ef2c57f1.833998",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "ba12e1b1b4930c5e",
        "type": "ui_tab",
        "name": "WellnesExam",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "df71c92d64343c4c",
        "type": "ui_group",
        "name": "Pain Management",
        "tab": "ba12e1b1b4930c5e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "92547680b74ab210",
        "type": "postgresDB",
        "name": "postgres ",
        "host": "10.10.10.10",
        "port": "5432",
        "database": "postgres",
        "ssl": false,
        "max": "10",
        "min": "1",
        "idle": "1000"
    },
    {
        "id": "ea745cefbcdbc96f",
        "type": "mqtt-broker",
        "name": "GCP-Pines",
        "broker": "$(MQTTPINES)",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "95fa7051b358b411",
        "type": "ui-base",
        "name": "Node-Red",
        "path": "/dashboard"
    },
    {
        "id": "9463a0777c5daac0",
        "type": "ui-theme",
        "name": "BlueTones",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094ce",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        }
    },
    {
        "id": "c3fc6545f2ca2b8d",
        "type": "ui-page",
        "name": "LoRaWAN",
        "ui": "95fa7051b358b411",
        "path": "/lorawan",
        "layout": "grid",
        "theme": "9463a0777c5daac0",
        "order": -1,
        "className": ""
    },
    {
        "id": "4294f6c6248e3240",
        "type": "ui-group",
        "name": "LoRa Demo",
        "page": "c3fc6545f2ca2b8d",
        "width": "6",
        "height": "1",
        "order": -1,
        "disp": true,
        "className": ""
    },
    {
        "id": "8821e93c333d644a",
        "type": "ui-group",
        "name": "GPS Survey",
        "page": "c3fc6545f2ca2b8d",
        "width": "6",
        "height": "1",
        "order": -1,
        "disp": true,
        "className": ""
    },
    {
        "id": "7f72b89c5dd602b5",
        "type": "ui-page",
        "name": "Solar",
        "ui": "95fa7051b358b411",
        "path": "/solar",
        "layout": "grid",
        "theme": "9463a0777c5daac0",
        "order": -1,
        "className": ""
    },
    {
        "id": "9ba41ff47e73e33d",
        "type": "ui-group",
        "name": "Kilowatt Hours",
        "page": "7f72b89c5dd602b5",
        "width": "6",
        "height": "1",
        "order": -1,
        "disp": true,
        "className": ""
    },
    {
        "id": "64f3d3728d59868f",
        "type": "ui_tab",
        "name": "Solar WIP",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "508f86894c176d97",
        "type": "ui_group",
        "name": "Solar",
        "tab": "64f3d3728d59868f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4c7b7f7df754f4d9",
        "type": "ui-group",
        "name": "PowerFactor",
        "page": "7f72b89c5dd602b5",
        "width": "5",
        "height": "1",
        "order": -1,
        "disp": true,
        "className": ""
    },
    {
        "id": "5d7e54ca.019d44",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "",
        "usetls": false,
        "tls": "d50d0c9f.31e858",
        "influxdbVersion": "2.0",
        "url": "https://localhost:9999",
        "rejectUnauthorized": false
    },
    {
        "id": "d50d0c9f.31e858",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "ca348830b9add8ba",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "postgres",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "postgres",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "PGUSER",
        "userFieldType": "env",
        "password": "PGPASS",
        "passwordFieldType": "env"
    },
    {
        "id": "38ac84090cedad42",
        "type": "unificonfig",
        "name": "spicey",
        "ip": "$(UNIFIHOST)",
        "port": "443",
        "site": "default",
        "unifios": true,
        "ssl": false
    },
    {
        "id": "14e046a81db22f34",
        "type": "unificonfig",
        "name": "spicey",
        "ip": "$(UNIFIHOST)",
        "port": "443",
        "site": "default",
        "unifios": true,
        "ssl": false
    },
    {
        "id": "42b161f954aebdaf",
        "type": "unificonfig",
        "name": "spicey",
        "ip": "10.10.10.1",
        "port": "443",
        "site": "default",
        "unifios": true,
        "ssl": false
    },
    {
        "id": "63f728088a9b7208",
        "type": "unifi-access-controller",
        "name": "spicey",
        "controllerIp": "$(UNIFIHOST)",
        "controllerPort": "",
        "wsPort": "",
        "controllerType": "UniFiOSConsole",
        "protectSocketReconnectTimeout": "",
        "protectSocketHeartbeatInterval": ""
    },
    {
        "id": "8777becfbd016b0a",
        "type": "change",
        "z": "2b79d1365169f919",
        "name": "decoded_payload",
        "rules": [
            {
                "t": "set",
                "p": "decoded_payload",
                "pt": "msg",
                "to": "payload.uplink_message.decoded_payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ttnv3_payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 200,
        "wires": [
            [
                "82d9ab252e9b8089"
            ]
        ]
    },
    {
        "id": "ab2a910779716323",
        "type": "change",
        "z": "2b79d1365169f919",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "device_name",
                "pt": "msg",
                "to": "payload.rows[0].device_name",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ttnv3_payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "82d9ab252e9b8089",
        "type": "function",
        "z": "2b79d1365169f919",
        "name": "",
        "func": "var lookup = [\n{\"device_name\": \"hibiscus-lux\",\"device_id\": \"eui-2cf7f1212100000f\"},\n{\"device_name\": \"bdb-mbox\",\"device_id\": \"eui-008000000000fa94\"},\n{\"device_name\": \"guest_bedroom\",\"device_id\": \"eui-4491600000f7c6fd\"},\n{\"device_name\": \"garage-door\",\"device_id\":\"eui-4491600000f7d055\" },\n{\"device_name\": \"bdb-desk\",\"device_id\": \"eui-ccc0790000ee4eb4\"},\n{\"device_name\": \"hibiscus-soil-sensecap\",\"device_id\": \"eui-2cf7f12121000241\"},\n{\"device_name\": \"hibiscus-ath\",\"device_id\": \"eui-00800000040181bd\"},\n{\"device_name\": \"temp-rh-buffet\",\"device_id\": \"eui-ccc0790000ee507e\"},\n{\"device_name\": \"temp-rh-fireplace\",\"device_id\": \"eui-ccc0790000ee4ff8\"},\n{\"device_name\": \"temp-rh-attic\",\"device_id\": \"eui-ccc0790000ee5014\"},\n{\"device_name\": \"hibiscus-soil-dragino\",\"device_id\": \"eui-a84041edc1828b08\"},\n{\"device_name\": \"temp-garage\",\"device_id\": \"eui-ccc0790000ee58d8\"},\n{\"device_name\": \"temp-rh-master-bedroom\",\"device_id\": \"eui-ccc0790000ee517e\"},\n{\"device_name\": \"hibiscus-leak\",\"device_id\": \"eui-0080000004018174\"}\n];\n\n\n\nvar lookupMatch = lookup.find(el => msg.payload.end_device_ids.device_id === el.device_id);\n//node.warn(lookupMatch)\n\nif(lookupMatch) {\n   msg.device_name = lookupMatch.device_name;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 200,
        "wires": [
            [
                "ab2a910779716323"
            ]
        ]
    },
    {
        "id": "bd311abd4364b361",
        "type": "inject",
        "z": "e851f138fbd198fe",
        "name": "test",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "v3/edgewoods-radiobridge@ttn/devices/eui-ccc0790000ee4eb4/up",
        "payload": "{\"end_device_ids\":{\"device_id\":\"eui-ccc0790000ee4eb4\",\"application_ids\":{\"application_id\":\"edgewoods-radiobridge\"},\"dev_eui\":\"CCC0790000EE4EB4\",\"join_eui\":\"0101010101010101\",\"dev_addr\":\"260CD238\"},\"correlation_ids\":[\"as:up:01FK6X1ZSFWHEZZ3JRRYD3NKZQ\",\"gs:conn:01FK0JC37X4B4RF60SNDPDY8RS\",\"gs:up:host:01FK0JC3DKHKZ85GHZXCDEV8Y0\",\"gs:uplink:01FK6X1ZJKVP1JA6CF734MJ904\",\"ns:uplink:01FK6X1ZJPFP1V2AX58SGZHM51\",\"rpc:/ttn.lorawan.v3.GsNs/HandleUplink:01FK6X1ZJPCDDTMCSCVR9NKCAY\",\"rpc:/ttn.lorawan.v3.NsAs/HandleUplink:01FK6X1ZSFWSN1Q5YAN50NT6B8\"],\"received_at\":\"2021-10-29T20:49:58.578142446Z\",\"uplink_message\":{\"session_key_id\":\"AXyWPENbqlKKUMSIkYdArg==\",\"f_port\":2,\"f_cnt\":1128,\"frm_payload\":\"GA0AGhAnUA==\",\"decoded_payload\":{\"Message\":\"Event: Air Temperature/Humidity, ATH Event: Periodic Report, Temperature: 26.1, Humidity: 39.5, Packet Counter: 8, Protocol Version: 1\",\"event_type\":{\"description\":\"Periodic Report\"},\"events\":[{\"n\":\"temperature\",\"u\":\"Fah\",\"v\":78.98},{\"n\":\"relative_humidity\",\"u\":\"%RH\",\"v\":39.5}]},\"rx_metadata\":[{\"gateway_ids\":{\"gateway_id\":\"edgewoods-ttn3-001\",\"eui\":\"00800000A000195A\"},\"timestamp\":2102926475,\"rssi\":-51,\"channel_rssi\":-51,\"snr\":8.2,\"uplink_token\":\"CiAKHgoSZWRnZXdvb2RzLXR0bjMtMDAxEggAgAAAoAAZWhCLueDqBxoMCPa88YsGEPj40akBIPj9vYGaqjA=\",\"channel_index\":2},{\"gateway_ids\":{\"gateway_id\":\"packetbroker\"},\"packet_broker\":{\"message_id\":\"01FK6X1ZKFN7R8SBS6PMMCZXPP\",\"forwarder_net_id\":\"000013\",\"forwarder_tenant_id\":\"ttnv2\",\"forwarder_cluster_id\":\"ttn-v2-us-west\",\"forwarder_gateway_id\":\"innatedgewood\",\"home_network_net_id\":\"000013\",\"home_network_tenant_id\":\"ttn\",\"home_network_cluster_id\":\"nam1.cloud.thethings.network\"},\"time\":\"2021-10-29T21:44:16Z\",\"rssi\":-77,\"channel_rssi\":-77,\"snr\":7.75,\"location\":{\"latitude\":45.14176697,\"longitude\":-93.37486187,\"altitude\":290},\"uplink_token\":\"eyJnIjoiWlhsS2FHSkhZMmxQYVVwQ1RWUkpORkl3VGs1VE1XTnBURU5LYkdKdFRXbFBhVXBDVFZSSk5GSXdUazVKYVhkcFlWaFphVTlwU25oWFNFNDJVVlp2TVZOVVVYUlZlbXhHWlZoS1JVbHBkMmxrUjBadVNXcHZhVkV3VG1wU01IUjJZV3BzUTAwelVrSlZNMXBhWkd4V1RXRnJUa2hrZVVvNUxsRnRaVzgxWDA5TlQweG5Ua0pFUm5NeWVGRXpTbmN1ZEZsUFVVb3RkWFpFYmpocGQwbHlOeTU2UVRaWmNUTjBja3BQYzIxRlMwbE1abVZPTmtGNFZUazBURzFQTkZkdGJGSm9lbVZCTUhGUVZVdFhjMHh2VFdrdE9HSnhiWHBzTm10WFZHMXZOVXRhVW5KallVVnROVXRZUmxaaFdVc3RZVEpYTWxSc1gxUjVOM3B0UVhKU2JHOWpRbTVKWVZvME5rd3dWMDlwWTBkbE1VTnBPREp0V0RkclZtY3lkM0ZYVUdRMVRGRkJaeTVVWkhaTWVWUldjM2xqU0RKVFpWWTVkRkpHUWxSQiIsImEiOnsiZm5pZCI6IjAwMDAxMyIsImZ0aWQiOiJ0dG52MiIsImZjaWQiOiJ0dG4tdjItdXMtd2VzdCJ9fQ==\"},{\"gateway_ids\":{\"gateway_id\":\"edgewood-ttn-001\",\"eui\":\"58A0CBFFFE803199\"},\"time\":\"2021-10-29T20:49:58.314033985Z\",\"timestamp\":841893379,\"rssi\":-42,\"channel_rssi\":-42,\"snr\":8,\"uplink_token\":\"Ch4KHAoQZWRnZXdvb2QtdHRuLTAwMRIIWKDL//6AMZkQg4y5kQMaDAj2vPGLBhCsyZa8ASC494WmwIwE\"}],\"settings\":{\"data_rate\":{\"lora\":{\"bandwidth\":125000,\"spreading_factor\":7}},\"data_rate_index\":3,\"coding_rate\":\"4/5\",\"frequency\":\"904300000\",\"timestamp\":2102926475},\"received_at\":\"2021-10-29T20:49:58.358996021Z\",\"consumed_airtime\":\"0.061696s\",\"network_ids\":{\"net_id\":\"000013\",\"tenant_id\":\"ttn\",\"cluster_id\":\"ttn-nam1\"}}}",
        "payloadType": "json",
        "x": 150,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "7aff16d44c3565eb",
        "type": "comment",
        "z": "e851f138fbd198fe",
        "name": "Dragino",
        "info": "",
        "x": 130,
        "y": 1380,
        "wires": []
    },
    {
        "id": "9a131e34344e4835",
        "type": "switch",
        "z": "e851f138fbd198fe",
        "name": "",
        "property": "ttnv3_payload.uplink_message.decoded_payload.event_type.description",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Periodic Report",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Supervisory",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Humidity has Risen Above Upper Threshold",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 650,
        "y": 1000,
        "wires": [
            [
                "46acc3fa.0e350c"
            ],
            [
                "de2ec177c8fdf56b",
                "aaa98b8877775643"
            ],
            [
                "e9daff03243840f9"
            ],
            [
                "e9daff03243840f9"
            ]
        ]
    },
    {
        "id": "46acc3fa.0e350c",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "Periodic Event Loop",
        "func": "let dev_id = msg.device_name;\nlet hardware_serial = msg.payload.end_device_ids.dev_eui;\nlet app_id = msg.payload.end_device_ids.application_ids.application_id;\nlet counter = msg.payload.uplink_message.f_cnt;\nlet events = msg.payload.uplink_message.decoded_payload.events;\nlet influxMsg = {};\n\n\n/*\nTO Do...  when unknown_event is passed through to influxdb, it throws 400 bad request error.\nHow can I filter out using an array of bad events in my if statement most efficeintly?\nmap filter?\n\nlet exclusion_list = ['unknown_event', 'raw_data'];\n*/\ninfluxMsg.measurement = \"radio_bridge\";\n//var influxMsg = [];\n\n//if (msg.payload.object.events[i].n === \"temperature\") {\n\n/*\n122719 bdb - Doing a couple things here intentionally:  \n\n1) Stripping off raw_data packets - Already caputring them in mongodb if needed.  \n2) defining influxdb measurement equal to the name of the event from the codec.\n3) defining events[i].n \n\n*/\n\n\nfor (var i = 0 ; i < events.length; i++) {\n    //if (events[i].n !=[\"raw_data\", \"unknown_event\"] ){\n    //if (events[i].n != \"raw_data\" || events[i].n != \"unknown_event\" ) {\n    if (events[i].n != \"raw_data\") {\n        influxMsg = [{\n            measurement: events[i].n,\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: events[i].n,\n            u: events[i].u,\n            v: events[i].v,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: events[i].n\n        }],}];\n        node.send(influxMsg);\n    } else {}\n}    \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 860,
        "wires": [
            [
                "ad01381f10d5e3b7"
            ]
        ]
    },
    {
        "id": "ad01381f10d5e3b7",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "radioBridgePeriodicMsg",
        "mode": "link",
        "links": [
            "b30ec6d3b9997c05",
            "1699db063c0f49a3"
        ],
        "x": 1035,
        "y": 860,
        "wires": []
    },
    {
        "id": "484480bd4c1b0376",
        "type": "comment",
        "z": "e851f138fbd198fe",
        "name": "RadioBridge",
        "info": "",
        "x": 150,
        "y": 800,
        "wires": []
    },
    {
        "id": "026a9c8085a7862c",
        "type": "subflow:2b79d1365169f919",
        "z": "e851f138fbd198fe",
        "name": "",
        "env": [],
        "x": 480,
        "y": 1000,
        "wires": [
            [
                "9a131e34344e4835"
            ],
            [],
            []
        ]
    },
    {
        "id": "c6277d9827b77001",
        "type": "comment",
        "z": "e851f138fbd198fe",
        "name": "SenseCAP",
        "info": "",
        "x": 140,
        "y": 1800,
        "wires": []
    },
    {
        "id": "d02558043be717f3",
        "type": "subflow:2b79d1365169f919",
        "z": "e851f138fbd198fe",
        "name": "",
        "env": [],
        "x": 480,
        "y": 1460,
        "wires": [
            [
                "a25f330c2c765f5a"
            ],
            [],
            []
        ]
    },
    {
        "id": "6e40d9f14980d493",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "draginoOut",
        "mode": "link",
        "links": [
            "571d727121b45daa",
            "20df563c9564c5bf"
        ],
        "x": 835,
        "y": 1500,
        "wires": []
    },
    {
        "id": "91b54c5a6e9f7916",
        "type": "subflow:2b79d1365169f919",
        "z": "e851f138fbd198fe",
        "name": "",
        "x": 480,
        "y": 1880,
        "wires": [
            [
                "b1effb7d0f5312e2",
                "935ea9c0c09a1c14"
            ],
            [],
            []
        ]
    },
    {
        "id": "b1effb7d0f5312e2",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "SenseCap Loop",
        "func": "let dev_id = msg.device_name;\nlet hardware_serial = msg.payload.end_device_ids.dev_eui;\nlet app_id = msg.payload.end_device_ids.application_ids.application_id;\nlet counter = msg.payload.uplink_message.f_cnt;\nlet events = msg.payload.uplink_message.decoded_payload.messages;\nlet influxMsg = [];\n\n/*\nTO Do...  when unknown_event is passed through to influxdb, it throws 400 bad request error.\nHow can I filter out using an array of bad events in my if statement most efficeintly?\nmap filter?\n\nlet exclusion_list = ['unknown_event', 'raw_data'];\n*/\ninfluxMsg.measurement = \"sense_cap\";\n\nfor (var i = 0 ; i < events.length; i++) {\n    if (typeof events[i].measurementId !== 'undefined') {\n        if (events[i].measurementId === 4102 ) {\n            var temp_f = ((events[i].measurementValue * 9/5)+32)\n    //        var temp_f = math.round((events[i].measurementValue * 9/5)+32)\n            influxMsg = [{\n                measurement: 'soil_temperature',\n                payload: [{\n                dev_id: dev_id,\n                dev_eui: hardware_serial,\n                msg_counter: counter,\n                n: 'soil_temperature',\n                u: 'Fah',\n                //v: temp_f.toFixed(2),\n                v: Number(temp_f.toFixed(2)),\n            },{\n                app_id: app_id,\n                device_id: dev_id,\n                event_name: 'soil_temperature'\n            }],}];\n            node.send(influxMsg);\n        } else {\n            if (events[i].measurementId === 4103 ) {\n            influxMsg = [{\n                measurement: 'soil_moisture',\n                payload: [{\n                dev_id: dev_id,\n                dev_eui: hardware_serial,\n                msg_counter: counter,\n                n: 'soil_moisture',\n                u: 'Moist',\n                v: events[i].measurementValue,\n            },{\n                app_id: app_id,\n                device_id: dev_id,\n                event_name: 'soil_moisture'\n            }],}];\n            node.send(influxMsg);\n        } else {\n            if (events[i].measurementId === 4099 ) {\n            influxMsg = [{\n                measurement: 'lux',\n                payload: [{\n                dev_id: dev_id,\n                dev_eui: hardware_serial,\n                msg_counter: counter,\n                n: 'lux',\n                u: 'lux',\n                v: events[i].measurementValue,\n            },{\n                app_id: app_id,\n                device_id: dev_id,\n                event_name: 'lux'\n            }],}];\n            node.send(influxMsg);\n        }}}\n    } else if (typeof events[i].battery !== 'undefined') {\n        influxMsg = [{\n            measurement: 'battery_voltage',\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: 'battery_voltage',\n            u: 'V',\n            v: events[i].battery,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: 'battery_voltage'\n        }],}];\n        node.send(influxMsg);\n    } else if (typeof events[i].interval !== 'undefined') {\n        influxMsg = [{\n            measurement: 'reporting_interval',\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: 'reporting_interval',\n            u: 'SEC',\n            v: events[i].interval,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: 'reporting_interval'\n        }],}];\n        node.send(influxMsg);\n    } else {\n        influxMsg = [{\n            measurement: 'unknown',\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: 'unknown',\n            u: 'unknown',\n            v: events[i].measurementValue,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: 'unknown'\n        }],}];\n        node.send(influxMsg);\n      \n\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1880,
        "wires": [
            [
                "b53af92376739f8a",
                "67e5e4b131aca562",
                "edc84a75edc4d17c"
            ]
        ]
    },
    {
        "id": "b53af92376739f8a",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "senseCapOut",
        "mode": "link",
        "links": [
            "d3561ca26614772f",
            "d0a5f832450dfb4f"
        ],
        "x": 815,
        "y": 1880,
        "wires": []
    },
    {
        "id": "e9daff03243840f9",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 1140,
        "wires": []
    },
    {
        "id": "5e72f91f649fedfa",
        "type": "subflow:2b79d1365169f919",
        "z": "e851f138fbd198fe",
        "name": "",
        "env": [],
        "x": 490,
        "y": 2680,
        "wires": [
            [
                "878519f3.342c88"
            ],
            [],
            []
        ]
    },
    {
        "id": "30a5297b.a93276",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 710,
        "y": 2800,
        "wires": []
    },
    {
        "id": "62a237f9.a753f8",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "TTN Mbox Codec",
        "func": "//function Decoder(bytes, port) {\n  // Decode an uplink message from a buffer\n  // (array) of bytes to an object of fields.\n  //var decoded = {};\n\n  // if (port === 1) decoded.led = bytes[0];\n\n  //return decoded;\n//}\n//function Decode(fPort, bytes) {\n\n\n//function Decoder(bytes, port) {\nvar bytes = msg.payload_raw;\n\n\nif (bytes.length == 14){  \n  var event_array = [];\n  var evb_sensors = {};\n  var EVB_TYPE = {\n    none: 0,\n    led_1: 1,\n    led_2: 2,\n    lux_max: 3,\n    lux_min: 4,\n    lux: 5,\n    barometer_max: 6,\n    barometer_min: 7,\n    barometer: 8,\n    temperature_max: 9,\n    temperature__min: 10,\n    temperature: 11,\n    accelerometer_max: 12,\n    accelerometer_min: 13,\n    accelerometer: 14,\n    tx_interval: 15,\n    amps_max: 16,\n    amps_min: 17,\n    amps: 18,\n    m2x_device: 19,\n    m2x_key: 20,\n  };\n\n/*\n * Process the EVB LoRa payload.\n *\n * EVB payload contains one or more TLV fields.\n *\n * [<type: accelerometer><length: 6><x-high><x-low><y-high><y-low><z-high><z-low>]\n * [<type: barometer><length: 3><byte2><byte1><byte0>]\n * [<type: temperature><length: 2><byte-high><byte-low>]\n * \n */\n  for (var index = 0; index < bytes.length; ) {\n    var type = bytes[index++];\n  //   var length = bytes[index++];\n    var value;\n    console.log(\"type: \" + type + \" length: \" );\n\n    switch (type) {\n    case EVB_TYPE.lux:\n      if (typeof(evb_sensors.light) == \"undefined\") {\n        evb_sensors.light = {};\n      }\n      value = bytes[index++] << 8;\n      value |= bytes[index++];\n      value = value * 0.24;\n      evb_sensors.light.lux = value;\n      // web of things \n      var lux_lighting_event = {};\n      lux_lighting_event.n = \"lux_level\";\n      lux_lighting_event.u = \"lx\";\n      lux_lighting_event.v = evb_sensors.light.lux;\n      event_array.push(lux_lighting_event);\n      break;\n    case EVB_TYPE.barometer:\n      if (typeof(evb_sensors.barometer) == \"undefined\") {\n        evb_sensors.barometer = {};\n      }\n      value = bytes[index++] << 16;\n      value |= bytes[index++] << 8;\n      value |= bytes[index++];\n      value = value * 0.00025;\n      evb_sensors.barometer.pa = value;\n      \n      //web of things event array payload\n      var relative_humidity_event = {};\n      relative_humidity_event.n = \"relative_humidity\";\n      relative_humidity_event.u = \"%RH\";\n      relative_humidity_event.v = evb_sensors.barometer.pa;\n      event_array.push(relative_humidity_event);\n      \n      break;\n    case EVB_TYPE.temperature:\n      if (typeof(evb_sensors.temperature) == \"undefined\") {\n      evb_sensors.temperature = {};\n      }\n      value = (bytes[index++] << 24) >> 16;\n      value |= bytes[index++];\n      value = value * 0.0625;\n      evb_sensors.temperature.c = value;\n      evb_sensors.temperature.f =  value * 9 / 5 + 32; \n      //web of things event array payload\n      var air_temp_event = {};\n      air_temp_event.n = \"temperature\";\n      air_temp_event.u = \"Fah\";\n      air_temp_event.v = evb_sensors.temperature.f;\n      event_array.push(air_temp_event);\n      \n      break;\n    case EVB_TYPE.accelerometer:\n      if (typeof(evb_sensors.accelerometer) == \"undefined\") {\n      evb_sensors.accelerometer = {};\n      }\n      // evb_sensors.accelerometer.x = (bytes[index++] << 24) >> 16;\n      var x1 = evb_sensors.accelerometer.x = bytes[index++] ;\n      // x1 = ~x1 ; \n      // x1 = ( x1 + 1 ) % 256; \n      evb_sensors.accelerometer.x = x1 * 0.0625;//; / 15;\n      // evb_sensors.accelerometer.y = (bytes[index++] << 24) >> 16;\n      var y1 = evb_sensors.accelerometer.y = bytes[index++] ;\n      // y1 = ~ y1 ; \n      // y1 = ( y1 + 1 ) % 256;\n        \n      y1 = evb_sensors.accelerometer.y = y1 * 0.0625 ; // / 15 ;\n      // evb_sensors.accelerometer.z = (bytes[index++] << 24) >> 16;\n      var z1 = evb_sensors.accelerometer.z = bytes[index++] ;\n      // z1 = ~ z1 ; \n      // z1 = ( z1 + 1 ) % 256; \n      // z1 = z1 - 128;\n      z1 = evb_sensors.accelerometer.z = z1 * 0.0625; // / 15;\n      //web of things event array payload\n      var accelerometer_x_event = {};\n      accelerometer_x_event.n = \"x\";\n      accelerometer_x_event.u = \"axis\";\n      accelerometer_x_event.n = evb_sensors.accelerometer.x;\n      event_array.push(accelerometer_x_event);\n      \n      var accelerometer_y_event = {};\n      accelerometer_y_event.n = \"\";\n      accelerometer_y_event.u = \"axis\";\n      accelerometer_y_event.n = evb_sensors.accelerometer.y;\n      event_array.push(accelerometer_y_event);\n      \n      var accelerometer_z_event = {};\n      accelerometer_z_event.n = \"z\";\n      accelerometer_z_event.u = \"axis\";\n      accelerometer_z_event.n = evb_sensors.accelerometer.z;\n      event_array.push(accelerometer_z_event);\n      break;    \n      }\n  }\n  return {\n    //temp_c: evb_sensors.temperature.c,\n    measurement: \"LoRa_demo\",\n    temp_f: evb_sensors.temperature.f,\n    moisture: evb_sensors.barometer.pa,\n    lux: evb_sensors.light.lux,\n    x_acc: evb_sensors.accelerometer.x,\n    y_acc: evb_sensors.accelerometer.y,\n    z_acc: evb_sensors.accelerometer.z,\n    events: event_array,\n  };\n} \n\nif (bytes.length == 11) {\n\n/*\n * Process the EVB LoRa GPS Survey Sweep payload.\n * \n * Byte 0 is 0\n * Byte 1 is temperature in Celsius\n * Byte 2 is 0\n * Byte 3-6 is GPS Latitude\n * Byte 7-10 is GPS Longitude\n * Bytes 10+ is padding with 0\n * \n*/  \n  var gps_event_array = [];\n  \n  var temp_c = bytes[1];\n  var temp_f = 1.8 * temp_c + 32;\n  //web of things event array payload\n  var gps_air_temp_event = {};\n  gps_air_temp_event.n = \"temperature\";\n  gps_air_temp_event.u = \"Fah\";\n  gps_air_temp_event.v = temp_f;\n  gps_event_array.push(gps_air_temp_event);\n  \n  var latitude = ((bytes[3] << 24) | (bytes[4] << 16) | (bytes[5] << 8 ) | bytes[6])  / 2147483648*90; // 2^31 * 90\n  //web of things event array payload\n  var gps_latitude_event = {};\n  gps_latitude_event.n = \"latitude\";\n  gps_latitude_event.u = \"deg\";\n  gps_latitude_event.v = latitude;\n  gps_event_array.push(gps_latitude_event);\n  \n  var longitude = ((bytes[7] << 24) | (bytes[8] << 16) | (bytes[9] << 8 ) | bytes[10]) / 2147483648*180; // 2^31 * 180\n  //web of things event array payload\n  var gps_longitude_event = {};\n  gps_longitude_event.n = \"longitude\";\n  gps_longitude_event.u = \"deg\";\n  gps_longitude_event.v = longitude;\n  gps_event_array.push(gps_longitude_event);  \n  \n // if (port === 1) decoded.led = bytes[0];\n  return {\n    measurement: \"GPS_survey\",\n    events: gps_event_array,\n    temp_f: temp_f,\n    latitude: latitude,\n    longitude: longitude,\n  };\n} else { return { payload: \"unexpected byte length\"};  \n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 2800,
        "wires": [
            [
                "30a5297b.a93276"
            ]
        ]
    },
    {
        "id": "67e5e4b131aca562",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "senseCap",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1960,
        "wires": []
    },
    {
        "id": "935ea9c0c09a1c14",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 1820,
        "wires": []
    },
    {
        "id": "878519f3.342c88",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "TTN Mbox Codec",
        "func": "//Translator for MultiTech mbox LoRaWAN survey sweep tool\n\nvar bytes = msg.payload.uplink_message.decoded_payload.bytes;\nvar dev_id = msg.device_name;\nvar hardware_serial = msg.payload.end_device_ids.device_id;\nvar counter = msg.payload.uplink_message.f_cnt;\n\nif (bytes.length == 14){  \n  var event_array = [];\n  var evb_sensors = {};\n  var EVB_TYPE = {\n    none: 0,\n    led_1: 1,\n    led_2: 2,\n    lux_max: 3,\n    lux_min: 4,\n    lux: 5,\n    barometer_max: 6,\n    barometer_min: 7,\n    barometer: 8,\n    temperature_max: 9,\n    temperature__min: 10,\n    temperature: 11,\n    accelerometer_max: 12,\n    accelerometer_min: 13,\n    accelerometer: 14,\n    tx_interval: 15,\n    amps_max: 16,\n    amps_min: 17,\n    amps: 18,\n    m2x_device: 19,\n    m2x_key: 20,\n  };\n\n/*\n * Process the EVB LoRa payload.\n *\n * EVB payload contains one or more TLV fields.\n *\n * [<type: accelerometer><length: 6><x-high><x-low><y-high><y-low><z-high><z-low>]\n * [<type: barometer><length: 3><byte2><byte1><byte0>]\n * [<type: temperature><length: 2><byte-high><byte-low>]\n * \n */\n  for (var index = 0; index < bytes.length; ) {\n    var type = bytes[index++];\n  //   var length = bytes[index++];\n    var value;\n    console.log(\"type: \" + type + \" length: \" );\n\n    switch (type) {\n    case EVB_TYPE.lux:\n      if (typeof(evb_sensors.light) == \"undefined\") {\n        evb_sensors.light = {};\n      }\n      value = bytes[index++] << 8;\n      value |= bytes[index++];\n      value = value * 0.24;\n      evb_sensors.light.lux = value;\n      // web of things \n      var lux_lighting_event = {};\n      lux_lighting_event.n = \"lux_level\";\n      lux_lighting_event.u = \"lx\";\n      lux_lighting_event.v = evb_sensors.light.lux;\n      event_array.push(lux_lighting_event);\n      break;\n    case EVB_TYPE.barometer:\n      if (typeof(evb_sensors.barometer) == \"undefined\") {\n        evb_sensors.barometer = {};\n      }\n      value = bytes[index++] << 16;\n      value |= bytes[index++] << 8;\n      value |= bytes[index++];\n      value = value * 0.00025;\n      evb_sensors.barometer.pa = value;\n      \n      //web of things event array payload\n      var relative_humidity_event = {};\n      relative_humidity_event.n = \"relative_humidity\";\n      relative_humidity_event.u = \"%RH\";\n      relative_humidity_event.v = evb_sensors.barometer.pa;\n      event_array.push(relative_humidity_event);\n      \n      break;\n    case EVB_TYPE.temperature:\n      if (typeof(evb_sensors.temperature) == \"undefined\") {\n      evb_sensors.temperature = {};\n      }\n      value = (bytes[index++] << 24) >> 16;\n      value |= bytes[index++];\n      value = value * 0.0625;\n      evb_sensors.temperature.c = value;\n      evb_sensors.temperature.f =  value * 9 / 5 + 32; \n      //web of things event array payload\n      var air_temp_event = {};\n      air_temp_event.n = \"temperature\";\n      air_temp_event.u = \"Fah\";\n      air_temp_event.v = evb_sensors.temperature.f;\n      event_array.push(air_temp_event);\n      \n      break;\n    case EVB_TYPE.accelerometer:\n      if (typeof(evb_sensors.accelerometer) == \"undefined\") {\n      evb_sensors.accelerometer = {};\n      }\n      // evb_sensors.accelerometer.x = (bytes[index++] << 24) >> 16;\n      var x1 = evb_sensors.accelerometer.x = bytes[index++] ;\n      // x1 = ~x1 ; \n      // x1 = ( x1 + 1 ) % 256; \n      evb_sensors.accelerometer.x = x1 * 0.0625;//; / 15;\n      // evb_sensors.accelerometer.y = (bytes[index++] << 24) >> 16;\n      var y1 = evb_sensors.accelerometer.y = bytes[index++] ;\n      // y1 = ~ y1 ; \n      // y1 = ( y1 + 1 ) % 256;\n        \n      y1 = evb_sensors.accelerometer.y = y1 * 0.0625 ; // / 15 ;\n      // evb_sensors.accelerometer.z = (bytes[index++] << 24) >> 16;\n      var z1 = evb_sensors.accelerometer.z = bytes[index++] ;\n      // z1 = ~ z1 ; \n      // z1 = ( z1 + 1 ) % 256; \n      // z1 = z1 - 128;\n      z1 = evb_sensors.accelerometer.z = z1 * 0.0625; // / 15;\n      //web of things event array payload\n      var accelerometer_x_event = {};\n      accelerometer_x_event.n = \"x\";\n      accelerometer_x_event.u = \"axis\";\n      accelerometer_x_event.n = evb_sensors.accelerometer.x;\n      event_array.push(accelerometer_x_event);\n      \n      var accelerometer_y_event = {};\n      accelerometer_y_event.n = \"\";\n      accelerometer_y_event.u = \"axis\";\n      accelerometer_y_event.n = evb_sensors.accelerometer.y;\n      event_array.push(accelerometer_y_event);\n      \n      var accelerometer_z_event = {};\n      accelerometer_z_event.n = \"z\";\n      accelerometer_z_event.u = \"axis\";\n      accelerometer_z_event.n = evb_sensors.accelerometer.z;\n      event_array.push(accelerometer_z_event);\n      break;    \n      }\n  }\n  return {\n    //temp_c: evb_sensors.temperature.c,\n    dev_id: dev_id,\n    hardware_serial: hardware_serial,\n    counter: counter,\n    measurement: \"LoRa_demo\",\n    temp_f: evb_sensors.temperature.f,\n    moisture: evb_sensors.barometer.pa,\n    lux: evb_sensors.light.lux,\n    x_acc: evb_sensors.accelerometer.x,\n    y_acc: evb_sensors.accelerometer.y,\n    z_acc: evb_sensors.accelerometer.z,\n    events: event_array,\n  };\n} \n\nif (bytes.length == 11) {\n\n/*\n * Process the EVB LoRa GPS Survey Sweep payload.\n * \n * Byte 0 is 0\n * Byte 1 is temperature in Celsius\n * Byte 2 is 0\n * Byte 3-6 is GPS Latitude\n * Byte 7-10 is GPS Longitude\n * Bytes 10+ is padding with 0\n * \n*/  \n  var gps_event_array = [];\n  \n  var temp_c = bytes[1];\n  var temp_f = 1.8 * temp_c + 32;\n  //web of things event array payload\n  var gps_air_temp_event = {};\n  gps_air_temp_event.n = \"temperature\";\n  gps_air_temp_event.u = \"Fah\";\n  gps_air_temp_event.v = temp_f;\n  gps_event_array.push(gps_air_temp_event);\n  \n  var latitude = ((bytes[3] << 24) | (bytes[4] << 16) | (bytes[5] << 8 ) | bytes[6])  / 2147483648*90; // 2^31 * 90\n  //web of things event array payload\n  var gps_latitude_event = {};\n  gps_latitude_event.n = \"latitude\";\n  gps_latitude_event.u = \"deg\";\n  gps_latitude_event.v = latitude;\n  gps_event_array.push(gps_latitude_event);\n  \n  var longitude = ((bytes[7] << 24) | (bytes[8] << 16) | (bytes[9] << 8 ) | bytes[10]) / 2147483648*180; // 2^31 * 180\n  //web of things event array payload\n  var gps_longitude_event = {};\n  gps_longitude_event.n = \"longitude\";\n  gps_longitude_event.u = \"deg\";\n  gps_longitude_event.v = longitude;\n  gps_event_array.push(gps_longitude_event);  \n  \n // if (port === 1) decoded.led = bytes[0];\n  return {\n    dev_id: dev_id,\n    hardware_serial: hardware_serial,\n    counter: counter,\n    measurement: \"GPS_survey\",\n    events: gps_event_array,\n    temp_f: temp_f,\n    latitude: latitude,\n    longitude: longitude,\n  };\n} else { return { payload: \"unexpected byte length\"};  \n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 2680,
        "wires": [
            [
                "7f570de8.443464",
                "f2730c07.eb44d",
                "f81c452c90a38eb6"
            ]
        ]
    },
    {
        "id": "c31034c9.52aa08",
        "type": "trigger",
        "z": "e851f138fbd198fe",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 1110,
        "y": 2760,
        "wires": [
            [
                "4fa6bad9.438c44"
            ]
        ]
    },
    {
        "id": "4fa6bad9.438c44",
        "type": "ui_gauge",
        "z": "e851f138fbd198fe",
        "name": "",
        "group": "7f2ebed0.9fcd3",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "ping",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1280,
        "y": 2760,
        "wires": []
    },
    {
        "id": "7f570de8.443464",
        "type": "switch",
        "z": "e851f138fbd198fe",
        "name": "",
        "property": "measurement",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "LoRa_demo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GPS_survey",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 920,
        "y": 2680,
        "wires": [
            [
                "55fd3b1e.39ce74",
                "6bd0cdb7.3986b4",
                "de6f17c0.a78da8",
                "98ccd05b.4dd4b",
                "d0066b2d.7b1918",
                "37234500.9c946c",
                "3d0033b5.0ddfbc",
                "92c164a6.a5e438"
            ],
            [
                "467cbadf.d25174",
                "3e45b65d.ff3aaa",
                "56a7c4cd.562f5c",
                "c31034c9.52aa08",
                "8fe302c4.bfbf4"
            ]
        ]
    },
    {
        "id": "56a7c4cd.562f5c",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "7f2ebed0.9fcd3",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperature",
        "format": "{{msg.payload.temp_f}}",
        "layout": "row-spread",
        "x": 1120,
        "y": 2880,
        "wires": []
    },
    {
        "id": "467cbadf.d25174",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "7f2ebed0.9fcd3",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Latitude",
        "format": "{{msg.payload.latitude}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 2800,
        "wires": []
    },
    {
        "id": "3e45b65d.ff3aaa",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "7f2ebed0.9fcd3",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Longitude",
        "format": "{{msg.payload.longitude}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 2840,
        "wires": []
    },
    {
        "id": "55fd3b1e.39ce74",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "87d11ec8.ee325",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Lux",
        "format": "{{msg.payload.lux}}",
        "layout": "row-spread",
        "x": 1100,
        "y": 2520,
        "wires": []
    },
    {
        "id": "6bd0cdb7.3986b4",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "87d11ec8.ee325",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Moisture",
        "format": "{{msg.payload.moisture}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 2560,
        "wires": []
    },
    {
        "id": "de6f17c0.a78da8",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "87d11ec8.ee325",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperature",
        "format": "{{msg.payload.temp_f}}",
        "layout": "row-spread",
        "x": 1120,
        "y": 2480,
        "wires": []
    },
    {
        "id": "98ccd05b.4dd4b",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "87d11ec8.ee325",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "X_Acc",
        "format": "{{msg.payload.x_acc}}",
        "layout": "row-spread",
        "x": 1100,
        "y": 2600,
        "wires": []
    },
    {
        "id": "d0066b2d.7b1918",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "87d11ec8.ee325",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Y_Acc",
        "format": "{{msg.payload.y_acc}}",
        "layout": "row-spread",
        "x": 1100,
        "y": 2640,
        "wires": []
    },
    {
        "id": "37234500.9c946c",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "87d11ec8.ee325",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Z_Acc",
        "format": "{{msg.payload.z_acc}}",
        "layout": "row-spread",
        "x": 1100,
        "y": 2680,
        "wires": []
    },
    {
        "id": "3d0033b5.0ddfbc",
        "type": "trigger",
        "z": "e851f138fbd198fe",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 1110,
        "y": 2720,
        "wires": [
            [
                "a79c555b.d6b1b8"
            ]
        ]
    },
    {
        "id": "a79c555b.d6b1b8",
        "type": "ui_gauge",
        "z": "e851f138fbd198fe",
        "name": "",
        "group": "87d11ec8.ee325",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "ping",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1280,
        "y": 2720,
        "wires": []
    },
    {
        "id": "f2730c07.eb44d",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "mulitech-TTN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 2560,
        "wires": []
    },
    {
        "id": "92c164a6.a5e438",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "Loop",
        "func": "let dev_id = msg.dev_id;\nlet hardware_serial = msg.hardware_serial;\nlet app_id = msg.app_id;\nlet counter = msg.counter;\nlet events = msg.events;\nlet influxMsg = {};\n\n\n/*\nTO Do...  when unknown_event is passed through to influxdb, it throws 400 bad request error.\nHow can I filter out using an array of bad events in my if statement most efficeintly?\nmap filter?\n\nlet exclusion_list = ['unknown_event', 'raw_data'];\n*/\ninfluxMsg.measurement = \"radio_bridge\";\n//var influxMsg = [];\n\n//if (msg.payload.object.events[i].n === \"temperature\") {\n\n/*\n122719 bdb - Doing a couple things here intentionally:  \n\n1) Stripping off raw_data packets - Already caputring them in mongodb if needed.  \n2) defining influxdb measurement equal to the name of the event from the codec.\n3) defining events[i].n \n\n*/\n\n\nfor (var i = 0 ; i < events.length; i++) {\n    //if (events[i].n !=[\"raw_data\", \"unknown_event\"] ){\n    if (events[i].n != \"raw_data\") {\n        influxMsg = [{\n            measurement: events[i].n,\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: events[i].n,\n            u: events[i].u,\n            v: events[i].v,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: events[i].n\n        }],}];\n        node.send(influxMsg);\n    } else {}\n}    \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 2440,
        "wires": [
            [
                "7f05c1bb.5f016"
            ]
        ]
    },
    {
        "id": "7f05c1bb.5f016",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1280,
        "y": 2440,
        "wires": []
    },
    {
        "id": "8fe302c4.bfbf4",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "",
        "func": "let dev_id = msg.dev_id;\nlet hardware_serial = msg.hardware_serial;\nlet app_id = msg.app_id;\nlet counter = msg.counter;\nlet events = msg.events;\nlet influxMsg = {};\n\nlet latitude = msg.latitude;\nlet longitude = msg.longitude;\nlet temp_f = msg.temp_f;\n//let frequency = msg.metadata.frequency;\n//let data_rate = msg.metadata.data_rate\n//let airtime = msg.metadata.airtime;\n\n\nlet measurement = msg.measurement;\nlet geoloc = \"mbox gps survey\"\n\ninfluxMsg = [{\nmeasurement: measurement,\npayload: [{\n    dev_id: dev_id,\n    dev_eui: hardware_serial,\n    msg_counter: counter,\n    latitude: latitude,\n    longitude: longitude,\n    temp_f: temp_f,\n    //frequency: frequency,\n    //data_rate: data_rate,\n    //airtime: airtime,\n    },{\n    app_id: app_id,\n    device_id: dev_id,\n    event_name: geoloc,\n    }],}];\n\nreturn influxMsg;    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 2920,
        "wires": [
            [
                "ab76c53c.5b4f78",
                "761461.a7a63ba"
            ]
        ]
    },
    {
        "id": "d622c24d.b2d",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1360,
        "y": 3040,
        "wires": []
    },
    {
        "id": "e7228b7d.dfabb8",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "mboxTTN",
        "links": [
            "bc0b9d76a37293e9",
            "b4053cec5e062f09"
        ],
        "x": 1445,
        "y": 2920,
        "wires": []
    },
    {
        "id": "ab76c53c.5b4f78",
        "type": "geohash",
        "z": "e851f138fbd198fe",
        "name": "",
        "property": "payload.events",
        "x": 1210,
        "y": 3040,
        "wires": [
            [
                "d622c24d.b2d"
            ]
        ]
    },
    {
        "id": "d66ec734.e963e8",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1480,
        "y": 2860,
        "wires": []
    },
    {
        "id": "761461.a7a63ba",
        "type": "switch",
        "z": "e851f138fbd198fe",
        "name": "Filter null GPS",
        "property": "payload[0].latitude",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1300,
        "y": 2920,
        "wires": [
            [
                "d66ec734.e963e8"
            ],
            [
                "e7228b7d.dfabb8",
                "56e4588c.c1c1d8"
            ]
        ]
    },
    {
        "id": "56e4588c.c1c1d8",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1480,
        "y": 2980,
        "wires": []
    },
    {
        "id": "f809a2978620b2f7",
        "type": "comment",
        "z": "e851f138fbd198fe",
        "name": "MultiTech mbox",
        "info": "",
        "x": 170,
        "y": 2500,
        "wires": []
    },
    {
        "id": "8cf570d1cc793d27",
        "type": "inject",
        "z": "e851f138fbd198fe",
        "name": "senseCap Battery",
        "props": [
            {
                "p": "ttnv3_payload",
                "v": "{\"end_device_ids\":{\"device_id\":\"eui-2cf7f1212100000f\",\"application_ids\":{\"application_id\":\"edgewoods-sensecap\"},\"dev_eui\":\"2CF7F1212100000F\",\"join_eui\":\"8000000000000008\",\"dev_addr\":\"260C8464\"},\"correlation_ids\":[\"as:up:01FKCHVHE5AJDC4NWECT8Y104H\",\"gs:conn:01FK94905DZR13AMG6DW7NF0P3\",\"gs:up:host:01FK9490A3K3E9YSRXXWEVTPYD\",\"gs:uplink:01FKCHVH7CV8W7WD1ERY2FHD0D\",\"ns:uplink:01FKCHVH7F8Y1TJS2MVH567Y1J\",\"rpc:/ttn.lorawan.v3.GsNs/HandleUplink:01FKCHVH7FND0ZMF4QSHE9VGNE\",\"rpc:/ttn.lorawan.v3.NsAs/HandleUplink:01FKCHVHE4BE6E2S2B4K5P6684\"],\"received_at\":\"2021-11-01T01:29:39.527971572Z\",\"uplink_message\":{\"session_key_id\":\"AXzYrNflA+ROUR3uzWFYBg==\",\"f_port\":2,\"f_cnt\":11,\"frm_payload\":\"AAcAZAA8AAEDEAAAAADzBg==\",\"decoded_payload\":{\"err\":0,\"messages\":[{\"battery\":100,\"type\":\"upload_battery\"},{\"interval\":3600,\"type\":\"upload_interval\"},{\"measurementId\":4099,\"measurementValue\":0,\"type\":\"report_telemetry\"}],\"payload\":\"00070064003C0001031000000000F306\",\"valid\":true},\"rx_metadata\":[{\"gateway_ids\":{\"gateway_id\":\"edgewoods-inn-1\",\"eui\":\"008000000001644F\"},\"timestamp\":2565412627,\"rssi\":-56,\"channel_rssi\":-56,\"snr\":10,\"uplink_token\":\"Ch0KGwoPZWRnZXdvb2RzLWlubi0xEggAgAAAAAFkTxCTrqTHCRoMCIOG/YsGEInjmpMBILjEiPTU9hs=\"},{\"gateway_ids\":{\"gateway_id\":\"edgewoods-ttn3-001\",\"eui\":\"00800000A000195A\"},\"timestamp\":2705065443,\"rssi\":-38,\"channel_rssi\":-38,\"snr\":9.2,\"uplink_token\":\"CiAKHgoSZWRnZXdvb2RzLXR0bjMtMDAxEggAgAAAoAAZWhDji/CJChoMCIOG/YsGEJSMn5YBILj925Pdt1s=\"},{\"gateway_ids\":{\"gateway_id\":\"edgewood-ttn-001\",\"eui\":\"58A0CBFFFE803199\"},\"time\":\"2021-11-01T01:29:39.245666980Z\",\"timestamp\":435363659,\"rssi\":-57,\"channel_rssi\":-57,\"snr\":10.5,\"uplink_token\":\"Ch4KHAoQZWRnZXdvb2QtdHRuLTAwMRIIWKDL//6AMZkQy77MzwEaDAiDhv2LBhDho7GfASD4+cjt1fQH\"}],\"settings\":{\"data_rate\":{\"lora\":{\"bandwidth\":125000,\"spreading_factor\":7}},\"data_rate_index\":3,\"coding_rate\":\"4/5\",\"frequency\":\"903900000\",\"timestamp\":2565412627},\"received_at\":\"2021-11-01T01:29:39.311917122Z\",\"confirmed\":true,\"consumed_airtime\":\"0.066816s\",\"version_ids\":{\"brand_id\":\"sensecap\",\"model_id\":\"sensecap-light\",\"hardware_version\":\"2.0\",\"firmware_version\":\"3.4\",\"band_id\":\"US_902_928\"},\"network_ids\":{\"net_id\":\"000013\",\"tenant_id\":\"ttn\",\"cluster_id\":\"ttn-nam1\"}}}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload.rows[0].device_name",
                "v": "lux-test",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "v3/edgewoods-sensecap@ttn/devices/eui-2cf7f1212100000f/up",
        "x": 230,
        "y": 2120,
        "wires": [
            [
                "3304d85528a07320",
                "98cb33fed8346b55"
            ]
        ]
    },
    {
        "id": "3304d85528a07320",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "SenseCap Loop",
        "func": "let dev_id = msg.payload.rows[0].device_name;\nlet hardware_serial = msg.ttnv3_payload.end_device_ids.dev_eui;\nlet app_id = msg.ttnv3_payload.end_device_ids.application_ids.application_id;\nlet counter = msg.ttnv3_payload.uplink_message.f_cnt;\nlet events = msg.ttnv3_payload.uplink_message.decoded_payload.messages;\n\nlet influxMsg = [];\n\n/*\nTO Do...  when unknown_event is passed through to influxdb, it throws 400 bad request error.\nHow can I filter out using an array of bad events in my if statement most efficeintly?\nmap filter?\n\nlet exclusion_list = ['unknown_event', 'raw_data'];\n*/\ninfluxMsg.measurement = \"sense_cap\";\n\n//Loop for Sensor Measurements, Battery Interval, Reporting Interval    \n\nfor (var i = 0 ; i < events.length; i++) {\n    if (typeof events[i].measurementId !== 'undefined') {\n        if (events[i].measurementId === 4102 ) {\n            var temp_f = ((events[i].measurementValue * 9/5)+32)\n    //        var temp_f = math.round((events[i].measurementValue * 9/5)+32)\n            influxMsg = [{\n                measurement: 'soil_temperature',\n                payload: [{\n                dev_id: dev_id,\n                dev_eui: hardware_serial,\n                msg_counter: counter,\n                n: 'soil_temperature',\n                u: 'Fah',\n                //v: temp_f.toFixed(2),\n                v: Number(temp_f.toFixed(2)),\n            },{\n                app_id: app_id,\n                device_id: dev_id,\n                event_name: 'soil_temperature'\n            }],}];\n            node.send(influxMsg);\n        } else {\n            if (events[i].measurementId === 4103 ) {\n            influxMsg = [{\n                measurement: 'soil_moisture',\n                payload: [{\n                dev_id: dev_id,\n                dev_eui: hardware_serial,\n                msg_counter: counter,\n                n: 'soil_moisture',\n                u: 'Moist',\n                v: events[i].measurementValue,\n            },{\n                app_id: app_id,\n                device_id: dev_id,\n                event_name: 'soil_moisture'\n            }],}];\n            node.send(influxMsg);\n        } else {\n            if (events[i].measurementId === 4099 ) {\n            influxMsg = [{\n                measurement: 'lux',\n                payload: [{\n                dev_id: dev_id,\n                dev_eui: hardware_serial,\n                msg_counter: counter,\n                n: 'lux',\n                u: 'lux',\n                v: events[i].measurementValue,\n            },{\n                app_id: app_id,\n                device_id: dev_id,\n                event_name: 'lux'\n            }],}];\n            node.send(influxMsg);\n        }}}\n    } else if (typeof events[i].battery !== 'undefined') {\n        influxMsg = [{\n            measurement: 'battery_voltage',\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: 'battery_voltage',\n            u: 'V',\n            v: events[i].battery,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: 'battery_voltage'\n        }],}];\n        node.send(influxMsg);\n    } else if (typeof events[i].interval !== 'undefined') {\n        influxMsg = [{\n            measurement: 'reporting_interval',\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: 'reporting_interval',\n            u: 'SEC',\n            v: events[i].interval,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: 'reporting_interval'\n        }],}];\n        node.send(influxMsg);\n    } else {\n        influxMsg = [{\n            measurement: 'unknown',\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: 'unknown',\n            u: 'unknown',\n            v: events[i].measurementValue,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: 'unknown'\n        }],}];\n        node.send(influxMsg);\n      \n\n    }\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 2120,
        "wires": [
            [
                "e5e7fbb22027c3b6"
            ]
        ]
    },
    {
        "id": "e5e7fbb22027c3b6",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 2120,
        "wires": []
    },
    {
        "id": "98cb33fed8346b55",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 2060,
        "wires": []
    },
    {
        "id": "a25f330c2c765f5a",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "Dragino Msg",
        "func": "let battery = msg.payload.uplink_message.decoded_payload.Bat;\nlet hardware_flag = msg.payload.uplink_message.decoded_payload.Hardware_flag;\nlet interrupt_flag = msg.payload.uplink_message.decoded_payload.Interrupt_flag;\nlet sensor_flag = msg.payload.uplink_message.decoded_payload.Interrupt_flag;\nlet tempc_ds18b20 = msg.payload.uplink_message.decoded_payload.TempC_DS18B20;\nlet conduct_soil = msg.payload.uplink_message.decoded_payload.conduct_SOIL;\nlet temp_soil = parseInt(msg.payload.uplink_message.decoded_payload.temp_SOIL);\nlet water_soil = parseFloat(msg.payload.uplink_message.decoded_payload.water_SOIL);\nlet hardware_serial = msg.payload.end_device_ids.dev_eui;\nlet counter = msg.payload.uplink_message.f_cnt;\nlet dev_id = msg.device_name;\nlet app_id = msg.payload.end_device_ids.application_ids.application_id;\n\nbatteryMsg = [{\n    measurement: 'battery_voltage',\n    payload: [{\n        dev_id: dev_id,\n        dev_eui: hardware_serial,\n        msg_counter: counter,\n        n: 'battery_voltage',\n        u: 'V',\n        v: battery,\n    },{\n        app_id: app_id,\n        device_id: dev_id,\n        event_name: 'battery_voltage'\n}],}];\n\nsoilTempMsg = [{\n    measurement: 'soil_temperature',\n    payload: [{\n        dev_id: dev_id,\n        dev_eui: hardware_serial,\n        msg_counter: counter,\n        n: 'soil_temperature',\n        u: 'Fah',\n        v: temp_soil * 9 / 5 + 32,\n    },{\n        app_id: app_id,\n        device_id: dev_id,\n        event_name: 'soil_temperature'\n}],}];\n\nsoilConductMsg = [{\n    measurement: 'soil_conductivity',\n    payload: [{\n        dev_id: dev_id,\n        dev_eui: hardware_serial,\n        msg_counter: counter,\n        n: 'soil_conductivity',\n        u: '°uS/cm',\n        v: conduct_soil,\n    },{\n        app_id: app_id,\n        device_id: dev_id,\n        event_name: 'soil_conductivity'\n}],}];\n\nsoilMoistureMsg = [{\n    measurement: 'soil_moisture',\n    payload: [{\n        dev_id: dev_id,\n        dev_eui: hardware_serial,\n        msg_counter: counter,\n        n: 'soil_moisture',\n        u: '%',\n        v: water_soil,\n    },{\n        app_id: app_id,\n        device_id: dev_id,\n        event_name: 'soil_moisture'\n}],}];\n\nreturn [batteryMsg, soilTempMsg, soilConductMsg, soilMoistureMsg];\n",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1460,
        "wires": [
            [
                "6e40d9f14980d493",
                "121b57f67a65f74f",
                "460ff8a39e54b4e5"
            ],
            [
                "6e40d9f14980d493",
                "121b57f67a65f74f",
                "0e199dd5e870a675"
            ],
            [
                "6e40d9f14980d493",
                "121b57f67a65f74f"
            ],
            [
                "6e40d9f14980d493",
                "121b57f67a65f74f"
            ]
        ]
    },
    {
        "id": "121b57f67a65f74f",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "dragino",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 1440,
        "wires": []
    },
    {
        "id": "5acf7e9b0380317c",
        "type": "mqtt in",
        "z": "e851f138fbd198fe",
        "name": "",
        "topic": "TTN/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ea745cefbcdbc96f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 380,
        "wires": [
            [
                "f0d7218cd00d391c",
                "0eae9fc35ce0775e"
            ]
        ]
    },
    {
        "id": "f0d7218cd00d391c",
        "type": "switch",
        "z": "e851f138fbd198fe",
        "name": "translator",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "TTN/dragino",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TTN/senseCap",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TTN/radioBridge",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TTN/multiTech",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 380,
        "y": 380,
        "wires": [
            [
                "f659fd4290c21a88",
                "09bebd5391d513a8"
            ],
            [
                "be86d71309237c75"
            ],
            [
                "61280ebd76c6546b"
            ],
            [
                "79e05ef6e7272571"
            ],
            [
                "5a0e57087e3150d8"
            ]
        ]
    },
    {
        "id": "f659fd4290c21a88",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "TTNdraginoOut",
        "mode": "link",
        "links": [
            "d11af781a2800808"
        ],
        "x": 645,
        "y": 280,
        "wires": []
    },
    {
        "id": "d11af781a2800808",
        "type": "link in",
        "z": "e851f138fbd198fe",
        "name": "dragino",
        "links": [
            "f659fd4290c21a88"
        ],
        "x": 155,
        "y": 1460,
        "wires": [
            [
                "d02558043be717f3",
                "43c661716420920c"
            ]
        ]
    },
    {
        "id": "be86d71309237c75",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "TTN/senseCap",
        "mode": "link",
        "links": [
            "ed25ad1929a91f84"
        ],
        "x": 645,
        "y": 320,
        "wires": []
    },
    {
        "id": "61280ebd76c6546b",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "TTN/radioBridge",
        "mode": "link",
        "links": [
            "407725419c82937a"
        ],
        "x": 645,
        "y": 360,
        "wires": []
    },
    {
        "id": "79e05ef6e7272571",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "TTN/multiTech",
        "mode": "link",
        "links": [
            "dd23fa2948974556"
        ],
        "x": 645,
        "y": 400,
        "wires": []
    },
    {
        "id": "5a0e57087e3150d8",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "TTN Uncaught",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 460,
        "wires": []
    },
    {
        "id": "ed25ad1929a91f84",
        "type": "link in",
        "z": "e851f138fbd198fe",
        "name": "senseCap",
        "links": [
            "be86d71309237c75"
        ],
        "x": 165,
        "y": 1880,
        "wires": [
            [
                "91b54c5a6e9f7916"
            ]
        ]
    },
    {
        "id": "407725419c82937a",
        "type": "link in",
        "z": "e851f138fbd198fe",
        "name": "radioBridge",
        "links": [
            "61280ebd76c6546b"
        ],
        "x": 155,
        "y": 1000,
        "wires": [
            [
                "026a9c8085a7862c"
            ]
        ]
    },
    {
        "id": "dd23fa2948974556",
        "type": "link in",
        "z": "e851f138fbd198fe",
        "name": "multiTech",
        "links": [
            "79e05ef6e7272571"
        ],
        "x": 175,
        "y": 2680,
        "wires": [
            [
                "5e72f91f649fedfa"
            ]
        ]
    },
    {
        "id": "ca603d357a1edf87",
        "type": "subflow:2b79d1365169f919",
        "z": "e851f138fbd198fe",
        "name": "",
        "x": 1130,
        "y": 380,
        "wires": [
            [
                "54c854068006d5c1"
            ],
            [
                "6ac2f7867f706c18"
            ],
            [
                "5ae7f251a44a38e5"
            ]
        ]
    },
    {
        "id": "6ac2f7867f706c18",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "subflow 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 380,
        "wires": []
    },
    {
        "id": "5ae7f251a44a38e5",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "subflow 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 440,
        "wires": []
    },
    {
        "id": "54c854068006d5c1",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "subflow 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 320,
        "wires": []
    },
    {
        "id": "0d0b8624ab777c60",
        "type": "comment",
        "z": "e851f138fbd198fe",
        "name": "TTNv3 Inbound from GCP",
        "info": "",
        "x": 210,
        "y": 80,
        "wires": []
    },
    {
        "id": "de2ec177c8fdf56b",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "Supervisory Event Loop",
        "func": "let dev_id = msg.ttnv3_payload.end_device_ids.device_id;\nlet dev_eui = msg.ttnv3_payload.end_device_ids.dev_eui;\nlet device_id = msg.payload.end_device_ids.device_id;\nlet app_id = msg.payload.end_device_ids.application_ids.application_id;\nlet decoded_payload = msg.decoded_payload;\nlet event_types = msg.decoded_payload.event_type.description\nlet events = msg.decoded_payload.events;\nconst influxMsg = {};\n\nconst supervisory_msg = {\n    dev_id: dev_id,\n    dev_eui: dev_eui,\n    decoded_payload: decoded_payload,\n    event_types: event_types,\n    events: events\n};\n\nfor (var i = 0; i < events.length; i++) {\n    if (events[i].n != \"raw_data\") {\n        // @ts-ignore\n        influxMsg = [{\n            measurement: events[i].n,\n            payload: [{\n                dev_id: dev_id,\n                dev_eui: dev_eui,\n                n: events[i].n,\n                u: events[i].u,\n                v: events[i].v,\n            }, {\n                app_id: app_id,\n                device_id: dev_id,\n                event_name: events[i].n\n            }],\n        }];\n        node.send(influxMsg);\n    } else { }\n}\nreturn influxMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 940,
        "wires": [
            [
                "132df108b01603aa"
            ]
        ]
    },
    {
        "id": "132df108b01603aa",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "Supervisory",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 940,
        "wires": []
    },
    {
        "id": "3d13014a0b7f9450",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "Supervisory",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 640,
        "wires": []
    },
    {
        "id": "fd4ca9b7c0e02d94",
        "type": "inject",
        "z": "e851f138fbd198fe",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"topic\":\"TTN/radioBridge\",\"payload\":{\"end_device_ids\":{\"device_id\":\"eui-ccc0790000ee517e\",\"application_ids\":{\"application_id\":\"edgewoods-radiobridge\"},\"dev_eui\":\"CCC0790000EE517E\",\"join_eui\":\"0101010101010101\",\"dev_addr\":\"260C8335\"},\"correlation_ids\":[\"gs:uplink:01HEKWAW8CK3QZ8ECDVPEC0YAK\"],\"received_at\":\"2023-11-07T03:13:36.736278118Z\",\"uplink_message\":{\"session_key_id\":\"AYfufZciu1tS1b6nNhK30g==\",\"f_port\":2,\"f_cnt\":17555,\"frm_payload\":\"GQEZLigVEC5gAEg=\",\"decoded_payload\":{\"Message\":\"Event: Supervisory, Battery Voltage: 2.8V, Accumulation Count: 72, Tamper Since Last Reset: 1, Current Tamper State: 1, Error With Last Downlink: 0, Battery Low: 0, Radio Comm Error: 1, Packet Counter: 9, Protocol Version: 1\",\"event_type\":{\"description\":\"Supervisory\"},\"events\":[{\"n\":\"battery_voltage\",\"u\":\"V\",\"v\":\"2.8\"},{\"n\":\"accumulation\",\"u\":\"ct\",\"v\":72},{\"n\":\"tamper_last_reset\",\"u\":\"curr\",\"v\":1},{\"n\":\"tamper_state\",\"u\":\"curr\",\"v\":1},{\"n\":\"downlink_error\",\"u\":\"status\",\"v\":0},{\"n\":\"radio_error\",\"u\":\"status\",\"v\":1}]},\"rx_metadata\":[{\"gateway_ids\":{\"gateway_id\":\"edgewoods-inn-1\",\"eui\":\"008000000001644F\"},\"timestamp\":1936300083,\"rssi\":-57,\"channel_rssi\":-57,\"snr\":7.5,\"uplink_token\":\"Ch0KGwoPZWRnZXdvb2RzLWlubi0xEggAgAAAAAFkTxCzsKabBxoMCODWpqoGENug//kBILiO6qOti4kC\",\"channel_index\":2,\"received_at\":\"2023-11-07T03:13:36.491088104Z\"},{\"gateway_ids\":{\"gateway_id\":\"edgewood-ttn-001\",\"eui\":\"58A0CBFFFE803199\"},\"time\":\"2023-11-07T03:13:36.444912910Z\",\"timestamp\":3117863875,\"rssi\":-71,\"channel_rssi\":-71,\"snr\":8.5,\"uplink_token\":\"Ch4KHAoQZWRnZXdvb2QtdHRuLTAwMRIIWKDL//6AMZkQw6fbzgsaDAjg1qaqBhCrjeqDAiC446z53s4E\",\"received_at\":\"2023-11-07T03:13:36.483516874Z\"}],\"settings\":{\"data_rate\":{\"lora\":{\"bandwidth\":125000,\"spreading_factor\":7,\"coding_rate\":\"4/5\"}},\"frequency\":\"904300000\",\"timestamp\":1936300083},\"received_at\":\"2023-11-07T03:13:36.525944533Z\",\"consumed_airtime\":\"0.061696s\",\"network_ids\":{\"net_id\":\"000013\",\"ns_id\":\"EC656E0000000182\",\"tenant_id\":\"ttn\",\"cluster_id\":\"nam1\",\"cluster_address\":\"nam1.cloud.thethings.network\"}},\"translator\":\"radioBridge\"},\"qos\":0,\"retain\":false,\"_msgid\":\"d77ca25f5a3b0807\",\"_event\":\"node:61280ebd76c6546b\",\"decoded_payload\":{\"Message\":\"Event: Supervisory, Battery Voltage: 2.8V, Accumulation Count: 72, Tamper Since Last Reset: 1, Current Tamper State: 1, Error With Last Downlink: 0, Battery Low: 0, Radio Comm Error: 1, Packet Counter: 9, Protocol Version: 1\",\"event_type\":{\"description\":\"Supervisory\"},\"events\":[{\"n\":\"battery_voltage\",\"u\":\"V\",\"v\":\"2.8\"},{\"n\":\"accumulation\",\"u\":\"ct\",\"v\":72},{\"n\":\"tamper_last_reset\",\"u\":\"curr\",\"v\":1},{\"n\":\"tamper_state\",\"u\":\"curr\",\"v\":1},{\"n\":\"downlink_error\",\"u\":\"status\",\"v\":0},{\"n\":\"radio_error\",\"u\":\"status\",\"v\":1}]},\"ttnv3_payload\":{\"end_device_ids\":{\"device_id\":\"eui-ccc0790000ee517e\",\"application_ids\":{\"application_id\":\"edgewoods-radiobridge\"},\"dev_eui\":\"CCC0790000EE517E\",\"join_eui\":\"0101010101010101\",\"dev_addr\":\"260C8335\"},\"correlation_ids\":[\"gs:uplink:01HEKWAW8CK3QZ8ECDVPEC0YAK\"],\"received_at\":\"2023-11-07T03:13:36.736278118Z\",\"uplink_message\":{\"session_key_id\":\"AYfufZciu1tS1b6nNhK30g==\",\"f_port\":2,\"f_cnt\":17555,\"frm_payload\":\"GQEZLigVEC5gAEg=\",\"decoded_payload\":{\"Message\":\"Event: Supervisory, Battery Voltage: 2.8V, Accumulation Count: 72, Tamper Since Last Reset: 1, Current Tamper State: 1, Error With Last Downlink: 0, Battery Low: 0, Radio Comm Error: 1, Packet Counter: 9, Protocol Version: 1\",\"event_type\":{\"description\":\"Supervisory\"},\"events\":[{\"n\":\"battery_voltage\",\"u\":\"V\",\"v\":\"2.8\"},{\"n\":\"accumulation\",\"u\":\"ct\",\"v\":72},{\"n\":\"tamper_last_reset\",\"u\":\"curr\",\"v\":1},{\"n\":\"tamper_state\",\"u\":\"curr\",\"v\":1},{\"n\":\"downlink_error\",\"u\":\"status\",\"v\":0},{\"n\":\"radio_error\",\"u\":\"status\",\"v\":1}]},\"rx_metadata\":[{\"gateway_ids\":{\"gateway_id\":\"edgewoods-inn-1\",\"eui\":\"008000000001644F\"},\"timestamp\":1936300083,\"rssi\":-57,\"channel_rssi\":-57,\"snr\":7.5,\"uplink_token\":\"Ch0KGwoPZWRnZXdvb2RzLWlubi0xEggAgAAAAAFkTxCzsKabBxoMCODWpqoGENug//kBILiO6qOti4kC\",\"channel_index\":2,\"received_at\":\"2023-11-07T03:13:36.491088104Z\"},{\"gateway_ids\":{\"gateway_id\":\"edgewood-ttn-001\",\"eui\":\"58A0CBFFFE803199\"},\"time\":\"2023-11-07T03:13:36.444912910Z\",\"timestamp\":3117863875,\"rssi\":-71,\"channel_rssi\":-71,\"snr\":8.5,\"uplink_token\":\"Ch4KHAoQZWRnZXdvb2QtdHRuLTAwMRIIWKDL//6AMZkQw6fbzgsaDAjg1qaqBhCrjeqDAiC446z53s4E\",\"received_at\":\"2023-11-07T03:13:36.483516874Z\"}],\"settings\":{\"data_rate\":{\"lora\":{\"bandwidth\":125000,\"spreading_factor\":7,\"coding_rate\":\"4/5\"}},\"frequency\":\"904300000\",\"timestamp\":1936300083},\"received_at\":\"2023-11-07T03:13:36.525944533Z\",\"consumed_airtime\":\"0.061696s\",\"network_ids\":{\"net_id\":\"000013\",\"ns_id\":\"EC656E0000000182\",\"tenant_id\":\"ttn\",\"cluster_id\":\"nam1\",\"cluster_address\":\"nam1.cloud.thethings.network\"}},\"translator\":\"radioBridge\"},\"device_name\":\"temp-rh-master-bedroom\"}",
        "payloadType": "json",
        "x": 650,
        "y": 720,
        "wires": [
            [
                "3d13014a0b7f9450",
                "026a9c8085a7862c"
            ]
        ]
    },
    {
        "id": "43c661716420920c",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "dragino",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 1400,
        "wires": []
    },
    {
        "id": "09bebd5391d513a8",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "Dragino",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 200,
        "wires": []
    },
    {
        "id": "0eae9fc35ce0775e",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "Raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 230,
        "y": 260,
        "wires": []
    },
    {
        "id": "29800be510ad7f99",
        "type": "mqtt in",
        "z": "e851f138fbd198fe",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "76f8126894e2f90f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 1580,
        "wires": [
            [
                "3a36f2aff1175754"
            ]
        ]
    },
    {
        "id": "ee89fbed7d4dbdd8",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "TTN Dragino",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 1580,
        "wires": []
    },
    {
        "id": "3a36f2aff1175754",
        "type": "json",
        "z": "e851f138fbd198fe",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 1580,
        "wires": [
            [
                "ee89fbed7d4dbdd8",
                "d02558043be717f3"
            ]
        ]
    },
    {
        "id": "f81c452c90a38eb6",
        "type": "switch",
        "z": "e851f138fbd198fe",
        "name": "Switch on Measurement",
        "property": "measurement",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "LoRa_demo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GPS_survey",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 3440,
        "wires": [
            [
                "dd9f2d872f50a844",
                "29aa9d6f70f74d40"
            ],
            [
                "63c596839a7129b9",
                "e952918d55940012"
            ]
        ]
    },
    {
        "id": "0e92beb4ed0ec070",
        "type": "ui-text",
        "z": "e851f138fbd198fe",
        "group": "4294f6c6248e3240",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperature",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "Times New Roman,Times,serif",
        "fontSize": "20",
        "color": "#000000",
        "className": "",
        "x": 2100,
        "y": 2400,
        "wires": []
    },
    {
        "id": "0df47f0ed39d9690",
        "type": "change",
        "z": "e851f138fbd198fe",
        "name": "Temperature",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "temp_f",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1900,
        "y": 2400,
        "wires": [
            [
                "0e92beb4ed0ec070",
                "e0b72e5c2c3cf323"
            ]
        ]
    },
    {
        "id": "d5c4ad6d1ca3ceee",
        "type": "ui-text",
        "z": "e851f138fbd198fe",
        "group": "4294f6c6248e3240",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Lux",
        "label": "Lux",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "className": "",
        "x": 2080,
        "y": 2460,
        "wires": []
    },
    {
        "id": "30d11f7cb5864c3f",
        "type": "change",
        "z": "e851f138fbd198fe",
        "name": "Lux",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "lux",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 2460,
        "wires": [
            [
                "d5c4ad6d1ca3ceee"
            ]
        ]
    },
    {
        "id": "43f49c491f066453",
        "type": "ui-text",
        "z": "e851f138fbd198fe",
        "group": "4294f6c6248e3240",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Moisture",
        "label": "Moisture",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "className": "",
        "x": 2090,
        "y": 2520,
        "wires": []
    },
    {
        "id": "3b08e41885d6970b",
        "type": "change",
        "z": "e851f138fbd198fe",
        "name": "Moisture",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "moisture",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1910,
        "y": 2520,
        "wires": [
            [
                "43f49c491f066453"
            ]
        ]
    },
    {
        "id": "882784aac1a42620",
        "type": "ui-text",
        "z": "e851f138fbd198fe",
        "group": "4294f6c6248e3240",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "X_Acc",
        "label": "X_Acc",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "className": "",
        "x": 2080,
        "y": 2580,
        "wires": []
    },
    {
        "id": "d4aa8d8c5c50dbad",
        "type": "change",
        "z": "e851f138fbd198fe",
        "name": "X_Acc",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "x_acc",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 2580,
        "wires": [
            [
                "882784aac1a42620"
            ]
        ]
    },
    {
        "id": "fb90cbfa439db46d",
        "type": "ui-text",
        "z": "e851f138fbd198fe",
        "group": "4294f6c6248e3240",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Y_Acc",
        "label": "Y_Acc",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "className": "",
        "x": 2080,
        "y": 2640,
        "wires": []
    },
    {
        "id": "48d83429b5f298b6",
        "type": "change",
        "z": "e851f138fbd198fe",
        "name": "Y_Acc",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "y_acc",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 2640,
        "wires": [
            [
                "fb90cbfa439db46d"
            ]
        ]
    },
    {
        "id": "038b6d2470c35791",
        "type": "ui-text",
        "z": "e851f138fbd198fe",
        "group": "4294f6c6248e3240",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Z_Acc",
        "label": "Z_Acc",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "className": "",
        "x": 2080,
        "y": 2700,
        "wires": []
    },
    {
        "id": "4d91568acafdc4fb",
        "type": "change",
        "z": "e851f138fbd198fe",
        "name": "Z_Acc",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "z_acc",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 2700,
        "wires": [
            [
                "038b6d2470c35791"
            ]
        ]
    },
    {
        "id": "dd9f2d872f50a844",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "loraDemo",
        "mode": "link",
        "links": [
            "7cb81c6a8cf634f5"
        ],
        "x": 1085,
        "y": 3380,
        "wires": []
    },
    {
        "id": "7cb81c6a8cf634f5",
        "type": "link in",
        "z": "e851f138fbd198fe",
        "name": "loraDemo",
        "links": [
            "dd9f2d872f50a844"
        ],
        "x": 1745,
        "y": 2580,
        "wires": [
            [
                "0df47f0ed39d9690",
                "30d11f7cb5864c3f",
                "3b08e41885d6970b",
                "d4aa8d8c5c50dbad",
                "48d83429b5f298b6",
                "4d91568acafdc4fb",
                "8671bbb888fba950"
            ]
        ]
    },
    {
        "id": "8671bbb888fba950",
        "type": "trigger",
        "z": "e851f138fbd198fe",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 1930,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "a013792da3aa6952",
        "type": "ui-text",
        "z": "e851f138fbd198fe",
        "group": "8821e93c333d644a",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Latitude",
        "label": "Latitude",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "className": "",
        "x": 2080,
        "y": 2880,
        "wires": []
    },
    {
        "id": "75d3826fc0ea43d8",
        "type": "change",
        "z": "e851f138fbd198fe",
        "name": "Latitude",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "latitude",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1900,
        "y": 2880,
        "wires": [
            [
                "a013792da3aa6952"
            ]
        ]
    },
    {
        "id": "117a741e1111e829",
        "type": "change",
        "z": "e851f138fbd198fe",
        "name": "Longitude",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "longitude",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1900,
        "y": 2940,
        "wires": [
            [
                "98bba748cb4f4fd9"
            ]
        ]
    },
    {
        "id": "98bba748cb4f4fd9",
        "type": "ui-text",
        "z": "e851f138fbd198fe",
        "group": "8821e93c333d644a",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Longitude",
        "label": "Longitude",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "Times New Roman,Times,serif",
        "fontSize": "20",
        "color": "#000000",
        "className": "",
        "x": 2080,
        "y": 2940,
        "wires": []
    },
    {
        "id": "63c596839a7129b9",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "gpsSweep",
        "mode": "link",
        "links": [
            "2369d0507ef395a0"
        ],
        "x": 1065,
        "y": 3500,
        "wires": []
    },
    {
        "id": "2369d0507ef395a0",
        "type": "link in",
        "z": "e851f138fbd198fe",
        "name": "gpsSweep",
        "links": [
            "63c596839a7129b9"
        ],
        "x": 1735,
        "y": 2940,
        "wires": [
            [
                "75d3826fc0ea43d8",
                "117a741e1111e829",
                "261b21b54aefc131",
                "3f13655f3d9320eb"
            ]
        ]
    },
    {
        "id": "261b21b54aefc131",
        "type": "change",
        "z": "e851f138fbd198fe",
        "name": "Temperature",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "temp_f",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1910,
        "y": 3000,
        "wires": [
            [
                "e534c4eb817722e5"
            ]
        ]
    },
    {
        "id": "e534c4eb817722e5",
        "type": "ui-text",
        "z": "e851f138fbd198fe",
        "group": "8821e93c333d644a",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Temperature",
        "label": "Temperature",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "Times New Roman,Times,serif",
        "fontSize": "20",
        "color": "#000000",
        "className": "",
        "x": 2090,
        "y": 3000,
        "wires": []
    },
    {
        "id": "3f13655f3d9320eb",
        "type": "trigger",
        "z": "e851f138fbd198fe",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 1900,
        "y": 3060,
        "wires": [
            []
        ]
    },
    {
        "id": "29aa9d6f70f74d40",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "lora demo debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 3320,
        "wires": []
    },
    {
        "id": "e952918d55940012",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "gps sweep debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 3560,
        "wires": []
    },
    {
        "id": "09480aa2ab7c7695",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "lora demo debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 3220,
        "wires": []
    },
    {
        "id": "e0b72e5c2c3cf323",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2068.571533203125,
        "y": 2322.857177734375,
        "wires": []
    },
    {
        "id": "460ff8a39e54b4e5",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "Battery Supervisory",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 1380,
        "wires": []
    },
    {
        "id": "aaa98b8877775643",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "Supervisory Message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1000,
        "wires": []
    },
    {
        "id": "edc84a75edc4d17c",
        "type": "switch",
        "z": "e851f138fbd198fe",
        "name": "",
        "property": "measurement",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "soil_temperature",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 850,
        "y": 1820,
        "wires": [
            [
                "402eb00f2123d803"
            ],
            []
        ]
    },
    {
        "id": "402eb00f2123d803",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "soil_temperature",
        "func": "// Transform SenseCap Soil Temperature Payload into other payloads\n\nvar mesaurement = msg.measurement;\nvar node_id = 1000;\nvar command_class = 49;\nvar property = msg.payload[0].n;\nvar value = msg.payload[0].v;\nvar unit = 'F';\n\nmsg.soil_temperature = {\n    \n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "0e199dd5e870a675",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "draginoSoilTemperature",
        "mode": "link",
        "links": [
            "5f6ae425d94b21e6"
        ],
        "x": 905,
        "y": 1240,
        "wires": []
    },
    {
        "id": "4081a840.16fb98",
        "type": "server-events",
        "z": "abf038f.43da5c8",
        "name": "",
        "server": "5010ad6c.df5ca4",
        "version": 3,
        "exposeAsEntityConfig": "",
        "eventType": "",
        "eventData": "",
        "waitForRunning": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            },
            {
                "property": "event_type",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            }
        ],
        "x": 160,
        "y": 160,
        "wires": [
            [
                "4190eae8.4d2674",
                "f40be16e.e1fea"
            ]
        ]
    },
    {
        "id": "4190eae8.4d2674",
        "type": "switch",
        "z": "abf038f.43da5c8",
        "name": "",
        "property": "payload.entity_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "arris",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sun.sun",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 370,
        "y": 160,
        "wires": [
            [],
            [
                "b9709e8fb2d0a6bb"
            ],
            [
                "d80df6ac6bc0499b"
            ]
        ]
    },
    {
        "id": "f40be16e.e1fea",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "events_all",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 80,
        "wires": []
    },
    {
        "id": "ce9549c0.9f9bb8",
        "type": "poll-state",
        "z": "abf038f.43da5c8",
        "name": "",
        "server": "5010ad6c.df5ca4",
        "version": 3,
        "exposeAsEntityConfig": "",
        "updateInterval": "12",
        "updateIntervalType": "num",
        "updateIntervalUnits": "hours",
        "outputInitially": false,
        "outputOnChanged": true,
        "entityId": "sensor.bdb_steps",
        "stateType": "str",
        "ifState": "",
        "ifStateType": "str",
        "ifStateOperator": "is",
        "outputs": 1,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 220,
        "y": 400,
        "wires": [
            [
                "2197074d.3fcc48"
            ]
        ]
    },
    {
        "id": "5b38785a.a44098",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 340,
        "wires": []
    },
    {
        "id": "c0421365.4231b",
        "type": "api-current-state",
        "z": "abf038f.43da5c8",
        "name": "",
        "server": "5010ad6c.df5ca4",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 460,
        "y": 600,
        "wires": [
            [
                "90582645.c45d08"
            ]
        ]
    },
    {
        "id": "85485c33.afc0e",
        "type": "inject",
        "z": "abf038f.43da5c8",
        "name": "",
        "props": [
            {
                "p": "payload.entity_id",
                "v": "zwave.diningroom_dimmer_switch",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 260,
        "y": 600,
        "wires": [
            [
                "c0421365.4231b"
            ]
        ]
    },
    {
        "id": "90582645.c45d08",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 600,
        "wires": []
    },
    {
        "id": "2197074d.3fcc48",
        "type": "function",
        "z": "abf038f.43da5c8",
        "name": "Format Measurement",
        "func": "let entity_id = msg.data.entity_id;\nlet state = msg.data.state;\nlet unit_of_measure = msg.data.attributes.unit_of_measurement;\nlet friendly_name = msg.data.attributes.friendly_name;\nlet icon = msg.data.attributes.icon;\n\ninfluxMsg = [{\n    measurement: unit_of_measure,\n    payload: [{\n    n: friendly_name,\n    u: unit_of_measure,\n    v: Number(state),\n},{\n    entity_id: entity_id,\n    event_name: unit_of_measure\n}],}];\n\nreturn(influxMsg);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 400,
        "wires": [
            [
                "5b38785a.a44098",
                "b0fefa1b.c9ef88"
            ]
        ]
    },
    {
        "id": "b0fefa1b.c9ef88",
        "type": "link out",
        "z": "abf038f.43da5c8",
        "name": "stepsOut",
        "links": [
            "284ffe0f.351742"
        ],
        "x": 635,
        "y": 400,
        "wires": []
    },
    {
        "id": "33b5856b.1f57ba",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 360,
        "wires": []
    },
    {
        "id": "358994d6.45e81c",
        "type": "api-call-service",
        "z": "abf038f.43da5c8",
        "name": "Front Porch",
        "server": "5010ad6c.df5ca4",
        "version": 7,
        "debugenabled": false,
        "action": "switch.{{payload}}",
        "floorId": [],
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.nodeid_15_switch"
        ],
        "labelId": [],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "blockInputOverrides": false,
        "domain": "switch",
        "service": "{{payload}}",
        "x": 1350,
        "y": 360,
        "wires": [
            [
                "33b5856b.1f57ba"
            ]
        ]
    },
    {
        "id": "18c2a428.dbffac",
        "type": "inject",
        "z": "abf038f.43da5c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "turn_off",
        "payloadType": "str",
        "x": 1150,
        "y": 360,
        "wires": [
            [
                "358994d6.45e81c"
            ]
        ]
    },
    {
        "id": "1a8c1e18.6456e2",
        "type": "bigtimer",
        "z": "abf038f.43da5c8",
        "outtopic": "",
        "outpayload1": "turn_on",
        "outpayload2": "turn_off",
        "name": "Big Timer",
        "comment": "",
        "lat": "45° 05' 38.87\" N",
        "lon": "-93° 21' 22.82\" W",
        "starttime": 5001,
        "endtime": 1425,
        "starttime2": "5000",
        "endtime2": "510",
        "startoff": 0,
        "endoff": 0,
        "startoff2": 0,
        "endoff2": 0,
        "offs": "-6",
        "outtext1": "turn_on",
        "outtext2": "turn_off",
        "timeout": 1440,
        "sun": true,
        "mon": true,
        "tue": true,
        "wed": true,
        "thu": true,
        "fri": true,
        "sat": true,
        "jan": true,
        "feb": true,
        "mar": true,
        "apr": true,
        "may": true,
        "jun": true,
        "jul": true,
        "aug": true,
        "sep": true,
        "oct": true,
        "nov": true,
        "dec": true,
        "day1": 0,
        "month1": 0,
        "day2": 0,
        "month2": 0,
        "day3": 0,
        "month3": 0,
        "day4": 0,
        "month4": 0,
        "day5": 0,
        "month5": 0,
        "day6": 0,
        "month6": 0,
        "day7": 0,
        "month7": 0,
        "day8": 0,
        "month8": 0,
        "day9": 0,
        "month9": 0,
        "day10": 0,
        "month10": 0,
        "day11": 0,
        "month11": 0,
        "day12": 0,
        "month12": 0,
        "d1": 0,
        "w1": 0,
        "d2": 0,
        "w2": 0,
        "d3": 0,
        "w3": 0,
        "d4": 0,
        "w4": 0,
        "d5": 0,
        "w5": 0,
        "d6": 0,
        "w6": 0,
        "xday1": 0,
        "xmonth1": 0,
        "xday2": 0,
        "xmonth2": 0,
        "xday3": 0,
        "xmonth3": 0,
        "xday4": 0,
        "xmonth4": 0,
        "xday5": 0,
        "xmonth5": 0,
        "xday6": 0,
        "xmonth6": 0,
        "xday7": 0,
        "xmonth7": 0,
        "xday8": 0,
        "xmonth8": 0,
        "xday9": 0,
        "xmonth9": 0,
        "xday10": 0,
        "xmonth10": 0,
        "xday11": 0,
        "xmonth11": 0,
        "xday12": 0,
        "xmonth12": 0,
        "xd1": 0,
        "xw1": 0,
        "xd2": 0,
        "xw2": 0,
        "xd3": 0,
        "xw3": 0,
        "xd4": 0,
        "xw4": 0,
        "xd5": 0,
        "xw5": 0,
        "xd6": 0,
        "xw6": 0,
        "suspend": false,
        "random": false,
        "randon1": false,
        "randoff1": false,
        "randon2": false,
        "randoff2": false,
        "repeat": true,
        "atstart": true,
        "odd": false,
        "even": false,
        "x": 1140,
        "y": 420,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "748d9ccf.e4c594",
        "type": "inject",
        "z": "abf038f.43da5c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "turn_on",
        "payloadType": "str",
        "x": 1150,
        "y": 300,
        "wires": [
            [
                "358994d6.45e81c"
            ]
        ]
    },
    {
        "id": "4aa2b8c1.2148a8",
        "type": "json",
        "z": "abf038f.43da5c8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1130,
        "y": 1180,
        "wires": [
            [
                "495bcfbf41b13688"
            ]
        ]
    },
    {
        "id": "25118149.16b94e",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 1260,
        "wires": []
    },
    {
        "id": "ff38493bee40bb6d",
        "type": "function",
        "z": "abf038f.43da5c8",
        "name": "kWh InfluxDB",
        "func": "let measurement = 'kWh';\nlet label = msg.payload.label;\nlet node_name = msg.payload.nodeName;\nlet node_location = msg.payload.nodeLocation;\nlet value = msg.payload.value;\nlet unit = msg.payload.unit;\nlet property_key = msg.payload.propertyKey;\nlet command_class = msg.payload.commandClassName;\n\ninfluxMsg = [{\n    measurement: measurement,\n    payload: [{\n    node_name: node_name,\n    node_location: node_location,\n    msg_counter: property_key,\n    n: label,\n    u: unit,\n    v: value,\n},{\n    command_class: command_class,\n    node: node_name,\n    event_name: label\n}],}];\n\nreturn influxMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 1140,
        "wires": [
            [
                "5f56447dba52498e"
            ]
        ]
    },
    {
        "id": "0e260be5f4121378",
        "type": "switch",
        "z": "abf038f.43da5c8",
        "name": "Electric",
        "property": "payload.propertyKeyName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Electric_kWh_Consumed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Electric_W_Consumed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Electric_A_Consumed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Electric_V_Consumed",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1440,
        "y": 1180,
        "wires": [
            [
                "ff38493bee40bb6d"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "5f56447dba52498e",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "Electric_kWh_Consumed",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 1140,
        "wires": []
    },
    {
        "id": "495bcfbf41b13688",
        "type": "switch",
        "z": "abf038f.43da5c8",
        "name": "Meters",
        "property": "payload.commandClassName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Meter",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1290,
        "y": 1180,
        "wires": [
            [
                "0e260be5f4121378",
                "d4973c8eb18cef3a"
            ],
            [
                "25118149.16b94e"
            ]
        ]
    },
    {
        "id": "d4973c8eb18cef3a",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f120698c6e114e4f",
        "type": "api-current-state",
        "z": "abf038f.43da5c8",
        "name": "Mech Room RH",
        "server": "5010ad6c.df5ca4",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.nodeid_10_humidity_air",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 290,
        "y": 780,
        "wires": [
            [
                "93a7109d70da5476"
            ]
        ]
    },
    {
        "id": "d27d8aa741558dcd",
        "type": "inject",
        "z": "abf038f.43da5c8",
        "name": "",
        "props": [
            {
                "p": "payload.entity_id",
                "v": "sensor.nodeid_10_temperature_air",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 780,
        "wires": [
            [
                "f120698c6e114e4f"
            ]
        ]
    },
    {
        "id": "93a7109d70da5476",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 780,
        "wires": []
    },
    {
        "id": "d80df6ac6bc0499b",
        "type": "switch",
        "z": "abf038f.43da5c8",
        "name": "",
        "property": "payload.entity_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sensor.greatroom_diverlight_electric_v_value",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 240,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "328a53a82b51ab4b",
        "type": "mqtt out",
        "z": "abf038f.43da5c8",
        "name": "",
        "topic": "homeAssistant",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3b0217bc.de55b8",
        "x": 730,
        "y": 220,
        "wires": []
    },
    {
        "id": "b1ab0e146ae096fe",
        "type": "mqtt in",
        "z": "abf038f.43da5c8",
        "name": "",
        "topic": "zwave/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "ea745cefbcdbc96f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 1260,
        "wires": [
            [
                "d50481635cd31d07"
            ]
        ]
    },
    {
        "id": "d50481635cd31d07",
        "type": "json",
        "z": "abf038f.43da5c8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 490,
        "y": 1260,
        "wires": [
            [
                "4d96bfcd5c092bc1"
            ]
        ]
    },
    {
        "id": "4d96bfcd5c092bc1",
        "type": "switch",
        "z": "abf038f.43da5c8",
        "name": "entity_id switch",
        "property": "payload.entity_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sensor.greatroom_diverlight_electric_w_value",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 680,
        "y": 1260,
        "wires": [
            [
                "d4f64d290fb92eb1"
            ],
            [
                "87322223916f5c01"
            ]
        ]
    },
    {
        "id": "acdd85bfd20ef1c5",
        "type": "inject",
        "z": "abf038f.43da5c8",
        "name": "low battery",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"topic\":\"zwave/greatRoom/multisensor/128/0/isLow\",\"payload\":{\"id\":\"19-128-0-isLow\",\"nodeId\":19,\"commandClass\":128,\"commandClassName\":\"Battery\",\"endpoint\":0,\"property\":\"isLow\",\"propertyName\":\"isLow\",\"type\":\"boolean\",\"readable\":true,\"writeable\":false,\"label\":\"Low battery level\",\"stateless\":false,\"commandClassVersion\":1,\"list\":false,\"value\":false,\"lastUpdate\":1651891689564,\"nodeName\":\"multisensor\",\"nodeLocation\":\"greatRoom\"},\"qos\":1,\"retain\":false,\"_msgid\":\"e7bf9596917ccdc2\"}",
        "payloadType": "json",
        "x": 460,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "d4f64d290fb92eb1",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "diver_light",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1220,
        "wires": []
    },
    {
        "id": "87322223916f5c01",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "Otherwise",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 1300,
        "wires": []
    },
    {
        "id": "b9709e8fb2d0a6bb",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "sun state",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 160,
        "wires": []
    },
    {
        "id": "b32652e0a0d1340a",
        "type": "mqtt in",
        "z": "baf4429beef64559",
        "name": "",
        "topic": "zwave/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3b0217bc.de55b8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 180,
        "wires": [
            [
                "2dc71c99fac9c3a6",
                "466411f1efff70b4",
                "2af908cd32b804d1"
            ]
        ]
    },
    {
        "id": "2dc71c99fac9c3a6",
        "type": "debug",
        "z": "baf4429beef64559",
        "name": "Z-Wave Out",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 60,
        "wires": []
    },
    {
        "id": "466411f1efff70b4",
        "type": "switch",
        "z": "baf4429beef64559",
        "name": "node_id",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 360,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "2af908cd32b804d1",
        "type": "switch",
        "z": "baf4429beef64559",
        "name": "topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "greatRoom",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "bdb_office",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "disco_ball",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "masterBedRoom",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "multiSensor",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 370,
        "y": 180,
        "wires": [
            [
                "2a07b95e4ff6de7d"
            ],
            [
                "2f7e8bb17c740ed2"
            ],
            [],
            [],
            [
                "2bc444050b913fba"
            ],
            [
                "2d02f85299e20d6c"
            ]
        ]
    },
    {
        "id": "2a07b95e4ff6de7d",
        "type": "debug",
        "z": "baf4429beef64559",
        "name": "Great Room",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 160,
        "wires": []
    },
    {
        "id": "30a6c984ca15cee0",
        "type": "inject",
        "z": "baf4429beef64559",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"id\":\"23-50-0-value-66817\",\"nodeId\":23,\"toUpdate\":false,\"commandClass\":50,\"commandClassName\":\"Meter\",\"endpoint\":0,\"property\":\"value\",\"propertyName\":\"value\",\"propertyKey\":66817,\"propertyKeyName\":\"Electric_A_Consumed\",\"type\":\"number\",\"readable\":true,\"writeable\":false,\"label\":\"Electric Consumption [A]\",\"ccSpecific\":{\"meterType\":1,\"scale\":5,\"rateType\":1},\"stateless\":false,\"commandClassVersion\":5,\"unit\":\"A\",\"list\":false,\"value\":0.17,\"lastUpdate\":1729039201024,\"nodeName\":\"bdb_office_lamp\",\"nodeLocation\":\"bdb_office\"}",
        "payloadType": "json",
        "x": 150,
        "y": 700,
        "wires": [
            [
                "676e2db77004eb7d"
            ]
        ]
    },
    {
        "id": "2f7e8bb17c740ed2",
        "type": "debug",
        "z": "baf4429beef64559",
        "name": "BDB Office",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 200,
        "wires": []
    },
    {
        "id": "4a28e6e4393e0bb3",
        "type": "inject",
        "z": "baf4429beef64559",
        "name": "multisensor battery",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"id\":\"19-48-0-Any\",\"nodeId\":19,\"toUpdate\":false,\"commandClass\":48,\"commandClassName\":\"Binary Sensor\",\"endpoint\":0,\"property\":\"Any\",\"propertyName\":\"Any\",\"type\":\"boolean\",\"readable\":true,\"writeable\":false,\"label\":\"Any\",\"ccSpecific\":{\"sensorType\":255},\"stateless\":false,\"commandClassVersion\":1,\"list\":false,\"value\":false,\"lastUpdate\":1729039454518,\"nodeName\":\"multisensor\",\"nodeLocation\":\"greatRoom\"}",
        "payloadType": "json",
        "x": 170,
        "y": 760,
        "wires": [
            [
                "676e2db77004eb7d"
            ]
        ]
    },
    {
        "id": "676e2db77004eb7d",
        "type": "debug",
        "z": "baf4429beef64559",
        "name": "Z-Wave Out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 700,
        "wires": []
    },
    {
        "id": "2d02f85299e20d6c",
        "type": "debug",
        "z": "baf4429beef64559",
        "name": "Z-Wave Out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 360,
        "wires": []
    },
    {
        "id": "2bc444050b913fba",
        "type": "debug",
        "z": "baf4429beef64559",
        "name": "Z-Wave MultiSensor",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 300,
        "wires": []
    },
    {
        "id": "3c542be820bf546d",
        "type": "inject",
        "z": "baf4429beef64559",
        "name": "Illuminance",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"id\":\"10-49-0-Illuminance\",\"nodeId\":10,\"toUpdate\":false,\"commandClass\":49,\"commandClassName\":\"Multilevel Sensor\",\"endpoint\":0,\"property\":\"Illuminance\",\"propertyName\":\"Illuminance\",\"type\":\"number\",\"readable\":true,\"writeable\":false,\"label\":\"Illuminance\",\"ccSpecific\":{\"sensorType\":3,\"scale\":1},\"stateless\":false,\"commandClassVersion\":5,\"unit\":\"Lux\",\"list\":false,\"value\":0,\"lastUpdate\":1729133481661,\"nodeName\":\"multiSensor\",\"nodeLocation\":\"mechanicalRoom\"}",
        "payloadType": "json",
        "x": 690,
        "y": 700,
        "wires": [
            [
                "d6f876ce87296fed"
            ]
        ]
    },
    {
        "id": "c715c4ece951ad36",
        "type": "inject",
        "z": "baf4429beef64559",
        "name": "Humidity",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"id\":\"10-49-0-Humidity\",\"nodeId\":10,\"toUpdate\":false,\"commandClass\":49,\"commandClassName\":\"Multilevel Sensor\",\"endpoint\":0,\"property\":\"Humidity\",\"propertyName\":\"Humidity\",\"type\":\"number\",\"readable\":true,\"writeable\":false,\"label\":\"Humidity\",\"ccSpecific\":{\"sensorType\":5,\"scale\":0},\"stateless\":false,\"commandClassVersion\":5,\"unit\":\"%\",\"list\":false,\"value\":32,\"lastUpdate\":1729133480823,\"nodeName\":\"multiSensor\",\"nodeLocation\":\"mechanicalRoom\"}",
        "payloadType": "json",
        "x": 740,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "104a6d753504aa9b",
        "type": "inject",
        "z": "baf4429beef64559",
        "name": "Temperature",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"id\":\"10-49-0-Air temperature\",\"nodeId\":10,\"toUpdate\":false,\"commandClass\":49,\"commandClassName\":\"Multilevel Sensor\",\"endpoint\":0,\"property\":\"Air temperature\",\"propertyName\":\"Air temperature\",\"type\":\"number\",\"readable\":true,\"writeable\":false,\"label\":\"Air temperature\",\"ccSpecific\":{\"sensorType\":1,\"scale\":1},\"stateless\":false,\"commandClassVersion\":5,\"unit\":\"°F\",\"list\":false,\"value\":75.3,\"lastUpdate\":1729133480690,\"nodeName\":\"multiSensor\",\"nodeLocation\":\"mechanicalRoom\"}",
        "payloadType": "json",
        "x": 750,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "6aeb26be85f7c6c3",
        "type": "inject",
        "z": "baf4429beef64559",
        "name": "Mechanical Room Battery",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"topic\":\"zwave/mechanicalRoom/multiSensor/128/0/isLow\",\"payload\":{\"id\":\"10-128-0-isLow\",\"nodeId\":10,\"toUpdate\":false,\"commandClass\":128,\"commandClassName\":\"Battery\",\"endpoint\":0,\"property\":\"isLow\",\"propertyName\":\"isLow\",\"type\":\"boolean\",\"readable\":true,\"writeable\":false,\"label\":\"Low battery level\",\"stateless\":false,\"commandClassVersion\":1,\"list\":false,\"value\":false,\"lastUpdate\":1730497501111,\"nodeName\":\"multiSensor\",\"nodeLocation\":\"mechanicalRoom\"},\"qos\":1,\"retain\":false,\"_msgid\":\"cf9cd8512741f448\"}",
        "payloadType": "json",
        "x": 970,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "0f9b3042845241ef",
        "type": "inject",
        "z": "baf4429beef64559",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 960,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "d6f876ce87296fed",
        "type": "debug",
        "z": "baf4429beef64559",
        "name": "debug 1127",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 700,
        "wires": []
    },
    {
        "id": "5f6ae425d94b21e6",
        "type": "link in",
        "z": "baf4429beef64559",
        "name": "draginoSoilTemperature",
        "links": [
            "0e199dd5e870a675"
        ],
        "x": 185,
        "y": 1380,
        "wires": [
            [
                "9ce20361d0b0e771",
                "c13934f75e805fe4"
            ]
        ]
    },
    {
        "id": "9ce20361d0b0e771",
        "type": "function",
        "z": "baf4429beef64559",
        "name": "soil_temperature",
        "func": "let value = msg.payload[0].v;\nlet unit = msg.payload[0].u;\nlet property = msg.payload[0].n;\nlet dev_eui = msg.payload[0].dev_eui;\n\nvar zwavePayloadMsg = {\n    node_id: 5001,  // Assign a unique Z-Wave node ID\n    command_class: 49,  // Multilevel Sensor command class\n    property: property,\n    value: value,\n    unit: unit,\n    timestamp: Date.now()  // Current timestamp in milliseconds\n};\n\nreturn zwavePayloadMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1380,
        "wires": [
            [
                "0746d318db30baf9",
                "abeeb3e812e247d5"
            ]
        ]
    },
    {
        "id": "c13934f75e805fe4",
        "type": "debug",
        "z": "baf4429beef64559",
        "name": "soil_temperature",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 1300,
        "wires": []
    },
    {
        "id": "0746d318db30baf9",
        "type": "mqtt out",
        "z": "baf4429beef64559",
        "name": "",
        "topic": "zwave/greenHouse/dragino_soil_temperature_1",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3b0217bc.de55b8",
        "x": 720,
        "y": 1380,
        "wires": []
    },
    {
        "id": "abeeb3e812e247d5",
        "type": "debug",
        "z": "baf4429beef64559",
        "name": "soil_temperature_zwave",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 1460,
        "wires": []
    },
    {
        "id": "b30ec6d3b9997c05",
        "type": "link in",
        "z": "aa130715069a6eeb",
        "name": "radioBridgePeridoicIn",
        "links": [
            "ad01381f10d5e3b7"
        ],
        "x": 135,
        "y": 260,
        "wires": [
            [
                "e29fe4f6bcfaa0b6"
            ]
        ]
    },
    {
        "id": "e29fe4f6bcfaa0b6",
        "type": "influxdb out",
        "z": "aa130715069a6eeb",
        "influxdb": "a45e499a8d2a59db",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "edgewoods",
        "bucket": "redwoods",
        "x": 400,
        "y": 340,
        "wires": []
    },
    {
        "id": "571d727121b45daa",
        "type": "link in",
        "z": "aa130715069a6eeb",
        "name": "draginoIn",
        "links": [
            "6e40d9f14980d493"
        ],
        "x": 135,
        "y": 320,
        "wires": [
            [
                "e29fe4f6bcfaa0b6"
            ]
        ]
    },
    {
        "id": "d3561ca26614772f",
        "type": "link in",
        "z": "aa130715069a6eeb",
        "name": "senseCapIn",
        "links": [
            "b53af92376739f8a"
        ],
        "x": 135,
        "y": 380,
        "wires": [
            [
                "e29fe4f6bcfaa0b6"
            ]
        ]
    },
    {
        "id": "284ffe0f.351742",
        "type": "link in",
        "z": "aa130715069a6eeb",
        "name": "stepsInflux",
        "links": [
            "b0fefa1b.c9ef88"
        ],
        "x": 155,
        "y": 800,
        "wires": [
            [
                "4892b9d868fd3219"
            ]
        ]
    },
    {
        "id": "d0f6a3de.7a94e",
        "type": "influxdb out",
        "z": "aa130715069a6eeb",
        "influxdb": "e81e7427.232dd8",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 720,
        "y": 820,
        "wires": []
    },
    {
        "id": "1e23db74.0064b5",
        "type": "comment",
        "z": "aa130715069a6eeb",
        "name": "Home Assistant",
        "info": "",
        "x": 200,
        "y": 660,
        "wires": []
    },
    {
        "id": "ba2485bb.db73f8",
        "type": "link in",
        "z": "aa130715069a6eeb",
        "name": "",
        "links": [],
        "x": 155,
        "y": 1320,
        "wires": [
            [
                "ab3fc863.2ea098",
                "76ba7b8f.482f64",
                "1ccd779d.946288"
            ]
        ]
    },
    {
        "id": "ca11ca63.add948",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 550,
        "y": 1160,
        "wires": []
    },
    {
        "id": "ab3fc863.2ea098",
        "type": "function",
        "z": "aa130715069a6eeb",
        "name": "apparentTemperature",
        "func": "let value = msg.payload.currently.apparentTemperature;\nvar label = \"apparentTemperature\";\n\nmsg.payload = [{\n    apparentTemperature: value\n},\n{\n    measurement: label\n}];\n\nmsg.measurement = label;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 1260,
        "wires": [
            [
                "bfe1e10d.a1b1e",
                "ca11ca63.add948"
            ]
        ]
    },
    {
        "id": "bfe1e10d.a1b1e",
        "type": "influxdb out",
        "z": "aa130715069a6eeb",
        "influxdb": "db11d248.010a3",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 640,
        "y": 1300,
        "wires": []
    },
    {
        "id": "76ba7b8f.482f64",
        "type": "function",
        "z": "aa130715069a6eeb",
        "name": "pressure",
        "func": "let value = msg.payload.currently.pressure;\nvar label = \"pressure\";\n\nmsg.payload = [{\n    pressure: value\n},\n{\n    measurement: label\n}];\n\nmsg.measurement = label;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 1320,
        "wires": [
            [
                "bfe1e10d.a1b1e"
            ]
        ]
    },
    {
        "id": "1ccd779d.946288",
        "type": "function",
        "z": "aa130715069a6eeb",
        "name": "windGust",
        "func": "let value = msg.payload.currently.windGust;\nvar label = \"pressure\";\n\nmsg.payload = [{\n    windGust: value\n},\n{\n    measurement: label\n}];\n\nmsg.measurement = label;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 1380,
        "wires": [
            [
                "bfe1e10d.a1b1e"
            ]
        ]
    },
    {
        "id": "6b0707e0.efcd68",
        "type": "mqtt in",
        "z": "aa130715069a6eeb",
        "name": "",
        "topic": "zwave/cov",
        "qos": "2",
        "datatype": "auto",
        "broker": "3b0217bc.de55b8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 1420,
        "y": 200,
        "wires": [
            [
                "474ca5cb.de226c"
            ]
        ]
    },
    {
        "id": "474ca5cb.de226c",
        "type": "json",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1570,
        "y": 200,
        "wires": [
            [
                "559737f9.8a1c08"
            ]
        ]
    },
    {
        "id": "8d924bc9.491c98",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "measurement",
                "pt": "msg",
                "to": "msg.payload.label",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "payload.value",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.cmdclass",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.cmdidx",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.instance",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.currState",
                "pt": "msg",
                "to": "$number(payload.currState)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.oldState",
                "pt": "msg",
                "to": "$number(payload.oldState)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 300,
        "wires": [
            [
                "a6e2816d.3ae6c"
            ]
        ]
    },
    {
        "id": "246af166.50229e",
        "type": "influxdb out",
        "z": "aa130715069a6eeb",
        "influxdb": "f8ce23bb.23857",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "x": 2540,
        "y": 400,
        "wires": []
    },
    {
        "id": "559737f9.8a1c08",
        "type": "switch",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "payload.label",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Temperature",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Relative Humidity",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Battery Level",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Alarm Level",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Alarm Type",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Switch",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Level",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Luminance",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 1710,
        "y": 200,
        "wires": [
            [
                "7066abd4.acf854"
            ],
            [
                "45055a6a.ac42d4"
            ],
            [
                "a7055134.dac49"
            ],
            [
                "74c33191.47452"
            ],
            [
                "48e5d936.febaf8"
            ],
            [
                "2899bd7b.9f6a62"
            ],
            [
                "71902a79.2f2c64"
            ],
            [
                "142b2f01.dc76e1"
            ],
            [
                "ebf86302.a6c7c"
            ]
        ]
    },
    {
        "id": "45055a6a.ac42d4",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "RH",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "RH",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 80,
        "wires": [
            [
                "8d924bc9.491c98"
            ]
        ]
    },
    {
        "id": "a6e2816d.3ae6c",
        "type": "function",
        "z": "aa130715069a6eeb",
        "name": "Add Tag",
        "func": "nodeid = msg.payload.nodeid;\noldState = msg.payload.oldState;\ncurrState = msg.payload.currState;\n\n//Fix Alarm Type label\nlabel = msg.payload.label;\nunits = msg.payload.units;\nuuid = msg.payload.uuid;\n\n\nmsg.payload = [{\n    oldState: oldState,\n    currState: currState,\n    label: label,\n    units: units,\n    uuid: uuid\n},\n{\n    nodeid: nodeid\n}];\n\nmsg.measurement = label\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2240,
        "y": 300,
        "wires": [
            [
                "aa0beef4.b569e",
                "246af166.50229e"
            ]
        ]
    },
    {
        "id": "aa0beef4.b569e",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2370,
        "y": 260,
        "wires": []
    },
    {
        "id": "a7055134.dac49",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Battery",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "Battery",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1880,
        "y": 120,
        "wires": [
            [
                "8d924bc9.491c98"
            ]
        ]
    },
    {
        "id": "74c33191.47452",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Alarm",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "Alarm",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 160,
        "wires": [
            [
                "8d924bc9.491c98"
            ]
        ]
    },
    {
        "id": "48e5d936.febaf8",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Alarm",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "AlarmType",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 200,
        "wires": [
            [
                "8d924bc9.491c98"
            ]
        ]
    },
    {
        "id": "2a5d302d.cd2fe",
        "type": "comment",
        "z": "aa130715069a6eeb",
        "name": "Zwave Sensors",
        "info": "",
        "x": 1440,
        "y": 60,
        "wires": []
    },
    {
        "id": "ba459182.879bd",
        "type": "json",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1630,
        "y": 500,
        "wires": [
            [
                "b9a1f7b1.305908"
            ]
        ]
    },
    {
        "id": "2899bd7b.9f6a62",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Switch",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "Switch",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 240,
        "wires": [
            [
                "8d924bc9.491c98"
            ]
        ]
    },
    {
        "id": "494c87b7.d877c8",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "measurement",
                "pt": "msg",
                "to": "msg.payload.label",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "payload.help",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2140,
        "y": 500,
        "wires": [
            [
                "a63831ed.1d46"
            ]
        ]
    },
    {
        "id": "b9a1f7b1.305908",
        "type": "switch",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "payload.help",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Notification - Node Awake",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Notification - Node Asleep",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1770,
        "y": 500,
        "wires": [
            [
                "97c97ece.b123a"
            ],
            [
                "9cd0a165.d3ad7"
            ],
            []
        ]
    },
    {
        "id": "97c97ece.b123a",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Awake",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "NodeStatus",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.status",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload.value",
                "pt": "msg",
                "to": "Awake",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 480,
        "wires": [
            [
                "494c87b7.d877c8"
            ]
        ]
    },
    {
        "id": "9cd0a165.d3ad7",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Asleep",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "NodeStatus",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.status",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload.value",
                "pt": "msg",
                "to": "Asleep",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 520,
        "wires": [
            [
                "494c87b7.d877c8"
            ]
        ]
    },
    {
        "id": "cc89078f.553208",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2430,
        "y": 540,
        "wires": []
    },
    {
        "id": "a63831ed.1d46",
        "type": "function",
        "z": "aa130715069a6eeb",
        "name": "Add Tag",
        "func": "nodeid = msg.payload.nodeid;\nnotification = msg.payload.notification;\nlabel = msg.payload.label;\nuuid = msg.payload.uuid;\nstatus = msg.payload.status;\nvalue = msg.payload.value;\n\nmsg.payload = [{\n    status: status,\n    notification: notification,\n    label: label,\n    uuid: uuid\n},\n{\n    nodeid: nodeid,\n    value: value,\n\n}];\n\nmsg.measurement = label\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2300,
        "y": 500,
        "wires": [
            [
                "246af166.50229e",
                "cc89078f.553208"
            ]
        ]
    },
    {
        "id": "ebf86302.a6c7c",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1870,
        "y": 360,
        "wires": []
    },
    {
        "id": "71902a79.2f2c64",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Level",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "Level",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 280,
        "wires": [
            [
                "8d924bc9.491c98"
            ]
        ]
    },
    {
        "id": "7066abd4.acf854",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Temperature",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "Temperature",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1890,
        "y": 40,
        "wires": [
            [
                "8d924bc9.491c98"
            ]
        ]
    },
    {
        "id": "142b2f01.dc76e1",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Lux",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "Lux",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 320,
        "wires": [
            [
                "8d924bc9.491c98"
            ]
        ]
    },
    {
        "id": "5027a0e.1ea556",
        "type": "mqtt in",
        "z": "aa130715069a6eeb",
        "name": "",
        "topic": "zwave/lux/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "3b0217bc.de55b8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 1430,
        "y": 680,
        "wires": [
            [
                "fafc82d7.1ed05",
                "ab732724d64d1ea8"
            ]
        ]
    },
    {
        "id": "fafc82d7.1ed05",
        "type": "json",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1630,
        "y": 680,
        "wires": [
            [
                "e4c0e436.980568"
            ]
        ]
    },
    {
        "id": "e4c0e436.980568",
        "type": "switch",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "zwave/lux/main",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "zwave/lux/basement",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1770,
        "y": 680,
        "wires": [
            [
                "4c3b5bdf.fc41d4"
            ],
            [],
            []
        ]
    },
    {
        "id": "4c3b5bdf.fc41d4",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "mainLux",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "mainLux",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 640,
        "wires": [
            [
                "441ee599.6387cc"
            ]
        ]
    },
    {
        "id": "441ee599.6387cc",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2090,
        "y": 640,
        "wires": []
    },
    {
        "id": "ab732724d64d1ea8",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "LUX",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 760,
        "wires": []
    },
    {
        "id": "56ac5e22.9ccb2",
        "type": "mqtt in",
        "z": "aa130715069a6eeb",
        "name": "",
        "topic": "fail2ban",
        "qos": "2",
        "datatype": "auto",
        "broker": "3b0217bc.de55b8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 150,
        "y": 1800,
        "wires": [
            [
                "dafc65c5.8182a8"
            ]
        ]
    },
    {
        "id": "6efe185e.a4aa18",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "fail2ban",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 1740,
        "wires": []
    },
    {
        "id": "dafc65c5.8182a8",
        "type": "json",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 1800,
        "wires": [
            [
                "99145286.e4c3b"
            ]
        ]
    },
    {
        "id": "697dabbb.959a74",
        "type": "function",
        "z": "aa130715069a6eeb",
        "name": "",
        "func": "let key = msg.payload.key;\nlet latitude = msg.payload.latitude;\nlet longitude = msg.payload.longitude;\nlet name = msg.payload.name;\nlet geohash = msg.payload.geohash;\n\nlet timezone = msg.payload.timezone;\nlet ip = msg.payload.ip;\nlet region = msg.payload.region;\nlet city = msg.payload.city;\nlet zip = msg.payload.zip;\n\nlet measurement = 'geoloc'\n\n\ninfluxMsg = [{\n    measurement: measurement,\n        payload: [{\n            key: key,\n            latitude: latitude,\n            longitude: longitude,\n            name: name,\n            geohash: geohash,\n            ip_address: ip\n        },{\n        country: key,\n        country_name: name,\n        region: region,\n        ip: ip\n        }],}]\n\n\n\nreturn influxMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 1800,
        "wires": [
            [
                "b3577801.fa87c8",
                "6efe185e.a4aa18"
            ]
        ]
    },
    {
        "id": "b3577801.fa87c8",
        "type": "influxdb out",
        "z": "aa130715069a6eeb",
        "influxdb": "d0b6d8cf.354418",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "x": 780,
        "y": 1800,
        "wires": []
    },
    {
        "id": "99145286.e4c3b",
        "type": "geohash",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "payload",
        "x": 400,
        "y": 1800,
        "wires": [
            [
                "697dabbb.959a74"
            ]
        ]
    },
    {
        "id": "13641673.3aefca",
        "type": "comment",
        "z": "aa130715069a6eeb",
        "name": "Fail2Ban",
        "info": "",
        "x": 160,
        "y": 1720,
        "wires": []
    },
    {
        "id": "bc0b9d76a37293e9",
        "type": "link in",
        "z": "aa130715069a6eeb",
        "name": "mboxTTN",
        "links": [
            "e7228b7d.dfabb8"
        ],
        "x": 135,
        "y": 440,
        "wires": [
            [
                "e29fe4f6bcfaa0b6"
            ]
        ]
    },
    {
        "id": "77a1f16f96cfca51",
        "type": "mqtt in",
        "z": "aa130715069a6eeb",
        "name": "",
        "topic": "crowdsec",
        "qos": "2",
        "datatype": "auto",
        "broker": "ea745cefbcdbc96f",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 180,
        "y": 2020,
        "wires": [
            [
                "35f3acc233dbbf00",
                "2e159733a223564b"
            ]
        ]
    },
    {
        "id": "56cf9915b625c7eb",
        "type": "comment",
        "z": "aa130715069a6eeb",
        "name": "Inputs for InfluxDB Persistance",
        "info": "",
        "x": 250,
        "y": 160,
        "wires": []
    },
    {
        "id": "1699db063c0f49a3",
        "type": "link in",
        "z": "aa130715069a6eeb",
        "name": "radioBridgePeridoicIn",
        "links": [
            "ad01381f10d5e3b7"
        ],
        "x": 575,
        "y": 260,
        "wires": [
            [
                "5ccd4a84856f4f0c"
            ]
        ]
    },
    {
        "id": "20df563c9564c5bf",
        "type": "link in",
        "z": "aa130715069a6eeb",
        "name": "draginoIn",
        "links": [
            "6e40d9f14980d493"
        ],
        "x": 575,
        "y": 320,
        "wires": [
            [
                "5ccd4a84856f4f0c"
            ]
        ]
    },
    {
        "id": "d0a5f832450dfb4f",
        "type": "link in",
        "z": "aa130715069a6eeb",
        "name": "senseCapIn",
        "links": [
            "b53af92376739f8a"
        ],
        "x": 575,
        "y": 380,
        "wires": [
            [
                "5ccd4a84856f4f0c"
            ]
        ]
    },
    {
        "id": "b4053cec5e062f09",
        "type": "link in",
        "z": "aa130715069a6eeb",
        "name": "mboxTTN",
        "links": [
            "e7228b7d.dfabb8"
        ],
        "x": 575,
        "y": 440,
        "wires": [
            [
                "5ccd4a84856f4f0c"
            ]
        ]
    },
    {
        "id": "5ccd4a84856f4f0c",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "Influx All Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 340,
        "wires": []
    },
    {
        "id": "35f3acc233dbbf00",
        "type": "json",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 2020,
        "wires": [
            [
                "8da1d5ded348cc2f"
            ]
        ]
    },
    {
        "id": "bb1fbeef369270f5",
        "type": "delay",
        "z": "aa130715069a6eeb",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 680,
        "y": 2020,
        "wires": [
            [
                "f9a019e9799d370f"
            ]
        ]
    },
    {
        "id": "b7fc6ff7280ad454",
        "type": "inject",
        "z": "aa130715069a6eeb",
        "name": "reset",
        "props": [
            {
                "p": "reset",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 510,
        "y": 2100,
        "wires": [
            [
                "bb1fbeef369270f5"
            ]
        ]
    },
    {
        "id": "8da1d5ded348cc2f",
        "type": "bigsplitter",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "payload",
        "x": 500,
        "y": 2020,
        "wires": [
            [
                "bb1fbeef369270f5"
            ],
            []
        ]
    },
    {
        "id": "8e2ce3daf11114cf",
        "type": "function",
        "z": "aa130715069a6eeb",
        "name": "crowdsec to influxdb",
        "func": "let events_count = msg.payload.events_count;\nlet scenario = msg.payload.scenario;\nlet country = msg.payload.source.cn;\nlet source_name = msg.payload.source.as_name;\nlet latitude = msg.payload.source.latitude;\nlet longitude = msg.payload.source.longitude;\nlet geohash = msg.payload.geohash;\nlet ip = msg.payload.source.ip;\n\nlet measurement = 'bad_actors'\n\n\nconst influxMsg = [{\n    measurement: measurement,\n        payload: [{\n            events_count: events_count,\n            lat: latitude,\n            lon: longitude,\n            geohash: geohash,\n            ip_address: ip\n        },{\n        country: country,\n        source_name: source_name,\n        scenario: scenario,\n        latitude: latitude,\n        longitude: longitude\n}],}]\n\n\n\nreturn influxMsg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2020,
        "wires": [
            [
                "6e32c9ae4410095f"
            ]
        ]
    },
    {
        "id": "2d2cbc73974e39f6",
        "type": "geohash",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "payload",
        "x": 1020,
        "y": 2020,
        "wires": [
            [
                "8e2ce3daf11114cf"
            ]
        ]
    },
    {
        "id": "2e159733a223564b",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "crowdsec debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 1940,
        "wires": []
    },
    {
        "id": "f9a019e9799d370f",
        "type": "function",
        "z": "aa130715069a6eeb",
        "name": "geohash",
        "func": "msg.events_count = msg.payload.events_count;\nmsg.scenario = msg.payload.scenario;\nmsg.country = msg.payload.source.cn;\nmsg.source_name = msg.payload.source.as_name;\nmsg.payload.lat = msg.payload.source.latitude;\nmsg.payload.lon = msg.payload.source.longitude;\nmsg.ip = msg.payload.source.ip;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2020,
        "wires": [
            [
                "2d2cbc73974e39f6"
            ]
        ]
    },
    {
        "id": "041bd62aff8f5078",
        "type": "link in",
        "z": "aa130715069a6eeb",
        "name": "link in 1",
        "links": [],
        "x": 135,
        "y": 500,
        "wires": [
            [
                "e29fe4f6bcfaa0b6"
            ]
        ]
    },
    {
        "id": "c40cddef9eb6c6ce",
        "type": "link in",
        "z": "aa130715069a6eeb",
        "name": "link in 2",
        "links": [],
        "x": 575,
        "y": 500,
        "wires": [
            [
                "5ccd4a84856f4f0c"
            ]
        ]
    },
    {
        "id": "6e32c9ae4410095f",
        "type": "influxdb out",
        "z": "aa130715069a6eeb",
        "influxdb": "a45e499a8d2a59db",
        "name": "crowdsec",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "edgewoods",
        "bucket": "crowdsec",
        "x": 1440,
        "y": 2020,
        "wires": []
    },
    {
        "id": "4892b9d868fd3219",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "debug 1126",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 800,
        "wires": []
    },
    {
        "id": "012729026d3687ab",
        "type": "mqtt in",
        "z": "f905b49ce5011782",
        "name": "GCP",
        "topic": "gcp/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "ea745cefbcdbc96f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "8788784597f764cc",
                "a4512b8d4872fae7"
            ]
        ]
    },
    {
        "id": "61386a3ed8966416",
        "type": "debug",
        "z": "f905b49ce5011782",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 180,
        "wires": []
    },
    {
        "id": "8788784597f764cc",
        "type": "json",
        "z": "f905b49ce5011782",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 455,
        "y": 180,
        "wires": [
            [
                "61386a3ed8966416"
            ]
        ]
    },
    {
        "id": "a4512b8d4872fae7",
        "type": "debug",
        "z": "f905b49ce5011782",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 455,
        "y": 240,
        "wires": []
    },
    {
        "id": "6d214f186b75b223",
        "type": "inject",
        "z": "f905b49ce5011782",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 400,
        "y": 580,
        "wires": [
            [
                "0abd11ffa4054f58"
            ]
        ]
    },
    {
        "id": "0abd11ffa4054f58",
        "type": "function",
        "z": "f905b49ce5011782",
        "name": "",
        "func": "\n//msg.url = \"https://udm.home.arpa/proxy/network/api/auth/login\";\nmsg.url = \"https://udm.home.arpa/api/auth/login\";\n\nmsg.method = \"POST\";\nmsg.headers = { \"Content-Type\":\"application/json;charset=UTF-8\"};\nmsg.payload = {\n    username: 'bdbuysse@gmail.com',\n    password: 'spiceygoat!!@'\n} \n \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 580,
        "wires": [
            [
                "3c0924e617ba1292"
            ]
        ]
    },
    {
        "id": "458d2e148e138dd9",
        "type": "debug",
        "z": "f905b49ce5011782",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 520,
        "wires": []
    },
    {
        "id": "3c0924e617ba1292",
        "type": "http request",
        "z": "f905b49ce5011782",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 770,
        "y": 580,
        "wires": [
            [
                "642f26d3d5ed8482"
            ]
        ]
    },
    {
        "id": "642f26d3d5ed8482",
        "type": "json",
        "z": "f905b49ce5011782",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 950,
        "y": 580,
        "wires": [
            [
                "458d2e148e138dd9",
                "8fd3745f7dd8bb83"
            ]
        ]
    },
    {
        "id": "fde0d712d8ac59f6",
        "type": "function",
        "z": "f905b49ce5011782",
        "name": "",
        "func": "\nsite = msg.payload.sso_uuid;\n\n//msg.url = \"https://udm.home.arpa/proxy/network/api/auth/login\";\n//msg.url = \"https://udm.home.arpa/api/auth/login\";\n// /api/s/{site}/rest/portforward/\nmsg.url = 'https://udm.home.arpa/api/s/'+site+'/rest/portforward/'\n\n\nmsg.method = \"GET\";\nmsg.headers = { \"Content-Type\":\"application/json;charset=UTF-8\"};\n \n \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "30ba01fd567c4a1d",
        "type": "debug",
        "z": "f905b49ce5011782",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 520,
        "wires": []
    },
    {
        "id": "5b6659284a97268d",
        "type": "json",
        "z": "f905b49ce5011782",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 0,
        "y": 0,
        "wires": [
            []
        ]
    },
    {
        "id": "7a55922680b2dcdb",
        "type": "json",
        "z": "f905b49ce5011782",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 0,
        "y": 0,
        "wires": [
            []
        ]
    },
    {
        "id": "edd0c420c19ac743",
        "type": "http request",
        "z": "f905b49ce5011782",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 0,
        "y": 0,
        "wires": [
            []
        ]
    },
    {
        "id": "75f2c9174bd31320",
        "type": "http request",
        "z": "f905b49ce5011782",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 0,
        "y": 0,
        "wires": [
            []
        ]
    },
    {
        "id": "ad27470269c1ac99",
        "type": "http request",
        "z": "f905b49ce5011782",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 0,
        "y": 0,
        "wires": [
            []
        ]
    },
    {
        "id": "7e700fef522ad82c",
        "type": "http request",
        "z": "f905b49ce5011782",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 0,
        "y": 0,
        "wires": [
            []
        ]
    },
    {
        "id": "d386ccfbf009dafc",
        "type": "http request",
        "z": "f905b49ce5011782",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1310,
        "y": 580,
        "wires": [
            [
                "29e505256a34840e",
                "9fc1a93260888a58"
            ]
        ]
    },
    {
        "id": "29e505256a34840e",
        "type": "json",
        "z": "f905b49ce5011782",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1490,
        "y": 580,
        "wires": [
            [
                "012fb185e8a075ef"
            ]
        ]
    },
    {
        "id": "012fb185e8a075ef",
        "type": "debug",
        "z": "f905b49ce5011782",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1610,
        "y": 580,
        "wires": []
    },
    {
        "id": "9fc1a93260888a58",
        "type": "debug",
        "z": "f905b49ce5011782",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 520,
        "wires": []
    },
    {
        "id": "8fd3745f7dd8bb83",
        "type": "function",
        "z": "f905b49ce5011782",
        "name": "",
        "func": "\nsite = msg.payload.sso_uuid;\n\n//api/self/sites\nmsg.url = 'https://udm.home.arpa/api/self/sites'\n\n\nmsg.method = \"GET\";\nmsg.headers = { \"Content-Type\":\"application/json;charset=UTF-8\"};\n \n \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 580,
        "wires": [
            [
                "d386ccfbf009dafc",
                "30ba01fd567c4a1d"
            ]
        ]
    },
    {
        "id": "d89c6ebb.cf6c2",
        "type": "twilio out",
        "z": "1600a05a.fc816",
        "twilio": "b03b267.f2a54d8",
        "twilioType": "sms",
        "url": "",
        "number": "6124142744",
        "name": "",
        "x": 270,
        "y": 140,
        "wires": []
    },
    {
        "id": "d1ee053.b080ff8",
        "type": "inject",
        "z": "1600a05a.fc816",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "test...1234",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "test...1234",
        "payloadType": "str",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "d89c6ebb.cf6c2"
            ]
        ]
    },
    {
        "id": "6f3deca1.5d8144",
        "type": "bigtimer",
        "z": "1600a05a.fc816",
        "outtopic": "kitchen",
        "outpayload1": "ON",
        "outpayload2": "OFF",
        "name": "Evening",
        "lat": "45.14176697",
        "lon": "-93.37486187",
        "starttime": "5004",
        "endtime": "60",
        "startoff": "-45",
        "endoff": 0,
        "offs": 0,
        "outtext1": "",
        "outtext2": "",
        "timeout": 1440,
        "sun": true,
        "mon": true,
        "tue": true,
        "wed": true,
        "thu": true,
        "fri": true,
        "sat": true,
        "jan": true,
        "feb": true,
        "mar": true,
        "apr": false,
        "may": false,
        "jun": false,
        "jul": false,
        "aug": false,
        "sep": false,
        "oct": true,
        "nov": true,
        "dec": true,
        "day1": 0,
        "month1": 0,
        "day2": 0,
        "month2": 0,
        "day3": 0,
        "month3": 0,
        "day4": 0,
        "month4": 0,
        "day5": 0,
        "month5": 0,
        "day6": "",
        "month6": "",
        "d1": 0,
        "w1": 0,
        "d2": 0,
        "w2": 0,
        "d3": 0,
        "w3": 0,
        "d4": 0,
        "w4": 0,
        "d5": 0,
        "w5": 0,
        "d6": "",
        "w6": "",
        "xday1": "",
        "xmonth1": "0",
        "xday2": "",
        "xmonth2": "0",
        "xday3": "0",
        "xmonth3": "0",
        "xday4": "",
        "xmonth4": "0",
        "xday5": "",
        "xmonth5": "0",
        "xday6": "",
        "xmonth6": "0",
        "xd1": "",
        "xw1": "",
        "xd2": "",
        "xw2": "",
        "xd3": "",
        "xw3": "",
        "xd4": "",
        "xw4": "",
        "xd5": "",
        "xw5": "",
        "xd6": "",
        "xw6": "",
        "suspend": false,
        "random": true,
        "repeat": false,
        "atstart": true,
        "odd": false,
        "even": false,
        "x": 260,
        "y": 360,
        "wires": [
            [
                "34f1ba8c.5ef186"
            ],
            [],
            []
        ]
    },
    {
        "id": "dc3ad4e2.89f088",
        "type": "inject",
        "z": "1600a05a.fc816",
        "name": "On",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "6f3deca1.5d8144"
            ]
        ]
    },
    {
        "id": "d319ccc0.6a409",
        "type": "inject",
        "z": "1600a05a.fc816",
        "name": "Off",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "x": 90,
        "y": 360,
        "wires": [
            [
                "6f3deca1.5d8144"
            ]
        ]
    },
    {
        "id": "a221bf5a.631ff",
        "type": "inject",
        "z": "1600a05a.fc816",
        "name": "Default",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "default",
        "payloadType": "str",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "6f3deca1.5d8144"
            ]
        ]
    },
    {
        "id": "34f1ba8c.5ef186",
        "type": "switch",
        "z": "1600a05a.fc816",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "OFF",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 360,
        "wires": [
            [
                "9a48b61b.78fa98"
            ],
            [
                "4bea1a27.89dc24"
            ]
        ]
    },
    {
        "id": "bbbd4cd5.d6b04",
        "type": "comment",
        "z": "1600a05a.fc816",
        "name": "twillo recovery code",
        "info": "vLjNMt_3dmUHAZ83QEr7n05TdZEENE2ixPgwI4iG",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "9a48b61b.78fa98",
        "type": "change",
        "z": "1600a05a.fc816",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Turn Kitchen Island ON",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 340,
        "wires": [
            [
                "6cd8401d.fc0af"
            ]
        ]
    },
    {
        "id": "4bea1a27.89dc24",
        "type": "change",
        "z": "1600a05a.fc816",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Turn Kitchen Island OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "6cd8401d.fc0af",
        "type": "link out",
        "z": "1600a05a.fc816",
        "name": "darkKitchenIsland",
        "links": [
            "ffce84f4.46ae48"
        ],
        "x": 735,
        "y": 360,
        "wires": []
    },
    {
        "id": "ffce84f4.46ae48",
        "type": "link in",
        "z": "1600a05a.fc816",
        "name": "twillioIn",
        "links": [
            "6cd8401d.fc0af"
        ],
        "x": 155,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4574ac93.2a3224",
        "type": "link in",
        "z": "1600a05a.fc816",
        "name": "grafanaAlertIn",
        "links": [],
        "x": 155,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "4d504261.43ad5c",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2120,
        "y": 1700,
        "wires": [
            [
                "1603a11b.64cfdf"
            ]
        ]
    },
    {
        "id": "1603a11b.64cfdf",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "",
        "func": "msg.url = 'https://10.0.0.205:8080/api/apiVer'\nmsg.method = 'GET'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2290,
        "y": 1700,
        "wires": [
            [
                "337ae6ba.01d52a"
            ]
        ]
    },
    {
        "id": "79e3d845.e64948",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2770,
        "y": 1700,
        "wires": []
    },
    {
        "id": "337ae6ba.01d52a",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2450,
        "y": 1700,
        "wires": [
            [
                "3204d6f2.0995ba"
            ]
        ]
    },
    {
        "id": "3204d6f2.0995ba",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2590,
        "y": 1700,
        "wires": [
            [
                "79e3d845.e64948"
            ]
        ]
    },
    {
        "id": "c3f0f185.5992",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "f1bbe200.adbf9"
            ]
        ]
    },
    {
        "id": "f1bbe200.adbf9",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "",
        "func": "let hostname = flow.get('rainMachine_ip')\nlet rainMachinePassword = flow.get('rainMachine_pass')\nmsg.url = 'https://'+hostname+':8080/api/4/auth/login'\nmsg.method = 'POST'\nmsg.payload = {\n    \"pwd\": rainMachinePassword, \n    \"remember\":0\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 320,
        "wires": [
            [
                "33c710e7.72b7f"
            ]
        ]
    },
    {
        "id": "b12fed07.189f4",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1070,
        "y": 320,
        "wires": []
    },
    {
        "id": "33c710e7.72b7f",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 570,
        "y": 320,
        "wires": [
            [
                "d6e3e0a8.3fd48"
            ]
        ]
    },
    {
        "id": "d6e3e0a8.3fd48",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 710,
        "y": 320,
        "wires": [
            [
                "69152718.fa36b8"
            ]
        ]
    },
    {
        "id": "69152718.fa36b8",
        "type": "change",
        "z": "171b21f.9e6efde",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rainMachine_access_token",
                "pt": "flow",
                "to": "payload.access_token",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rainMachine_token_expiration",
                "pt": "flow",
                "to": "payload.expiration",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 320,
        "wires": [
            [
                "b12fed07.189f4"
            ]
        ]
    },
    {
        "id": "29a2d12d.7ef01e",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2060,
        "y": 1080,
        "wires": [
            [
                "8fadb99e.a53238"
            ]
        ]
    },
    {
        "id": "8fadb99e.a53238",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "",
        "func": "var token = flow.get('rainMachine_access_token');\nmsg.url = 'https://10.0.0.205:8080/api/4/dailystats?access_token='+token;\nmsg.method = 'GET'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2230,
        "y": 1080,
        "wires": [
            [
                "cac0b660.2fa4f8"
            ]
        ]
    },
    {
        "id": "6a904f99.d457c",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2710,
        "y": 1080,
        "wires": []
    },
    {
        "id": "cac0b660.2fa4f8",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2390,
        "y": 1080,
        "wires": [
            [
                "c617cecc.c8b65"
            ]
        ]
    },
    {
        "id": "c617cecc.c8b65",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2530,
        "y": 1080,
        "wires": [
            [
                "6a904f99.d457c"
            ]
        ]
    },
    {
        "id": "f163cbf1.8ece38",
        "type": "comment",
        "z": "171b21f.9e6efde",
        "name": "AUTH",
        "info": "",
        "x": 130,
        "y": 260,
        "wires": []
    },
    {
        "id": "e8716492.b5a9f8",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "password",
                "v": "RAINMACHINEPASS",
                "vt": "env"
            }
        ],
        "repeat": "82800",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "rainmachine.home.arpa",
        "payloadType": "str",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "e8d22fe3.98463"
            ]
        ]
    },
    {
        "id": "e8d22fe3.98463",
        "type": "change",
        "z": "171b21f.9e6efde",
        "name": "rainmachine host",
        "rules": [
            {
                "t": "set",
                "p": "rainMachine_ip",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rainMachine_pass",
                "pt": "flow",
                "to": "password",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e04789c1.e93e28",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "provision",
        "func": "let hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/provision?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2120,
        "y": 200,
        "wires": [
            [
                "71c77090.a990d"
            ]
        ]
    },
    {
        "id": "d98d49a2.584a98",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2710,
        "y": 200,
        "wires": []
    },
    {
        "id": "71c77090.a990d",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2390,
        "y": 200,
        "wires": [
            [
                "a06c0610.ac6a28"
            ]
        ]
    },
    {
        "id": "a06c0610.ac6a28",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2530,
        "y": 200,
        "wires": [
            [
                "d98d49a2.584a98"
            ]
        ]
    },
    {
        "id": "abdf86f5.3d5188",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1960,
        "y": 200,
        "wires": [
            [
                "e04789c1.e93e28"
            ]
        ]
    },
    {
        "id": "d42103bf.50ec5",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "zone/start",
        "func": "let zone_id = msg.payload;\nlet hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/zone/'+zone_id+'/start?access_token='+access_token;\nmsg.method = 'POST';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2140,
        "y": 360,
        "wires": [
            [
                "cc08aa7e.376148"
            ]
        ]
    },
    {
        "id": "272864b2.8693fc",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2730,
        "y": 360,
        "wires": []
    },
    {
        "id": "cc08aa7e.376148",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2410,
        "y": 360,
        "wires": [
            [
                "26c1fd3.96dd502"
            ]
        ]
    },
    {
        "id": "26c1fd3.96dd502",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2590,
        "y": 360,
        "wires": [
            [
                "272864b2.8693fc"
            ]
        ]
    },
    {
        "id": "90a726bd.f74118",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 1970,
        "y": 360,
        "wires": [
            [
                "d42103bf.50ec5"
            ]
        ]
    },
    {
        "id": "71788fc7.f6874",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "zone/stop",
        "func": "let zone_id = msg.payload;\nlet hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/zone/'+zone_id+'/stop?access_token='+access_token;\nmsg.method = 'POST';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2140,
        "y": 440,
        "wires": [
            [
                "82e699cc.03a248"
            ]
        ]
    },
    {
        "id": "165d61ef.ef135e",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2730,
        "y": 440,
        "wires": []
    },
    {
        "id": "82e699cc.03a248",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2410,
        "y": 440,
        "wires": [
            [
                "11f90b0b.737995"
            ]
        ]
    },
    {
        "id": "11f90b0b.737995",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2590,
        "y": 440,
        "wires": [
            [
                "165d61ef.ef135e"
            ]
        ]
    },
    {
        "id": "4701d5a8.f51bec",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 1970,
        "y": 440,
        "wires": [
            [
                "71788fc7.f6874"
            ]
        ]
    },
    {
        "id": "d3604b0b.5e1d38",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "watering/zone",
        "func": "let zone_id = msg.payload;\nlet hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/watering/zone?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2160,
        "y": 540,
        "wires": [
            [
                "dac86e37.11b34"
            ]
        ]
    },
    {
        "id": "83e6042f.8bbb08",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2890,
        "y": 540,
        "wires": []
    },
    {
        "id": "dac86e37.11b34",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2410,
        "y": 540,
        "wires": [
            [
                "9b5cfaf6.706558"
            ]
        ]
    },
    {
        "id": "9b5cfaf6.706558",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2590,
        "y": 540,
        "wires": [
            [
                "831ca230.193fb"
            ]
        ]
    },
    {
        "id": "f8e3c9d.2583238",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "inject",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 1970,
        "y": 540,
        "wires": [
            [
                "d3604b0b.5e1d38"
            ]
        ]
    },
    {
        "id": "831ca230.193fb",
        "type": "bigsplitter",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload.zones",
        "x": 2740,
        "y": 540,
        "wires": [
            [
                "83e6042f.8bbb08"
            ],
            []
        ]
    },
    {
        "id": "cc875c80.5e815",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "watering/log",
        "func": "let zone_id = msg.payload;\nlet hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/watering/log?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2150,
        "y": 720,
        "wires": [
            [
                "fd656c16.2b292"
            ]
        ]
    },
    {
        "id": "3af60ceb.a0b564",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2890,
        "y": 720,
        "wires": []
    },
    {
        "id": "fd656c16.2b292",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2410,
        "y": 720,
        "wires": [
            [
                "be33fef3.83c7f"
            ]
        ]
    },
    {
        "id": "be33fef3.83c7f",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2590,
        "y": 720,
        "wires": [
            [
                "43aac5a3.e47aac"
            ]
        ]
    },
    {
        "id": "72f6ee63.cdc31",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "inject",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 1970,
        "y": 720,
        "wires": [
            [
                "cc875c80.5e815"
            ]
        ]
    },
    {
        "id": "e0c87058.3944f",
        "type": "bigsplitter",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload.zones",
        "x": 2740,
        "y": 720,
        "wires": [
            [
                "3af60ceb.a0b564"
            ],
            []
        ]
    },
    {
        "id": "43aac5a3.e47aac",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2730,
        "y": 760,
        "wires": []
    },
    {
        "id": "85c8fe4d.ce6b2",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "zone",
        "func": "let hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/zone?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 540,
        "wires": [
            [
                "cc735508.ae8b28"
            ]
        ]
    },
    {
        "id": "cd86f017.fbcae",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 910,
        "y": 540,
        "wires": []
    },
    {
        "id": "cc735508.ae8b28",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 590,
        "y": 540,
        "wires": [
            [
                "a242ed47.cc4e3"
            ]
        ]
    },
    {
        "id": "a242ed47.cc4e3",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 770,
        "y": 540,
        "wires": [
            [
                "cd86f017.fbcae"
            ]
        ]
    },
    {
        "id": "64bbad1.ee1f954",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 540,
        "wires": [
            [
                "85c8fe4d.ce6b2"
            ]
        ]
    },
    {
        "id": "e4aab55.7912d48",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "zone/properties",
        "func": "let hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/zone/properties?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 480,
        "wires": [
            [
                "b6faeb40.3d6288"
            ]
        ]
    },
    {
        "id": "274a7a5f.6f9536",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 480,
        "wires": []
    },
    {
        "id": "b6faeb40.3d6288",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 590,
        "y": 480,
        "wires": [
            [
                "ccdda0bb.0e14b"
            ]
        ]
    },
    {
        "id": "ccdda0bb.0e14b",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 770,
        "y": 480,
        "wires": [
            [
                "611099e8.560828"
            ]
        ]
    },
    {
        "id": "5e16fc49.04fed4",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": false,
        "onceDelay": "30",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 480,
        "wires": [
            [
                "e4aab55.7912d48"
            ]
        ]
    },
    {
        "id": "611099e8.560828",
        "type": "change",
        "z": "171b21f.9e6efde",
        "name": "persist zones",
        "rules": [
            {
                "t": "set",
                "p": "zones",
                "pt": "flow",
                "to": "payload.zones",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 480,
        "wires": [
            [
                "274a7a5f.6f9536"
            ]
        ]
    },
    {
        "id": "6beda2aa.6bc38c",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "provision",
        "payloadType": "str",
        "x": 2160,
        "y": 1920,
        "wires": [
            [
                "8c51405.678f3c"
            ]
        ]
    },
    {
        "id": "8c51405.678f3c",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "",
        "func": "var token = flow.get('rainMachine_access_token');\nlet api = msg.payload\n\nmsg.url = 'https://10.0.0.205:8080/api/4/'+api+'?access_token='+token;\n\n\n\nmsg.method = 'GET'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2350,
        "y": 1980,
        "wires": [
            [
                "5cbdb22.506cb4c"
            ]
        ]
    },
    {
        "id": "9da599fd.7c97e8",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2770,
        "y": 1980,
        "wires": []
    },
    {
        "id": "5cbdb22.506cb4c",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2510,
        "y": 1980,
        "wires": [
            [
                "5cab8d8a.2e5b34",
                "57692dd4.1d36e4"
            ]
        ]
    },
    {
        "id": "5cab8d8a.2e5b34",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2650,
        "y": 1980,
        "wires": [
            [
                "9da599fd.7c97e8"
            ]
        ]
    },
    {
        "id": "e904d760.e055f8",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/watering/zone",
        "payloadType": "str",
        "x": 2140,
        "y": 1980,
        "wires": [
            [
                "8c51405.678f3c"
            ]
        ]
    },
    {
        "id": "57d7f5c5.9a138c",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/zone/simulate",
        "payloadType": "str",
        "x": 2140,
        "y": 2040,
        "wires": [
            [
                "8c51405.678f3c"
            ]
        ]
    },
    {
        "id": "57692dd4.1d36e4",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2650,
        "y": 1920,
        "wires": []
    },
    {
        "id": "b0cf0f61.32df6",
        "type": "comment",
        "z": "171b21f.9e6efde",
        "name": "Zone Properties",
        "info": "",
        "x": 160,
        "y": 420,
        "wires": []
    },
    {
        "id": "bd08e4b5.a06308",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "watering/zone",
        "func": "let hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/watering/zone?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 740,
        "wires": [
            [
                "9f36b157.2fff1"
            ]
        ]
    },
    {
        "id": "8959d509.b31648",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 740,
        "wires": []
    },
    {
        "id": "9f36b157.2fff1",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 570,
        "y": 740,
        "wires": [
            [
                "2dc30878.2b0b68"
            ]
        ]
    },
    {
        "id": "2dc30878.2b0b68",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 740,
        "wires": [
            [
                "309971dd.ab635e"
            ]
        ]
    },
    {
        "id": "f337e883.90d9b8",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 740,
        "wires": [
            [
                "bd08e4b5.a06308"
            ]
        ]
    },
    {
        "id": "309971dd.ab635e",
        "type": "bigsplitter",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload.zones",
        "x": 920,
        "y": 740,
        "wires": [
            [
                "8959d509.b31648"
            ],
            []
        ]
    },
    {
        "id": "4250c104.ba224",
        "type": "comment",
        "z": "171b21f.9e6efde",
        "name": "Watering Zone Status",
        "info": "",
        "x": 160,
        "y": 680,
        "wires": []
    },
    {
        "id": "2d1afcc0.79cf24",
        "type": "comment",
        "z": "171b21f.9e6efde",
        "name": "Set IP Address",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "a70d1d90.e721e",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "watering/log",
        "func": "let rainMachine = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\nlet today = msg.myymd;\n\nmsg.url = 'https://'+rainMachine+':8080/api/4/watering/log/'+today+'/120?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1640,
        "wires": [
            [
                "2cedc865.b48c18",
                "3ed02151cfacec8d"
            ]
        ]
    },
    {
        "id": "b9906667.55f468",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 1360,
        "wires": []
    },
    {
        "id": "2cedc865.b48c18",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 570,
        "y": 1360,
        "wires": [
            [
                "c01eceab.06356"
            ]
        ]
    },
    {
        "id": "c01eceab.06356",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 1360,
        "wires": [
            [
                "b9906667.55f468"
            ]
        ]
    },
    {
        "id": "c1275e5b.e7365",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "17e2682e.a00e78",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "restrictions/currently",
        "func": "let hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/restrictions/currently?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 860,
        "wires": [
            [
                "a3b942eb.5486b"
            ]
        ]
    },
    {
        "id": "a3b942eb.5486b",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 570,
        "y": 860,
        "wires": [
            [
                "7d330f93.53cb9"
            ]
        ]
    },
    {
        "id": "7d330f93.53cb9",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 860,
        "wires": [
            [
                "99208a36.7c4a58"
            ]
        ]
    },
    {
        "id": "2d83abe6.e58fd4",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 860,
        "wires": [
            [
                "17e2682e.a00e78"
            ]
        ]
    },
    {
        "id": "99208a36.7c4a58",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "Format for Influx",
        "func": "let hourly = msg.payload.hourly;\nlet freeze = msg.payload.freeze;\nlet month = msg.payload.month;\nlet weekDay = msg.payload.weekDay;\nlet rainDelay = msg.payload.rainDelay;\nlet rainSensor = msg.payload.rainSensor;\nlet rainDelayCounter = msg.payload.rainDelayCounter;\nlet lastLeakDetected = msg.payload.lastLeakDetected;\n\nlet measurement = 'waterRestrictions';\n\nmsg.payload = [{\n    houlry: hourly,\n    freeze: freeze,\n    month: month,\n    weekDay: weekDay,\n    rainDelay: rainDelay,\n},\n{\n    controller: 'edgewood',\n}];\n\nmsg.measurement = measurement;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 860,
        "wires": [
            [
                "aa2e486d.02fd58",
                "c53d70790da06d52"
            ]
        ]
    },
    {
        "id": "aa2e486d.02fd58",
        "type": "link out",
        "z": "171b21f.9e6efde",
        "name": "irrigationRestrictions",
        "links": [],
        "x": 1075,
        "y": 860,
        "wires": []
    },
    {
        "id": "bbb9226b.9d3ed",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "get zone",
        "func": "let zone_id = msg.payload;\nlet hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/zone/'+zone_id+'/start?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2120,
        "y": 280,
        "wires": [
            [
                "bfe7fd87.ba332"
            ]
        ]
    },
    {
        "id": "c7e3ec64.f93a5",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2710,
        "y": 280,
        "wires": []
    },
    {
        "id": "bfe7fd87.ba332",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2390,
        "y": 280,
        "wires": [
            [
                "d4f5635a.0da7c",
                "7e3fb47b.fe6aac"
            ]
        ]
    },
    {
        "id": "d4f5635a.0da7c",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2570,
        "y": 280,
        "wires": [
            [
                "c7e3ec64.f93a5"
            ]
        ]
    },
    {
        "id": "30139cb6.d25c04",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 1950,
        "y": 280,
        "wires": [
            [
                "bbb9226b.9d3ed"
            ]
        ]
    },
    {
        "id": "7e3fb47b.fe6aac",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2570,
        "y": 240,
        "wires": []
    },
    {
        "id": "873d3542.8d17a8",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "dailystats",
        "func": "let hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/dailystats/2022-01-22?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1040,
        "wires": [
            [
                "e94d60d9.76869"
            ]
        ]
    },
    {
        "id": "2dffe96.cf8ba16",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 1040,
        "wires": []
    },
    {
        "id": "e94d60d9.76869",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 570,
        "y": 1040,
        "wires": [
            [
                "d9f0b464.eacef8"
            ]
        ]
    },
    {
        "id": "d9f0b464.eacef8",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 1040,
        "wires": [
            [
                "2dffe96.cf8ba16"
            ]
        ]
    },
    {
        "id": "ae56d93e.27d4f8",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1040,
        "wires": [
            [
                "873d3542.8d17a8"
            ]
        ]
    },
    {
        "id": "bd45c0e8.d64d5",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "watering/log/details",
        "func": "let hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/watering/log/details/2021-07-01/120?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1440,
        "wires": [
            [
                "2cedc865.b48c18"
            ]
        ]
    },
    {
        "id": "1a1694cc.fbeaeb",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1440,
        "wires": [
            [
                "bd45c0e8.d64d5"
            ]
        ]
    },
    {
        "id": "7ca01573425bb29c",
        "type": "simpletime",
        "z": "171b21f.9e6efde",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": false,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": false,
        "myrawdate": false,
        "mypm": false,
        "x": 290,
        "y": 1640,
        "wires": [
            [
                "a70d1d90.e721e"
            ]
        ]
    },
    {
        "id": "2aa84fdbc24598b9",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1640,
        "wires": [
            [
                "7ca01573425bb29c"
            ]
        ]
    },
    {
        "id": "3ed02151cfacec8d",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 670,
        "y": 1640,
        "wires": []
    },
    {
        "id": "c53d70790da06d52",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "Irrigation Restrictions",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 920,
        "wires": []
    },
    {
        "id": "b12d515b3396e0b0",
        "type": "mqtt in",
        "z": "bf8b5ca4b28f6892",
        "name": "",
        "topic": "zwave/cov",
        "qos": "2",
        "datatype": "auto",
        "broker": "3b0217bc.de55b8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 120,
        "y": 120,
        "wires": [
            [
                "e1456b72aa0fa9f2"
            ]
        ]
    },
    {
        "id": "e1456b72aa0fa9f2",
        "type": "json",
        "z": "bf8b5ca4b28f6892",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 280,
        "y": 120,
        "wires": [
            [
                "00c5531e0189a06a"
            ]
        ]
    },
    {
        "id": "00c5531e0189a06a",
        "type": "mongodb out",
        "z": "bf8b5ca4b28f6892",
        "mongodb": "c813143834382b28",
        "name": "",
        "collection": "multisensor",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 530,
        "y": 120,
        "wires": []
    },
    {
        "id": "28b042432c3b8ed3",
        "type": "link in",
        "z": "bf8b5ca4b28f6892",
        "name": "gpsSurveyMongo",
        "links": [
            "e7228b7d.dfabb8"
        ],
        "x": 195,
        "y": 700,
        "wires": [
            [
                "e5e6e86899685e57"
            ]
        ]
    },
    {
        "id": "e5e6e86899685e57",
        "type": "mongodb out",
        "z": "bf8b5ca4b28f6892",
        "mongodb": "c813143834382b28",
        "name": "",
        "collection": "gps_survey",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 535,
        "y": 700,
        "wires": []
    },
    {
        "id": "5aa79648c52521b7",
        "type": "mongodb in",
        "z": "bf8b5ca4b28f6892",
        "mongodb": "c813143834382b28",
        "name": "",
        "collection": "bdb_mbox",
        "operation": "find",
        "x": 530,
        "y": 800,
        "wires": [
            [
                "e0b3f59451bba9ac"
            ]
        ]
    },
    {
        "id": "aa68c77c3b8b4da5",
        "type": "inject",
        "z": "bf8b5ca4b28f6892",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 800,
        "wires": [
            [
                "468c067fe9fae648"
            ]
        ]
    },
    {
        "id": "468c067fe9fae648",
        "type": "function",
        "z": "bf8b5ca4b28f6892",
        "name": "",
        "func": "msg.query = \"select * from gps_survey\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 800,
        "wires": [
            [
                "5aa79648c52521b7"
            ]
        ]
    },
    {
        "id": "0cd5ee95300bc8d6",
        "type": "debug",
        "z": "bf8b5ca4b28f6892",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 800,
        "wires": []
    },
    {
        "id": "09be5390b367125d",
        "type": "comment",
        "z": "bf8b5ca4b28f6892",
        "name": "LoRaWAN Survey Sweep GPS db",
        "info": "",
        "x": 220,
        "y": 660,
        "wires": []
    },
    {
        "id": "56f43ce5f20fe1d0",
        "type": "link in",
        "z": "bf8b5ca4b28f6892",
        "name": "batteryVoltage",
        "links": [],
        "x": 155,
        "y": 360,
        "wires": [
            [
                "58c7e3a099d047ce"
            ]
        ]
    },
    {
        "id": "58c7e3a099d047ce",
        "type": "mongodb out",
        "z": "bf8b5ca4b28f6892",
        "mongodb": "c813143834382b28",
        "name": "",
        "collection": "battery_voltage",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 420,
        "y": 360,
        "wires": []
    },
    {
        "id": "4464c7c9b2e3fb58",
        "type": "mongodb out",
        "z": "bf8b5ca4b28f6892",
        "mongodb": "c813143834382b28",
        "name": "",
        "collection": "bdb_mbox",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 410,
        "y": 480,
        "wires": []
    },
    {
        "id": "cde829be1e9dbbd9",
        "type": "link in",
        "z": "bf8b5ca4b28f6892",
        "name": "suppervisoryIn",
        "links": [],
        "x": 195,
        "y": 900,
        "wires": [
            [
                "feae569c770a3f9f"
            ]
        ]
    },
    {
        "id": "feae569c770a3f9f",
        "type": "mongodb out",
        "z": "bf8b5ca4b28f6892",
        "mongodb": "c813143834382b28",
        "name": "",
        "collection": "supervisory",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 530,
        "y": 900,
        "wires": []
    },
    {
        "id": "e0b3f59451bba9ac",
        "type": "switch",
        "z": "bf8b5ca4b28f6892",
        "name": "",
        "property": "payload.payload.events[1].n",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 800,
        "wires": [
            [],
            [
                "506c4965515f77e7"
            ]
        ]
    },
    {
        "id": "506c4965515f77e7",
        "type": "bigsplitter",
        "z": "bf8b5ca4b28f6892",
        "name": "",
        "property": "payload",
        "x": 920,
        "y": 800,
        "wires": [
            [
                "0cd5ee95300bc8d6"
            ],
            []
        ]
    },
    {
        "id": "b6d428594fd33efa",
        "type": "link in",
        "z": "bf8b5ca4b28f6892",
        "name": "senseCapIn",
        "links": [],
        "x": 225,
        "y": 1260,
        "wires": [
            [
                "9e706e998f841538",
                "4ff607dea1d7d339"
            ]
        ]
    },
    {
        "id": "9e706e998f841538",
        "type": "mongodb out",
        "z": "bf8b5ca4b28f6892",
        "mongodb": "c813143834382b28",
        "name": "",
        "collection": "senseCap",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 460,
        "y": 1260,
        "wires": []
    },
    {
        "id": "4ff607dea1d7d339",
        "type": "debug",
        "z": "bf8b5ca4b28f6892",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 1340,
        "wires": []
    },
    {
        "id": "2a7ab9d1.6964f6",
        "type": "inject",
        "z": "4576b216.7dd43c",
        "name": "inject",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "c0f540ae.330ea"
            ]
        ]
    },
    {
        "id": "c0f540ae.330ea",
        "type": "function",
        "z": "4576b216.7dd43c",
        "name": "Get Dashboards",
        "func": "//\"Authorization: Bearer eyJrIjoidTZUNGNFU3ZMd29jU0dJUmVJYVNwVVVCSEsyRlJiRE8iLCJuIjoibm9kZS1yZWQiLCJpZCI6MX0=\" https://10.0.0.10/grafana/api/dashboards/home\n\n\nlet bearer_token = 'Bearer eyJrIjoidTZUNGNFU3ZMd29jU0dJUmVJYVNwVVVCSEsyRlJiRE8iLCJuIjoibm9kZS1yZWQiLCJpZCI6MX0=';\n\n//msg.url = 'https://10.0.0.10/grafana/api/keys';\nmsg.url = 'https://10.10.10.10/grafana/api/dashboards/home';\nmsg.method = 'GET';\nmsg.headers = {\n    Accept: \"application/json\",\n    'Content-Type': \"application/json\",\n    Authorization: bearer_token,\n};\n\nmsg.payload = {};\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 180,
        "wires": [
            [
                "ea03bf2b.36423",
                "495bbcfc.f8a4a4"
            ]
        ]
    },
    {
        "id": "88147ee.83f038",
        "type": "debug",
        "z": "4576b216.7dd43c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 830,
        "y": 180,
        "wires": []
    },
    {
        "id": "ea03bf2b.36423",
        "type": "http request",
        "z": "4576b216.7dd43c",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "d15f51f5.84dab",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "a8a0f7e0cd0c728a"
            ]
        ]
    },
    {
        "id": "495bbcfc.f8a4a4",
        "type": "debug",
        "z": "4576b216.7dd43c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 510,
        "y": 120,
        "wires": []
    },
    {
        "id": "7be4dda3.860c24",
        "type": "inject",
        "z": "4576b216.7dd43c",
        "name": "inject",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 400,
        "wires": [
            [
                "9edaeb16.554698"
            ]
        ]
    },
    {
        "id": "9edaeb16.554698",
        "type": "function",
        "z": "4576b216.7dd43c",
        "name": "Auth",
        "func": "//\"Authorization: Bearer eyJrIjoidTZUNGNFU3ZMd29jU0dJUmVJYVNwVVVCSEsyRlJiRE8iLCJuIjoibm9kZS1yZWQiLCJpZCI6MX0=\" https://10.0.0.10/grafana/api/dashboards/home\n\n\nlet bearer_token = 'Bearer eyJrIjoidTZUNGNFU3ZMd29jU0dJUmVJYVNwVVVCSEsyRlJiRE8iLCJuIjoibm9kZS1yZWQiLCJpZCI6MX0=';\n\nmsg.url = 'https://10.10.10.10/grafana/api/auth/keys';\nmsg.method = 'POST';\nmsg.headers = {\n    Accept: \"application/json\",\n    'Content-Type': \"application/json\",\n    Authorization: bearer_token,\n};\n\nmsg.payload = {\n  \"name\": \"node-red-key\",\n  \"role\": \"Admin\",\n  \"secondsToLive\": null\n};\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 400,
        "wires": [
            [
                "68988a96.ceed24",
                "add540f0.7a4f1"
            ]
        ]
    },
    {
        "id": "bd59b2b1.1293c",
        "type": "debug",
        "z": "4576b216.7dd43c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 660,
        "y": 400,
        "wires": []
    },
    {
        "id": "68988a96.ceed24",
        "type": "http request",
        "z": "4576b216.7dd43c",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "d15f51f5.84dab",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 510,
        "y": 400,
        "wires": [
            [
                "bd59b2b1.1293c"
            ]
        ]
    },
    {
        "id": "add540f0.7a4f1",
        "type": "debug",
        "z": "4576b216.7dd43c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 500,
        "y": 320,
        "wires": []
    },
    {
        "id": "a8a0f7e0cd0c728a",
        "type": "json",
        "z": "4576b216.7dd43c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 180,
        "wires": [
            [
                "88147ee.83f038"
            ]
        ]
    },
    {
        "id": "227ed94f44606bf5",
        "type": "debug",
        "z": "c2dba5e02909beed",
        "name": "zwave/update/#",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 600,
        "y": 80,
        "wires": []
    },
    {
        "id": "3af55477032d9b26",
        "type": "json",
        "z": "c2dba5e02909beed",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 160,
        "wires": [
            [
                "7df6c02f55e0afb4"
            ]
        ]
    },
    {
        "id": "7df6c02f55e0afb4",
        "type": "switch",
        "z": "c2dba5e02909beed",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "zwave/update/",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "zwave/temp/#",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "zwave/notification/#",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "zwave/event",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 410,
        "y": 160,
        "wires": [
            [
                "227ed94f44606bf5"
            ],
            [
                "fbae8c90491464d5"
            ],
            [
                "c5dd00f7ff04c91e"
            ],
            [
                "1ee75df38432d7e2"
            ],
            [
                "e9f6c3694a659575"
            ]
        ]
    },
    {
        "id": "e9f6c3694a659575",
        "type": "debug",
        "z": "c2dba5e02909beed",
        "name": "otherwise",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 580,
        "y": 240,
        "wires": []
    },
    {
        "id": "dfeb4e604c6246b9",
        "type": "cepAggr",
        "z": "c2dba5e02909beed",
        "filters": [],
        "property": "payload",
        "windowType": "count",
        "windowParam": 0,
        "fieldsList": [
            {}
        ],
        "aggrOpList": [
            {}
        ],
        "x": 630,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "fbae8c90491464d5",
        "type": "debug",
        "z": "c2dba5e02909beed",
        "name": "zwave/temp/#",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 600,
        "y": 120,
        "wires": []
    },
    {
        "id": "1ee75df38432d7e2",
        "type": "debug",
        "z": "c2dba5e02909beed",
        "name": "zwave/event/#",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 600,
        "y": 200,
        "wires": []
    },
    {
        "id": "c5dd00f7ff04c91e",
        "type": "debug",
        "z": "c2dba5e02909beed",
        "name": "zwave/notification/#",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 620,
        "y": 160,
        "wires": []
    },
    {
        "id": "60cd631056826fa3",
        "type": "http response",
        "z": "c2dba5e02909beed",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 420,
        "y": 700,
        "wires": []
    },
    {
        "id": "edf62f8e2da15932",
        "type": "http in",
        "z": "c2dba5e02909beed",
        "name": "",
        "url": "/alerts",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 190,
        "y": 720,
        "wires": [
            [
                "eab78a87c5092324",
                "60cd631056826fa3",
                "421cc822a0889cce"
            ]
        ]
    },
    {
        "id": "eab78a87c5092324",
        "type": "debug",
        "z": "c2dba5e02909beed",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 410,
        "y": 800,
        "wires": []
    },
    {
        "id": "421cc822a0889cce",
        "type": "function",
        "z": "c2dba5e02909beed",
        "name": "",
        "func": "alert = msg.payload.ruleName;\n\nreturn {payload: {\n    alert\n}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "76e907dd89c5b323",
        "type": "google-home",
        "z": "b78ed3d06ab6db61",
        "d": true,
        "conf": "09f2c70562eb4732",
        "device": "17955",
        "acknowledge": true,
        "name": "",
        "topic": "",
        "x": 200,
        "y": 140,
        "wires": [
            [
                "4c3cae0bb00f7e75"
            ]
        ]
    },
    {
        "id": "4c3cae0bb00f7e75",
        "type": "debug",
        "z": "b78ed3d06ab6db61",
        "name": "doorbell",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 140,
        "wires": []
    },
    {
        "id": "8b55369b6a873ecf",
        "type": "google-home",
        "z": "b78ed3d06ab6db61",
        "conf": "09f2c70562eb4732",
        "device": "3160",
        "acknowledge": true,
        "name": "Nest",
        "topic": "",
        "x": 180,
        "y": 320,
        "wires": [
            [
                "341474474b98c23b"
            ]
        ]
    },
    {
        "id": "341474474b98c23b",
        "type": "debug",
        "z": "b78ed3d06ab6db61",
        "name": "nest",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 320,
        "wires": []
    },
    {
        "id": "7cb2e4b6c4093704",
        "type": "inject",
        "z": "8ee38fc4c4808acf",
        "name": "Inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 160,
        "wires": [
            [
                "7e4d23a7cbe3e74f",
                "1da5d8034ab492e7"
            ]
        ]
    },
    {
        "id": "7e4d23a7cbe3e74f",
        "type": "function",
        "z": "8ee38fc4c4808acf",
        "name": "NOAA Alerts",
        "func": "msg.url = 'https://api.weather.gov/alerts/active?area=MN';\nmsg.method = 'GET';\nmsg.headers = {\n    Accept: \"application/json\",\n    'Content-Type': \"application/json\",\n    //Authorization: bearer_token,\n};\nmsg.payload = {};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 120,
        "wires": [
            [
                "e9e855b3be72b348"
            ]
        ]
    },
    {
        "id": "e9e855b3be72b348",
        "type": "http request",
        "z": "8ee38fc4c4808acf",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 650,
        "y": 120,
        "wires": [
            [
                "757ff9e975e3885a"
            ]
        ]
    },
    {
        "id": "c498e2291585bff9",
        "type": "debug",
        "z": "8ee38fc4c4808acf",
        "name": " NOAA Alerts",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 120,
        "wires": []
    },
    {
        "id": "757ff9e975e3885a",
        "type": "json",
        "z": "8ee38fc4c4808acf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 830,
        "y": 120,
        "wires": [
            [
                "c498e2291585bff9"
            ]
        ]
    },
    {
        "id": "1da5d8034ab492e7",
        "type": "function",
        "z": "8ee38fc4c4808acf",
        "name": "NOAA Forecast",
        "func": "msg.url = 'https://api.weather.gov/points/45.1416055,-93.3747374';\nmsg.method = 'GET';\nmsg.headers = {\n    Accept: \"application/json\",\n    'Content-Type': \"application/json\",\n    //Authorization: bearer_token,\n};\nmsg.payload = {};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 200,
        "wires": [
            [
                "a01f28bb4c3d0273"
            ]
        ]
    },
    {
        "id": "a01f28bb4c3d0273",
        "type": "http request",
        "z": "8ee38fc4c4808acf",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 650,
        "y": 200,
        "wires": [
            [
                "d2d147dc286881e8"
            ]
        ]
    },
    {
        "id": "d2d147dc286881e8",
        "type": "json",
        "z": "8ee38fc4c4808acf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 830,
        "y": 200,
        "wires": [
            [
                "645c2578359743e6",
                "ec9eedeb77a08854",
                "813bebbca01f2af9"
            ]
        ]
    },
    {
        "id": "645c2578359743e6",
        "type": "function",
        "z": "8ee38fc4c4808acf",
        "name": "NOAA Forecast",
        "func": "var forecast = msg.payload.properties.forecast;\n\nmsg.url = forecast;\nmsg.method = 'GET';\nmsg.headers = {\n    Accept: \"application/json\",\n    'Content-Type': \"application/json\"\n};\nmsg.payload = {};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 200,
        "wires": [
            [
                "3706f264997f3e5b"
            ]
        ]
    },
    {
        "id": "12dd7158ef8f3f94",
        "type": "debug",
        "z": "8ee38fc4c4808acf",
        "name": " NOAA Forecast",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 200,
        "wires": []
    },
    {
        "id": "3706f264997f3e5b",
        "type": "http request",
        "z": "8ee38fc4c4808acf",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1290,
        "y": 200,
        "wires": [
            [
                "efccfcb3830ed1af"
            ]
        ]
    },
    {
        "id": "efccfcb3830ed1af",
        "type": "json",
        "z": "8ee38fc4c4808acf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1450,
        "y": 200,
        "wires": [
            [
                "12dd7158ef8f3f94"
            ]
        ]
    },
    {
        "id": "ec9eedeb77a08854",
        "type": "function",
        "z": "8ee38fc4c4808acf",
        "name": "NOAA Hourly Forecast",
        "func": "var forecast = msg.payload.properties.forecastHourly;\n\n\nmsg.url = forecast;\nmsg.method = 'GET';\nmsg.headers = {\n    Accept: \"application/json\",\n    'Content-Type': \"application/json\"\n};\nmsg.payload = {};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 280,
        "wires": [
            [
                "a2a2b747dfd2e987"
            ]
        ]
    },
    {
        "id": "5cec6c538864112d",
        "type": "debug",
        "z": "8ee38fc4c4808acf",
        "name": " NOAA Hourly Forecast",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 280,
        "wires": []
    },
    {
        "id": "a2a2b747dfd2e987",
        "type": "http request",
        "z": "8ee38fc4c4808acf",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1290,
        "y": 280,
        "wires": [
            [
                "eea1846c17b5e4c5"
            ]
        ]
    },
    {
        "id": "eea1846c17b5e4c5",
        "type": "json",
        "z": "8ee38fc4c4808acf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1450,
        "y": 280,
        "wires": [
            [
                "5cec6c538864112d"
            ]
        ]
    },
    {
        "id": "813bebbca01f2af9",
        "type": "debug",
        "z": "8ee38fc4c4808acf",
        "name": "NOAA Lat/Long Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 480,
        "wires": []
    },
    {
        "id": "dc61fa1d.8cc708",
        "type": "inject",
        "z": "5a34b650.a16c48",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "21600",
        "crontab": "",
        "once": false,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 390,
        "y": 340,
        "wires": [
            [
                "52fda994.3231f8"
            ]
        ]
    },
    {
        "id": "6a62d08f.52dc2",
        "type": "http request",
        "z": "5a34b650.a16c48",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "88e1b19a.74497",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 870,
        "y": 340,
        "wires": [
            [
                "90cb4951.178cd8"
            ]
        ]
    },
    {
        "id": "52fda994.3231f8",
        "type": "ip",
        "z": "5a34b650.a16c48",
        "name": "ip",
        "https": false,
        "timeout": "5000",
        "internalIPv4": true,
        "internalIPv6": false,
        "publicIPv4": true,
        "publicIPv6": false,
        "x": 530,
        "y": 340,
        "wires": [
            [
                "8044aba.6e70458"
            ]
        ]
    },
    {
        "id": "90cb4951.178cd8",
        "type": "debug",
        "z": "5a34b650.a16c48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1030,
        "y": 340,
        "wires": []
    },
    {
        "id": "8044aba.6e70458",
        "type": "function",
        "z": "5a34b650.a16c48",
        "name": "",
        "func": "let ip = msg.payload.publicIPv4;\n\nmsg.url = \"https://domains.google.com/nic/update?hostname=home.edgewoods.net&myip=\"+ip;\nmsg.method = \"POST\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 340,
        "wires": [
            [
                "6a62d08f.52dc2"
            ]
        ]
    },
    {
        "id": "4a1bbddb60357147",
        "type": "comment",
        "z": "5a34b650.a16c48",
        "name": "Dynamic DNS",
        "info": "Credentials are stored in external enviroment variable $(DNSUSER) and $(DNSPASs)",
        "x": 370,
        "y": 200,
        "wires": []
    },
    {
        "id": "b4443f5e4343bfcb",
        "type": "function",
        "z": "978ca627078b4010",
        "name": "Login",
        "func": "let user = env.get(\"UNIFIUSER\");\nlet password = env.get(\"UNIFIPASS\");\n\n//msg.url = \"http://10.10.10.1/api/auth/login?remember=true\";\n//msg.url = \"http://10.10.10.1/proxy/network/api/s/default/login?remember=true\";\nmsg.url = \"http://10.10.10.1/proxy/network/api/auth/login\";\n\nmsg.method = \"POST\";\nmsg.headers = { \"Content-Type\":\"application/json;charset=UTF-8\"};\nmsg.payload = {\n    username: user,\n    password: password,\n//    remember: true\n};\n \nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 260,
        "wires": [
            [
                "f734213f36240f53",
                "deaaa7a93b03fcac"
            ]
        ]
    },
    {
        "id": "dc93a468d08946e6",
        "type": "inject",
        "z": "978ca627078b4010",
        "name": "",
        "props": [
            {
                "p": "timestamp",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "b4443f5e4343bfcb"
            ]
        ]
    },
    {
        "id": "1329140c36f2c2fa",
        "type": "debug",
        "z": "978ca627078b4010",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 260,
        "wires": []
    },
    {
        "id": "deaaa7a93b03fcac",
        "type": "http request",
        "z": "978ca627078b4010",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "322cbb2615da3e18",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 510,
        "y": 260,
        "wires": [
            [
                "980432d0229f318e",
                "e9774e248410e341"
            ]
        ]
    },
    {
        "id": "980432d0229f318e",
        "type": "json",
        "z": "978ca627078b4010",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 260,
        "wires": [
            [
                "1329140c36f2c2fa"
            ]
        ]
    },
    {
        "id": "e9774e248410e341",
        "type": "debug",
        "z": "978ca627078b4010",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 320,
        "wires": []
    },
    {
        "id": "810d19c5d714526b",
        "type": "comment",
        "z": "978ca627078b4010",
        "name": "Auth Flow",
        "info": "",
        "x": 160,
        "y": 160,
        "wires": []
    },
    {
        "id": "e72db90d32d6dc91",
        "type": "function",
        "z": "978ca627078b4010",
        "name": "Status",
        "func": "msg.url = \"http://udm.home.arpa/api/status\";\nmsg.method = \"GET\";\nmsg.headers = {\n    \"Content-Type\":\"application/json;charset=UTF-8\",\n    Accept: \"application/json\",\n    \n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 520,
        "wires": [
            [
                "b8ec5509e389a9b9"
            ]
        ]
    },
    {
        "id": "776c4f9633c76bbd",
        "type": "inject",
        "z": "978ca627078b4010",
        "name": "",
        "props": [
            {
                "p": "username",
                "v": "bdb",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 520,
        "wires": [
            [
                "e72db90d32d6dc91"
            ]
        ]
    },
    {
        "id": "a20501be9d017351",
        "type": "debug",
        "z": "978ca627078b4010",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 520,
        "wires": []
    },
    {
        "id": "b8ec5509e389a9b9",
        "type": "http request",
        "z": "978ca627078b4010",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 510,
        "y": 520,
        "wires": [
            [
                "80b96712abf71a9f",
                "563aac3115ecbb3f",
                "605e146edd6f2a9e"
            ]
        ]
    },
    {
        "id": "80b96712abf71a9f",
        "type": "json",
        "z": "978ca627078b4010",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 520,
        "wires": [
            [
                "a20501be9d017351"
            ]
        ]
    },
    {
        "id": "563aac3115ecbb3f",
        "type": "debug",
        "z": "978ca627078b4010",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 580,
        "wires": []
    },
    {
        "id": "605e146edd6f2a9e",
        "type": "html",
        "z": "978ca627078b4010",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "",
        "ret": "html",
        "as": "single",
        "x": 650,
        "y": 680,
        "wires": [
            [
                "563aac3115ecbb3f"
            ]
        ]
    },
    {
        "id": "9d34a9159833a1ae",
        "type": "function",
        "z": "978ca627078b4010",
        "name": "device-basic",
        "func": "msg.url = \"http://udm.home.arpa/stat/device-basic\";\nmsg.method = \"GET\";\nmsg.headers = {\n    \"Content-Type\":\"application/json;charset=UTF-8\",\n    Accept: \"application/json\",\n    \n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 840,
        "wires": [
            [
                "deaa0d52d0240398"
            ]
        ]
    },
    {
        "id": "d4b163ce7c117dda",
        "type": "inject",
        "z": "978ca627078b4010",
        "name": "",
        "props": [
            {
                "p": "username",
                "v": "bdb",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 840,
        "wires": [
            [
                "9d34a9159833a1ae"
            ]
        ]
    },
    {
        "id": "fd5a0122638dfe52",
        "type": "debug",
        "z": "978ca627078b4010",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 840,
        "wires": []
    },
    {
        "id": "deaa0d52d0240398",
        "type": "http request",
        "z": "978ca627078b4010",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 510,
        "y": 840,
        "wires": [
            [
                "d765df24bdeadc1a",
                "764bcf5e5f678b8c",
                "81cad8106229113c"
            ]
        ]
    },
    {
        "id": "d765df24bdeadc1a",
        "type": "json",
        "z": "978ca627078b4010",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 840,
        "wires": [
            [
                "fd5a0122638dfe52"
            ]
        ]
    },
    {
        "id": "764bcf5e5f678b8c",
        "type": "debug",
        "z": "978ca627078b4010",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 900,
        "wires": []
    },
    {
        "id": "81cad8106229113c",
        "type": "html",
        "z": "978ca627078b4010",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "",
        "ret": "html",
        "as": "single",
        "x": 650,
        "y": 1000,
        "wires": [
            [
                "764bcf5e5f678b8c"
            ]
        ]
    },
    {
        "id": "e5246685c8f52273",
        "type": "function",
        "z": "978ca627078b4010",
        "name": "device-basic",
        "func": "msg.url = \"http://udm.home.arpa/stat/stat/alarm\";\nmsg.method = \"GET\";\nmsg.headers = {\n    \"Content-Type\":\"application/json;charset=UTF-8\",\n    Accept: \"application/json\",\n    \n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 920,
        "wires": [
            [
                "deaa0d52d0240398"
            ]
        ]
    },
    {
        "id": "18631d3f83e9e21b",
        "type": "inject",
        "z": "978ca627078b4010",
        "name": "",
        "props": [
            {
                "p": "username",
                "v": "bdb",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 920,
        "wires": [
            [
                "e5246685c8f52273"
            ]
        ]
    },
    {
        "id": "a5ce87e2a4096e69",
        "type": "debug",
        "z": "978ca627078b4010",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1280,
        "wires": []
    },
    {
        "id": "5d9310309eba09a5",
        "type": "UnifiWS",
        "z": "978ca627078b4010",
        "d": true,
        "name": "",
        "server": "42b161f954aebdaf",
        "x": 150,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "f734213f36240f53",
        "type": "debug",
        "z": "978ca627078b4010",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 160,
        "wires": []
    },
    {
        "id": "4ef6ca2ee76aa499",
        "type": "Unifi",
        "z": "978ca627078b4010",
        "name": "",
        "server": "38ac84090cedad42",
        "command": "20",
        "debug": false,
        "x": 1640,
        "y": 600,
        "wires": [
            [
                "7e1546b5116663e8"
            ],
            [
                "7de79d021c5ea87c"
            ]
        ]
    },
    {
        "id": "7e1546b5116663e8",
        "type": "debug",
        "z": "978ca627078b4010",
        "name": "debug 1131",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 600,
        "wires": []
    },
    {
        "id": "7de79d021c5ea87c",
        "type": "debug",
        "z": "978ca627078b4010",
        "name": "debug 1132",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 660,
        "wires": []
    },
    {
        "id": "67a96149a17aedce",
        "type": "inject",
        "z": "978ca627078b4010",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1440,
        "y": 600,
        "wires": [
            [
                "4ef6ca2ee76aa499"
            ]
        ]
    },
    {
        "id": "72a85734b69222c6",
        "type": "unifi-request",
        "z": "978ca627078b4010",
        "name": "",
        "accessControllerNodeId": "63f728088a9b7208",
        "endpoint": "/proxy/network/api/s/default/stat/health",
        "method": "GET",
        "data": "{}",
        "dataType": "json",
        "responseType": "json",
        "x": 530,
        "y": 1280,
        "wires": [
            [
                "a5ce87e2a4096e69"
            ]
        ]
    },
    {
        "id": "e7ec0e7d429930d6",
        "type": "inject",
        "z": "978ca627078b4010",
        "name": "",
        "props": [
            {
                "p": "username",
                "v": "bdb",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 310,
        "y": 1280,
        "wires": [
            [
                "72a85734b69222c6"
            ]
        ]
    },
    {
        "id": "f8d77903088f315b",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"payload\":{\"result\":{\"data\":[{\"controller\":\"0755 RTCR\",\"cellname\":\"01.01 A-C1 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.01 A-COMP#1\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.02 A-C2 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.02 A-COMP#2\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.03 A-C3 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.03 A-COMP#3\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.04 A-C4 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.04 A-COMP#4\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.05 A-C5 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.05 A-COMP#5\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.09 A-C1 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.10 A-C2 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.11 A-C3 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.12 A-C4 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.13 A-C5 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.01 A-SUCTN\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.01 DEF DIFF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.02 A-DISCHG\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.02 A-SPLT V\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.03 A-EXH FN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.03 A-SCT TP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.04 A-DIS TP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.04 RCVR HTR\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.05 A-LQ PRS\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.05 SBCL VLV\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.06 A-LQ TMP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.06 SBCL DIS\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.07 A-SWCHBK\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.07 SBCL IN\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.08 A01 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.08 SBCL OUT\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.09 A-DL PRS\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.10 A-DL TMP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.12 A-PHASE\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.13 A-DISK#2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.14 A-DISK#1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.16 A-HI/LOW\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.01 A-SHTDWN\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.01 A01 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.02 A02 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.02 RCVR OUT\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.03 A-LQ LVL\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.03 A03 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.04 A-O.A.T.\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.04 A04 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.05 A05 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.05 ENCL TMP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.06 A06 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.07 A07 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.08 A08 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"04.01 A09  DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"04.02 A10  DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"04.03 A11  DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"04.04 A12  DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.01 B-C1 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.01 B-COMP#1\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.02 B-C2 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.02 B-COMP#2\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.03 B-C3 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.03 B-COMP#3\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.04 B-C4 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.04 B-COMP#4\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.05 B-C5 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.05 B-COMP#5\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.09 B-C1 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.10 B-C2 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.11 B-C3 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.12 B-C4 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.13 B-C5 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.01 B-SUCTN\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.01 B-SWCHBK\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.02 B-DISCHG\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.02 B-SPLT V\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.03 B-EXH FN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.03 B-SCT TP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.04 B-DIS TP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.04 RCVR HTR\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.05 B-LQ PRS\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.05 B10 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.06 B-LQ TMP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.08 B-SHTDWN\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.09 B-DL PRS\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.10 B-DL TMP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.12 B-PHASE\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.13 B-CMP SW\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.14 B-DISK#1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.15 B-DISK#2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.16 B-HI/LOW\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.01 B01 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.01 RCVR OUT\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.02 B-LQ LVL\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.02 B02 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.03 B-O.A.T.\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.03 B03 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.04 B04 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.04 ENCL TMP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.05 B06 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.06 B07 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.07 B08 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.08 B09 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"0755 RTCR\",\"celllongname\":\"\",\"celltype\":74,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"0755 WI\",\"celllongname\":\"\",\"celltype\":74,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"08.01 D01 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"08.02 D01 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"08.05 D01 DOOR\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"08.06 D01 SUCT\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"08.07 D01 DSCH\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"08.08 D01 LEAK\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.01 A-CFAN#1\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.01 A01A T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.02 A-CFAN#2\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.02 A01A D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.03 A01B T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.04 A01B D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.05 A01C T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.06 A01C D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.07 A02 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.08 A-SPLT F\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.08 A02 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.09 A02 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.10 A02 D2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.11 A02 T3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.12 A02 D3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.13 A03 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.14 A03 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.15 A03 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.16 A03 D2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"1-A01 DEFROST\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"1-A01 REFRIG\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"1-A09  DT MED\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"1-A10  DT MED\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"1-A11  DT MED\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"1-A12  DT MED\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.01 A03 T3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.01 B-CFAN#1\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.02 A03 D3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.02 B-CFAN#2\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.03 A03 T4\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.03 B-CFAN#3\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.04 A03 D4\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.05 A03 T5\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.06 A03 D5\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.07 A09  T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.08 A09  R1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.08 B-SPLT F\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.09 A10  T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.10 A10  D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.11 B01 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.12 B02 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.13 B03 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.14 B03 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.15 B03 T3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.16 B04  T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.01 B05  T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.02 B05  T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.03 B06 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.04 B06 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.05 B06 T3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.06 B07 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.07 B07 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.08 B07 T3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.09 B07 T4\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.10 B08 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.11 B08 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.12 B08 T3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.13 B08 T4\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.15 ZONE TMP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.16 ZONE RH\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.01 A04 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.02 A04 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.03 A04 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.04 A04 D2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.05 A05 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.06 A05 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.07 A05 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.08 A05 D2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.09 A06 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.10 A06 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.11 A06 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.12 A06 D2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.13 A06 T3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.14 A06 D3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.15 A07 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.16 A07 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.01 A07 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.02 A07 D2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.03 A08 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.04 A08 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.05 A08 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.06 A08 D2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.07 A11  T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.08 A11  D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.09 A12  T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.10 A12  D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.11 B09 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.12 B09 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.13 B10 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.14 B10 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.15 B10 T3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.01 C01 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.02 C01 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.03 C01 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.04 C01 D2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.06 E01 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.07 E01 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.08 F01 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.09 G01 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.12 C01 DOOR\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.14 E01 DOOR\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.15 F01 DOOR\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.16 VAC ALRM\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.01 C01 SUCT\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.02 C01 DSCH\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.05 E01 SUCT\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.06 E01 DSCH\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.07 F01 SUCT\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.08 F01 DSCH\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.09 G01 SUCT\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.10 G01 DSCH\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.11 C01 LEAK\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.13 E01 LEAK\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.14 F01 LEAK\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.15 G01 LEAK\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.01 A01A DT\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.01 ALM LITE\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.02 A01B DT\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.02 ALM HORN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.03 A01C DT\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.03 SECURITY\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.04 A09  DT\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.05 A10  DT\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.06 A11  DT\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.07 A12  DT\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.14 #101 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.16 ALM SLNC\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"17.01 C01 FAN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"17.02 E01 FAN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"17.03 C01 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"17.05 E01 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"17.06 F01 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"17.07 G01 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"18.01 C01 STRB\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"18.02 C01 HORN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"18.05 E01 STRB\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"18.06 E01 HORN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"18.07 F01 STRB\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"18.08 F01 HORN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"19.01 G01 STRB\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"19.02 G01 HORN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"19.07 C01 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"19.08 E01 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"20.01 CASE LTS\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"20.02 ANTI-SWT\",\"celllongname\":\"\",\"celltype\":36,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"20.03 A11  DT\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"20.04 A12  DT\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"24.01 A09  DT\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"24.02 A10  DT\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"25.03 D01 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"25.05 D01 STRB\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"25.06 D01 HORN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"8RO#10\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"8RO#19\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"8RO#9\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-DROP LEG PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-DROP LEG TMP\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-HI/LO BYPASS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-LIQUID LEVEL\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-LQD HDR PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-LQD HDR TMP\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-MANUAL COMP\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-OUTSIDE TEMP\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-RACK EXHAUST\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-RCVR HEATER\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-RCVR OUTLET\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-RUPTURE DISK\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-RVCR LVL-LT\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-SHUTDOWN PRF\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-SUBCLR DISAB\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-SUBCLR VALVE\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-SUCTION PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"ACCESS LOG\",\"celllongname\":\"\",\"celltype\":236,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"ACCESS SERVICE\",\"celllongname\":\"\",\"celltype\":226,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"ADVISORY LOG\",\"celllongname\":\"\",\"celltype\":234,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"ADVISORY SERV\",\"celllongname\":\"\",\"celltype\":225,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-DROP LEG PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-DROP LEG TMP\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-HI/LO BYPASS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-LIQUID LEVEL\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-LQD HDR PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-LQD HDR TMP\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-MANUAL COMP\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-OUTSIDE TEMP\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-RACK EXHAUST\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-RCVR HEATER\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-RCVR OUTLET\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-RUPTURE DISK\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-RVCR LVL-LT\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-SHUTDOWN PRF\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-SUCTION PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"BASE LOG\",\"celllongname\":\"\",\"celltype\":73,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"C01 DISCH PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"C01 DOORSWITCH\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"C01 EVAP FANS\",\"celllongname\":\"\",\"celltype\":67,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"C01 LEAK HORN\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"C01 LEAK STROB\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"C01 REF LEAK\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"C01 SUCTN PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"CASE LIGHTS\",\"celllongname\":\"\",\"celltype\":80,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"D01 DISCHG PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"D01 DOORSWITCH\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"D01 LEAK HORN\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"D01 LEAK STROB\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"D01 REF LEAK\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"D01 SUCTN PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"DEVICE SUMM\",\"celllongname\":\"\",\"celltype\":89,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"DIGITAL\",\"celllongname\":\"\",\"celltype\":73,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"DOOR HEATERS\",\"celllongname\":\"\",\"celltype\":132,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"E01 DISCHG PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"E01 DOORSWITCH\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"E01 LEAK HORN\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"E01 LEAK STROB\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"E01 REF LEAK\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"E01 SUCTN PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"F01 DISCHG PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"F01 DOORSWITCH\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"F01 LEAK HORN\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"F01 LEAK STROB\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"F01 REF LEAK\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"F01 SUCTN PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"G01 DISCHG PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"G01 LEAK HORN\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"G01 LEAK STROB\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"G01 REF LEAK\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"G01 SUCTN PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"GENERAL SERV\",\"celllongname\":\"\",\"celltype\":227,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"GLOBAL DATA\",\"celllongname\":\"\",\"celltype\":91,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"LGHT OVERRIDE\",\"celllongname\":\"\",\"celltype\":80,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M16#10\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M16#11\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M16#13\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#1\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#12\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#14\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#15\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#16\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#2\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#3\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#4\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#5\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#6\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#7\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#9\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#1\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#16\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#17\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#18\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#2\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#20\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#24\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#3\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#4\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#5\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#6\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#7\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M88I#8\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M88O#25\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"NOTE PAD\",\"celllongname\":\"\",\"celltype\":224,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"NV HANDLER\",\"celllongname\":\"\",\"celltype\":230,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"NetworkService\",\"celllongname\":\"\",\"celltype\":229,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"OVERRIDE LOG\",\"celllongname\":\"\",\"celltype\":237,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1M2_02D_A09_1\",\"celllongname\":\"HillPhoenix - OWIZ                  \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1M2_02D_A10_1\",\"celllongname\":\"Tyler - N5NGN                       \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1M2_02D_A11_1\",\"celllongname\":\"HillPhoenix - OWIZ                  \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1M2_03D_A12_1\",\"celllongname\":\"HillPhoenix - O5M/O5DM              \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1M2_BNK_A01_A\",\"celllongname\":\"HillPhoenix - O5M/O5DM              \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1M2_BNK_A01_B\",\"celllongname\":\"Hussmann - RLN                      \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1M2_BNK_A01_C\",\"celllongname\":\"Hussmann - RLN                      \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MB_12D_B10_3\",\"celllongname\":\"--                                  \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MD_09D_B09_2\",\"celllongname\":\"--                                  \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MD_18F_B05_2\",\"celllongname\":\"Hussmann - RLN                      \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MD_30F_B06_3\",\"celllongname\":\"HillPhoenix - O5M/O5DM              \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MD_32F_B03_3\",\"celllongname\":\"Tyler - N5FGN                       \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MD_40F_B07_4\",\"celllongname\":\"HillPhoenix - O5M/O5DM              \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MD_40F_B08_4\",\"celllongname\":\"Tyler - N5NGN                       \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MI_07D_A04_2\",\"celllongname\":\"Kysor - 10X18X9.5                   \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MI_07D_A05_2\",\"celllongname\":\"Tyler - N5FGN                       \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MI_08D_A07_2\",\"celllongname\":\"Fresh Pet                           \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MI_08D_A08_2\",\"celllongname\":\"Kysor - 14X35X9.5                   \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MI_15D_A02_3\",\"celllongname\":\"HillPhoenix - OWIZ                  \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MI_15D_A03_5\",\"celllongname\":\"--                                  \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MI_15D_A06_3\",\"celllongname\":\"--                                  \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MM_12F_B04_1\",\"celllongname\":\"Hussmann - RLN                      \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MP_06F_B01_1\",\"celllongname\":\"HillPhoenix - O5M/O5DM              \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MP_08F_B02_1\",\"celllongname\":\"Tyler - N5FGN                       \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1RF_CMP_A\",\"celllongname\":\"HillPhoenix - RS - C01054\\r\\n\",\"celltype\":162,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1RR_CMP_B\",\"celllongname\":\"HillPhoenix\\r\\n\",\"celltype\":162,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"RAOA_WIB_G01\",\"celllongname\":\"Kysor - 9.5X40X9.5                  \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"RAOD_WIB_D01\",\"celllongname\":\"Hussmann - RLN                      \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"RAOF_WIB_C01\",\"celllongname\":\"Hussmann - RLN                      \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"RAOM_WIB_E01\",\"celllongname\":\"HillPhoenix - O5M/O5DM              \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"RAOP_WIB_F01\",\"celllongname\":\"Hussmann - RLN                      \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"RARF_ACC_A\",\"celllongname\":\"Bohn/Heatcraft - BNLG01A028 - T11B00001\\r\",\"celltype\":129,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"RARR_ACC_B\",\"celllongname\":\"Bohn/Heatcraft - BNLD06A048 - T11B00002\\r\",\"celltype\":129,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"REF ALM HORN\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"REF ALM LIGHT\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"REF ALM SILENC\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"REMOTE DIAL\",\"celllongname\":\"\",\"celltype\":233,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"RVCR LVL-LT\",\"celllongname\":\"\",\"celltype\":73,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"SECURITY ALARM\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"SM-ESR #1\",\"celllongname\":\"\",\"celltype\":158,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"SM-ESR #2\",\"celllongname\":\"\",\"celltype\":158,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"SM-ESR #4\",\"celllongname\":\"\",\"celltype\":158,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"SM-ESR #5\",\"celllongname\":\"\",\"celltype\":158,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"SM-ESR #8\",\"celllongname\":\"\",\"celltype\":158,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"STORE HUMIDITY\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"STORE TEMP\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"SVSR_02D_#101\",\"celllongname\":\"Hussmann - RLN                      \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"System\",\"celllongname\":\"\",\"celltype\":238,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"TIME SERVICES\",\"celllongname\":\"\",\"celltype\":228,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"VAC PUMP ALARM\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"}]},\"id\":0},\"_msgid\":\"615395228510fb24\",\"url\":\"http://t0755ref0001.target.com/JSON-RPC\",\"headers\":{\"date\":\"THU APR 21 19:43:24 2022\",\"server\":\"GoAhead-Webs\",\"content-length\":\"51135\",\"content-type\":\"text/html\",\"connection\":\"close\",\"set-cookie\":[\"CPCE2SID=3EA9700A_9C4E530-30B0_0001155C; path=/\"],\"x-node-red-request-node\":\"46459a40\"},\"statusCode\":200,\"responseUrl\":\"http://t0755ref0001.target.com/JSON-RPC\",\"redirectList\":[],\"retry\":0,\"responseCookies\":{\"CPCE2SID\":{\"path\":\"/\",\"value\":\"3EA9700A_9C4E530-30B0_0001155C\"}}}",
        "payloadType": "json",
        "x": 330,
        "y": 160,
        "wires": [
            [
                "0154d737c8180cb0",
                "880985249f9899ad"
            ]
        ]
    },
    {
        "id": "e7c8665da6f34dd7",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 160,
        "wires": []
    },
    {
        "id": "c743e68cb48dc2ed",
        "type": "function",
        "z": "44c96c079469bdd0",
        "name": "Periodic Event Loop",
        "func": "let dev_id = msg.device_name;\nlet hardware_serial = msg.payload.end_device_ids.dev_eui;\nlet app_id = msg.payload.end_device_ids.application_ids.application_id;\nlet counter = msg.payload.uplink_message.f_cnt;\nlet events = msg.payload.uplink_message.decoded_payload.events;\nlet influxMsg = {};\n\n\n/*\nTO Do...  when unknown_event is passed through to influxdb, it throws 400 bad request error.\nHow can I filter out using an array of bad events in my if statement most efficeintly?\nmap filter?\n\nlet exclusion_list = ['unknown_event', 'raw_data'];\n*/\ninfluxMsg.measurement = \"radio_bridge\";\n//var influxMsg = [];\n\n//if (msg.payload.object.events[i].n === \"temperature\") {\n\n/*\n122719 bdb - Doing a couple things here intentionally:  \n\n1) Stripping off raw_data packets - Already caputring them in mongodb if needed.  \n2) defining influxdb measurement equal to the name of the event from the codec.\n3) defining events[i].n \n\n*/\n\n\nfor (var i = 0 ; i < events.length; i++) {\n    //if (events[i].n !=[\"raw_data\", \"unknown_event\"] ){\n    //if (events[i].n != \"raw_data\" || events[i].n != \"unknown_event\" ) {\n    if (events[i].n != \"raw_data\") {\n        influxMsg = [{\n            measurement: events[i].n,\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: events[i].n,\n            u: events[i].u,\n            v: events[i].v,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: events[i].n\n        }],}];\n        node.send(influxMsg);\n    } else {}\n}    \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "0154d737c8180cb0",
        "type": "function",
        "z": "44c96c079469bdd0",
        "name": "loop example",
        "func": "let data = msg.payload.payload.result.data;\nlet standard_circuits = [];\n\n\nfor (var i = 0 ; i < data.length; i++) {\n    //if (events[i].n !=[\"raw_data\", \"unknown_event\"] ){\n    //if (events[i].n != \"raw_data\" || events[i].n != \"unknown_event\" ) {\n    if (data[i].celltype == 131) {\n            standard_circuits.push(data[i].controller+\":\"+data[i].cellname+\":CONTROL TEMP\");\n            standard_circuits.push(data[i].controller+\":\"+data[i].cellname+\":CIRCUIT STATE\");\n    } else {}\n}\nflow.set ('standard_circuits', standard_circuits)\n//node.send(standard_circuits);\n/*\n\n        influxMsg = [{\n            measurement: events[i].n,\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: events[i].n,\n            u: events[i].u,\n            v: events[i].v,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: events[i].n\n        }],}];\n        node.send(influxMsg);\n    } else {}\n}    \nvar equipment_pass = [];\nvar equipment_fail = [];\nvar to_do = flow.get('to_do');\n\n\n\nfor (var i = 0 ; i < results.length; i++) {\n    if (results[i] == \"[OK]\"){\n        equipment_pass.push(equipment_id);\n        }\n    else {\n        equipment_fail.push(equipment_id);\n        }\n}\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 160,
        "wires": [
            [
                "e7c8665da6f34dd7"
            ]
        ]
    },
    {
        "id": "13b791.91a1886f",
        "type": "function",
        "z": "44c96c079469bdd0",
        "name": "results loop",
        "func": "let results = msg.payload.set_values_return.set_values_return;\nlet equipment_id = msg.equipment_id;\nlet loop_msg = {};\nvar equipment_pass = [];\nvar equipment_fail = [];\nvar to_do = flow.get('to_do');\n\n\n\nfor (var i = 0 ; i < results.length; i++) {\n    if (results[i] == \"[OK]\"){\n        equipment_pass.push(equipment_id);\n        }\n    else {\n        equipment_fail.push(equipment_id);\n        }\n}\n\nconst unique_pass = equipment_pass;\nlet pass = [...new Set(unique_pass)]\n\n\nconst unique_fail = equipment_fail;\nlet fail = [...new Set(unique_fail)]\n\nif (fail.length === 1) {\n    fail_msg = {payload: {\n    failed_equipment: fail,\n    alarm_setup: false\n    }}\n    var failed = flow.get('failed') || \"\";\n    failed.push(fail);\n    flow.set ('failed', failed)\n    return [null, fail_msg]\n    \n} else if (pass.length === 1){\n    var completed = flow.get('completed') || \"\";\n    completed.push(pass);\n    flow.set('completed', completed)\n    to_do.pop();\n    flow.set(\"to_do\", to_do);\n    if (to_do === undefined || to_do.length === 0) {\n        complete_msg = {payload: \"Setup complete, to_do equipment list is empty.\"}\n        return [null, complete_msg]\n    } else {\n    var next_equipment = to_do[to_do.length -1];\n    length_test = {length_test: next_equipment.length,\n                    next_equipment: next_equipment,\n    };\n    pass_msg = {\n        payload: {\n            equipment_id: next_equipment,\n            alarm_setup: true\n        }\n    }\n    return [pass_msg, null];\n}} else {\n    fail_msg = {payload: {\n        failed_equipment: fail,\n        alarm_setup: false\n    }}\n    return [null, fail_msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 460,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "bb549dc1.c006b",
        "type": "function",
        "z": "44c96c079469bdd0",
        "name": "Standard Circuit",
        "func": "var loc = msg.payload;\nvar cells = [\n    'E2 Unit01:WIFI XR75 TEST:2048', // CIRCUIT STATE\n    'E2 Unit01:WIFI XR75 TEST:CIRCUIT STATE',\n//    'E2 Unit01:WIFI XR75 TEST:2049', //CASE TEMP STPT\n//    'E2 Unit01:WIFI XR75 TEST:CASE TEMP STPT',\n//    'E2 Unit01:WIFI XR75 TEST:2050', // REFRIG SOLENOID\n//    'E2 Unit01:WIFI XR75 TEST:2051',\n//    'E2 Unit01:WIFI XR75 TEST:2052',//CASE TEMP 1\n//    'E2 Unit01:WIFI XR75 TEST:2054',\n//    'E2 Unit01:WIFI XR75 TEST:DEFROST',\n//    'E2 Unit01:WIFI XR75 TEST:2056',\n//    'E2 Unit01:WIFI XR75 TEST:FAN',\n//    'E2 Unit01:WIFI XR75 TEST:2061',\n//    'E2 Unit01:WIFI XR75 TEST:2062',\n//    'E2 Unit01:WIFI XR75 TEST:7044', \n//    'E2 Unit01:WIFI XR75 TEST:CASE ALM HI SP',\n//    'E2 Unit01:WIFI XR75 TEST:7045',  //CONTROL TEMP\n//    'E2 Unit01:WIFI XR75 TEST:CONTROL TEMP',\n//    'E2 Unit01:WIFI XR75 TEST:2055', // PEAK DEF TEMP\n//    'E2 Unit01:WIFI XR75 TEST:PEAK DEF TEMP',\n//    'E2 Unit01:WIFI XR75 TEST:2070',   //CASE ALM HI SP\n//    'E2 Unit01:WIFI XR75 TEST:2071',  //CASE ALM LO SP\n//    'E2 Unit01:WIFI XR75 TEST:2072',  //COMB ALM HI SP\n//    'E2 Unit01:WIFI XR75 TEST:2073',  //COMB ALM LO SP\n//    'E2 Unit01:WIFI XR75 TEST:7001',  // TEMP CTRL STRAT\n//    'E2 Unit01:WIFI XR75 TEST:7002',  // TEMP DEADBAND\n//    'E2 Unit01:WIFI XR75 TEST:TEMP DEADBAND',  // TEMP DEADBAND\n//    'E2 Unit01:WIFI XR75 TEST:7009',  //\n//    'E2 Unit01:WIFI XR75 TEST:DEFROST TYPE',  //\n//    'E2 Unit01:WIFI XR75 TEST:7011',  //DEFROST DELAY\n//    'E2 Unit01:WIFI XR75 TEST:DEFROST DELAY',  //DEFROST DELAY\n//    'E2 Unit01:WIFI XR75 TEST:7014',  //DEFR DURATION\n//    'E2 Unit01:WIFI XR75 TEST:DEFR DURATION',  //DEFR DURATION\n//    'E2 Unit01:WIFI XR75 TEST:7016',  //TERM TYPE\n//    'E2 Unit01:WIFI XR75 TEST:TERM TYPE',  //TERM TYPE\n//    'E2 Unit01:WIFI XR75 TEST:7021',  //FAN DURING DEFR\n//    'E2 Unit01:WIFI XR75 TEST:7026',  // DEFROST TIME 1\n//    'E2 Unit01:WIFI XR75 TEST:7027',  // DEFROST TIME 2\n//    'E2 Unit01:WIFI XR75 TEST:7028',  // DEFROST TIME 3\n//    'E2 Unit01:WIFI XR75 TEST:7029',  // DEFROST TIME 4\n//    'E2 Unit01:WIFI XR75 TEST:7030',  // DEFROST TIME 5\n//    'E2 Unit01:WIFI XR75 TEST:7031',  // DEFROST TIME 6\n//    'E2 Unit01:WIFI XR75 TEST:7046',    // CASE ALRM DELAY\n//    'E2 Unit01:WIFI XR75 TEST:7044',    // CASE ALARM HI\n//    'E2 Unit01:WIFI XR75 TEST:7045',    // CASE ALARM LO\n//    'E2 Unit01:WIFI XR75 TEST:9', //ACTIVE SETPT\n//    'E2 Unit01:CONDENSER001:40',\n//    'E2 Unit01:CONDENSER001:74'\n    ];\n\n\nreturn {payload: cells,\n    loc: loc,\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "880985249f9899ad",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 80,
        "wires": []
    },
    {
        "id": "9bd706bd50bfa38b",
        "type": "ui_form",
        "z": "44c96c079469bdd0",
        "name": "",
        "label": "",
        "group": "df71c92d64343c4c",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "phone number",
                "value": "phone_number",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "phone_number": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 1190,
        "y": 180,
        "wires": [
            [
                "7d4f40f4bac6ce86"
            ]
        ]
    },
    {
        "id": "7d4f40f4bac6ce86",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 180,
        "wires": []
    },
    {
        "id": "4c3a83eae00fe03b",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "multisensor-lux",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"topic\":\"zwave/greatRoom/multisensor/49/0/Illuminance\",\"payload\":{\"id\":\"19-49-0-Illuminance\",\"nodeId\":19,\"commandClass\":49,\"commandClassName\":\"Multilevel Sensor\",\"endpoint\":0,\"property\":\"Illuminance\",\"propertyName\":\"Illuminance\",\"type\":\"number\",\"readable\":true,\"writeable\":false,\"label\":\"Illuminance\",\"ccSpecific\":{\"sensorType\":3,\"scale\":1},\"stateless\":false,\"commandClassVersion\":5,\"unit\":\"Lux\",\"list\":false,\"value\":3,\"lastUpdate\":1652666937512,\"nodeName\":\"multisensor\",\"nodeLocation\":\"greatRoom\"},\"qos\":1,\"retain\":false,\"_msgid\":\"9b70cbc059ca0c13\"}",
        "payloadType": "json",
        "x": 760,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "360b01c82e5b2988",
        "type": "snmp",
        "z": "44c96c079469bdd0",
        "host": "udm.home.apra",
        "version": "1",
        "timeout": 5,
        "community": "public",
        "auth": "noAuthNoPriv",
        "authprot": "MD5",
        "privprot": "DES",
        "oids": "",
        "name": "",
        "x": 680,
        "y": 600,
        "wires": [
            [
                "296c43b178efe0e6"
            ]
        ]
    },
    {
        "id": "345ba4cd011bb764",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "",
        "props": [
            {
                "p": "username",
                "v": "bdb",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 470,
        "y": 600,
        "wires": [
            [
                "360b01c82e5b2988"
            ]
        ]
    },
    {
        "id": "296c43b178efe0e6",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 600,
        "wires": []
    },
    {
        "id": "066badd8e06b2654",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "",
        "props": [
            {
                "p": "user",
                "v": "WATTTIMEUSER",
                "vt": "env"
            },
            {
                "p": "pass",
                "v": "WATTTIMEPASS",
                "vt": "env"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 290,
        "y": 1360,
        "wires": [
            [
                "ed7b92ed2961b505"
            ]
        ]
    },
    {
        "id": "ed7b92ed2961b505",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 1360,
        "wires": []
    },
    {
        "id": "d53dedc045fc17c8",
        "type": "function",
        "z": "44c96c079469bdd0",
        "name": "WATT Time Token",
        "func": "msg.url = 'https://api2.watttime.org/v2/login'\nmsg.method = 'GET'\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "bc3179fe375bf6d8",
        "type": "mqtt in",
        "z": "44c96c079469bdd0",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3b0217bc.de55b8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1190,
        "y": 340,
        "wires": [
            [
                "8fbc6af32c8a10b2",
                "f21eb7ab1f744da2",
                "37c41c03b034c372"
            ]
        ]
    },
    {
        "id": "8fbc6af32c8a10b2",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "zwave #",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 280,
        "wires": []
    },
    {
        "id": "f21eb7ab1f744da2",
        "type": "switch",
        "z": "44c96c079469bdd0",
        "name": "topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "zwave/bdb_office/#",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 420,
        "wires": [
            [
                "c9f2b8345590aa2f"
            ],
            [
                "38f98df940fd1450"
            ]
        ]
    },
    {
        "id": "c9f2b8345590aa2f",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "bdb_office",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 380,
        "wires": []
    },
    {
        "id": "38f98df940fd1450",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "zwave_otherwise",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 480,
        "wires": []
    },
    {
        "id": "ac1375bc70a73e9b",
        "type": "status",
        "z": "44c96c079469bdd0",
        "name": "",
        "scope": null,
        "x": 560,
        "y": 900,
        "wires": [
            [
                "be9b49b4959ca0c9"
            ]
        ]
    },
    {
        "id": "be9b49b4959ca0c9",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "status",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 900,
        "wires": []
    },
    {
        "id": "37c41c03b034c372",
        "type": "switch",
        "z": "44c96c079469bdd0",
        "name": "Electric Consumption",
        "property": "payload.propertyKeyName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Electric Consumption [V]",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1460,
        "y": 640,
        "wires": [
            [
                "7242a88226c33e17"
            ]
        ]
    },
    {
        "id": "7242a88226c33e17",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "Electric_V_Consumed",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1700,
        "y": 640,
        "wires": []
    },
    {
        "id": "474d89f5f61befe0",
        "type": "comment",
        "z": "44c96c079469bdd0",
        "name": "AlsoEnergy",
        "info": "curl --request POST \\\n\n  --url https://api.alsoenergy.com//Auth/token \\\n\n  --header 'Content-Type: multipart/form-data' \\\n\n  --header 'User-Agent: insomnia/2023.5.8' \\\n\n  --form grant_type=password \\\n\n  --form username=TTSSBScrumTeam@target.com \\\n\n  --form 'password=E?rGXnvV3wK9X$Tj'",
        "x": 380,
        "y": 2120,
        "wires": []
    },
    {
        "id": "f0813404909e5aac",
        "type": "exec",
        "z": "44c96c079469bdd0",
        "command": "curl --request POST \\    --url https://api.alsoenergy.com//Auth/token \\    --header 'Content-Type: multipart/form-data' \\    --header 'User-Agent: insomnia/2023.5.8' \\    --form grant_type=password \\    --form username=TTSSBScrumTeam@target.com \\    --form 'password=E?rGXnvV3wK9X$Tj'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "curl",
        "x": 610,
        "y": 2280,
        "wires": [
            [
                "87722eb1c455c43d"
            ],
            [
                "b8b17425ffbdec3c"
            ],
            [
                "efe2a3bf462fb3a3"
            ]
        ]
    },
    {
        "id": "bc5ee03d59315595",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 2280,
        "wires": [
            [
                "f0813404909e5aac"
            ]
        ]
    },
    {
        "id": "87722eb1c455c43d",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 2220,
        "wires": []
    },
    {
        "id": "b8b17425ffbdec3c",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 2280,
        "wires": []
    },
    {
        "id": "efe2a3bf462fb3a3",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 2340,
        "wires": []
    },
    {
        "id": "40274abe79aa90d4",
        "type": "exec",
        "z": "44c96c079469bdd0",
        "command": "curl --request POST --header 'Content-Type: multipart/form-data' -F grant_type=password -F username=TTSSBScrumTeam@target.com -F password=E?rGXnvV3wK9X$Tj --url https://api.alsoenergy.com/Auth/token",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "curl",
        "x": 590,
        "y": 2520,
        "wires": [
            [
                "29993ee1bc16e41f"
            ],
            [
                "8874e1554f16c39a"
            ],
            [
                "dd2c307ac94d0a88"
            ]
        ]
    },
    {
        "id": "8e0d35a31b28a0fa",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 2520,
        "wires": [
            [
                "40274abe79aa90d4"
            ]
        ]
    },
    {
        "id": "29993ee1bc16e41f",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 2460,
        "wires": []
    },
    {
        "id": "8874e1554f16c39a",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 2520,
        "wires": []
    },
    {
        "id": "dd2c307ac94d0a88",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 2580,
        "wires": []
    },
    {
        "id": "1f29cb1922695962",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "kilowatts",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"info\":[{\"hardwareId\":426261,\"dataIndex\":0,\"name\":\"KWHrec\",\"units\":\"KilowattHours\"},{\"hardwareId\":426261,\"dataIndex\":1,\"name\":\"KWHdel\",\"units\":\"KilowattHours\"},{\"hardwareId\":426261,\"dataIndex\":2,\"name\":\"KW\",\"units\":\"Kilowatts\"},{\"hardwareId\":426261,\"dataIndex\":3,\"name\":\"PowerFactor\",\"units\":\"PowerFactor\"},{\"hardwareId\":426261,\"dataIndex\":4,\"name\":\"VacLL\",\"units\":\"Volts\"},{\"hardwareId\":426261,\"dataIndex\":5,\"name\":\"Vac\",\"units\":\"Volts\"},{\"hardwareId\":426261,\"dataIndex\":6,\"name\":\"Iac\",\"units\":\"Amps\"},{\"hardwareId\":426261,\"dataIndex\":7,\"name\":\"VacAB\",\"units\":\"Volts\"},{\"hardwareId\":426261,\"dataIndex\":8,\"name\":\"VacBC\",\"units\":\"Volts\"},{\"hardwareId\":426261,\"dataIndex\":9,\"name\":\"VacCA\",\"units\":\"Volts\"},{\"hardwareId\":426261,\"dataIndex\":10,\"name\":\"VacA\",\"units\":\"Volts\"},{\"hardwareId\":426261,\"dataIndex\":11,\"name\":\"VacB\",\"units\":\"Volts\"},{\"hardwareId\":426261,\"dataIndex\":12,\"name\":\"VacC\",\"units\":\"Volts\"},{\"hardwareId\":426261,\"dataIndex\":13,\"name\":\"IacC\",\"units\":\"Amps\"},{\"hardwareId\":426261,\"dataIndex\":14,\"name\":\"Frequency\",\"units\":\"Hz\"},{\"hardwareId\":426261,\"dataIndex\":15,\"name\":\"KW_A\",\"units\":\"Kilowatts\"},{\"hardwareId\":426261,\"dataIndex\":16,\"name\":\"KW_B\",\"units\":\"Kilowatts\"},{\"hardwareId\":426261,\"dataIndex\":17,\"name\":\"KW_C\",\"units\":\"Kilowatts\"},{\"hardwareId\":426261,\"dataIndex\":18,\"name\":\"PF_A\",\"units\":\"PowerFactor\"},{\"hardwareId\":426261,\"dataIndex\":19,\"name\":\"PF_B\",\"units\":\"PowerFactor\"},{\"hardwareId\":426261,\"dataIndex\":20,\"name\":\"PF_C\",\"units\":\"PowerFactor\"},{\"hardwareId\":426261,\"dataIndex\":21,\"name\":\"VA_A\",\"units\":\"VA\"},{\"hardwareId\":426261,\"dataIndex\":22,\"name\":\"VA_B\",\"units\":\"VA\"},{\"hardwareId\":426261,\"dataIndex\":23,\"name\":\"VA_C\",\"units\":\"VA\"},{\"hardwareId\":426261,\"dataIndex\":24,\"name\":\"VAR_A\",\"units\":\"VAR\"},{\"hardwareId\":426261,\"dataIndex\":25,\"name\":\"VAR_B\",\"units\":\"VAR\"},{\"hardwareId\":426261,\"dataIndex\":26,\"name\":\"VAR_C\",\"units\":\"VAR\"}],\"items\":[{\"timestamp\":\"2024-01-17T14:45:00+00:00\",\"data\":[2871257.75,661.8000000000001,7.024,0.771972,486.673,281.763,9.59646,483.712,486.293,490.013,280.337,282.909,282.035,9.30591,60.0117,2.32838,2.35399,2.30829,0.800475,0.779097,0.779097,2683.91,2776.92,2619.17,1235.07,1530.29,1215.93]},{\"timestamp\":\"2024-01-17T15:00:00+00:00\",\"data\":[2871266,661.8000000000001,33.2083,0.956667,487,281.952,41.8367,484.128,486.955,489.92,280.738,283.052,282.068,40.49,60.0067,10.8167,11.6283,10.8483,0.933333,0.946667,0.946667,11746.7,12270,11386.7,1741.67,4458.33,4016.67]},{\"timestamp\":\"2024-01-17T15:15:00+00:00\",\"data\":[2871275,661.8000000000001,35.7233,0.933333,487.115,282.017,44.535,484.603,486.843,489.893,280.935,282.942,282.177,43.4367,59.9983,11.635,11.96,12.13,0.916667,0.916667,0.916667,12696.7,12836.7,12098.3,5460,4148.33,3956.67]},{\"timestamp\":\"2024-01-17T15:30:00+00:00\",\"data\":[2871284.25,661.8000000000001,37.575,0.926667,487.002,281.952,46.5817,484.693,486.67,489.635,281.1,282.858,281.887,44.805,60.005,11.8917,13.825,11.8583,0.926667,0.98,0.98,12833.3,13898.3,12676.7,4955,4791.67,5425]},{\"timestamp\":\"2024-01-17T15:45:00+00:00\",\"data\":[2871294.25,661.8000000000001,39.66,0.953333,487.337,282.142,48.77,485.007,487.032,489.955,281.242,282.83,282.343,46.825,60.0117,13.2633,13.8317,12.5633,0.93,0.983333,0.983333,14053.3,13961.7,13231.7,1598.33,3408.33,4606.67]},{\"timestamp\":\"2024-01-17T16:00:00+00:00\",\"data\":[2871304.5,661.8000000000001,42.015,0.966667,486.8,281.832,51.2733,484.433,486.28,489.628,280.735,282.572,282.157,50.3433,60.04,13.6767,14.4883,13.835,0.943333,0.976667,0.976667,14360,14836.7,14151.7,3885,4141.67,2898.33]},{\"timestamp\":\"2024-01-17T16:15:00+00:00\",\"data\":[2871315.25,661.8000000000001,42.2683,0.99,486.117,281.44,52.2417,483.542,485.872,488.945,280.34,282.31,281.672,50.735,59.9967,14.2683,14.485,13.5117,0.97,0.953333,0.953333,14641.7,15178.3,14330,-1643.33,3376.67,3876.67]},{\"timestamp\":\"2024-01-17T16:30:00+00:00\",\"data\":[2871326,661.8000000000001,42.875,0.99,486.223,281.503,52.7183,483.463,486.173,489.022,280.45,282.427,281.63,51.14,59.9967,14.5233,14.5867,13.69,0.986667,0.933333,0.933333,14716.7,15408.3,14408.3,-4126.67,4943.33,4816.67]},{\"timestamp\":\"2024-01-17T16:45:00+00:00\",\"data\":[2871336.75,661.8000000000001,43.3217,0.983333,486.42,281.613,53.2017,484.005,486.02,489.203,280.487,282.475,281.858,51.6083,60.0033,14.1033,15.3267,13.6717,0.956667,0.97,0.97,14816.7,15556.7,14596.7,-4678.33,3671.67,5521.67]},{\"timestamp\":\"2024-01-17T17:00:00+00:00\",\"data\":[2871347.75,661.8000000000001,43.3717,0.973333,487.115,282.017,53.3717,484.497,487.155,489.685,280.808,282.978,282.257,50.82,60.0033,14.49,15.3167,13.4367,0.956667,0.976667,0.976667,15241.7,15495,14420,-138.333,3346.67,4848.33]},{\"timestamp\":\"2024-01-17T17:15:00+00:00\",\"data\":[2871358.25,661.8000000000001,42.5333,0.986667,487.042,281.973,52.675,484.288,487.225,489.658,280.863,283.017,282.077,50.8967,60.01,14.195,14.7233,13.6133,0.946667,0.966667,0.966667,14740,15496.7,14378.3,-2628.33,4798.33,4206.67]},{\"timestamp\":\"2024-01-17T17:30:00+00:00\",\"data\":[2871369,661.8000000000001,42.545,0.983333,487.618,282.308,52.2933,484.908,487.45,490.41,281.083,283.362,282.43,50.8017,60.0033,14.3133,14.7067,13.5233,0.986667,0.936667,0.936667,14448.3,15450,14405,-2256.67,2095,4941.67]},{\"timestamp\":\"2024-01-17T17:45:00+00:00\",\"data\":[2871379.25,661.8000000000001,40.7067,0.966667,487.148,282.035,50.43,484.527,486.992,489.797,280.845,283.097,282.09,48.9083,60.01,13.4083,14.3767,12.8167,0.94,0.983333,0.983333,14148.3,14673.3,13800,-635,3848.33,4183.33]},{\"timestamp\":\"2024-01-17T18:00:00+00:00\",\"data\":[2871389.25,661.8000000000001,39.855,0.966667,486.868,281.868,49.2667,484.333,486.99,489.38,280.768,283.003,281.903,47.6217,60.005,13.1933,13.8517,12.5517,0.953333,0.963333,0.963333,13885,14345,13430,3188.33,3133.33,5000]},{\"timestamp\":\"2024-01-17T18:15:00+00:00\",\"data\":[2871398.5,661.8000000000001,38.115,0.94,487.14,282.033,47.2283,484.58,486.697,490.143,280.727,282.965,282.412,46.755,60.0067,12.6083,12.4667,13.0367,0.976667,0.893333,0.893333,12951.7,13931.7,13060,3765,5950,3995]},{\"timestamp\":\"2024-01-17T18:30:00+00:00\",\"data\":[2871407.5,661.8000000000001,35.6817,0.933333,487.005,281.953,44.7267,484.258,486.87,489.758,280.74,282.92,282.125,42.7483,59.99,11.9983,12.955,10.7267,0.943333,0.963333,0.963333,12450,13185,12240,3306.67,6055,4078.33]},{\"timestamp\":\"2024-01-17T18:45:00+00:00\",\"data\":[2871416,661.8000000000001,33.7,0.953333,487.14,282.032,42.3967,484.043,487.208,490.042,280.722,283.183,282.122,40.9283,60.0133,10.9383,11.7833,10.9983,0.933333,0.94,0.94,11831.7,12516.7,11468.3,1001.67,5373.33,4101.67]},{\"timestamp\":\"2024-01-17T19:00:00+00:00\",\"data\":[2871423.5,661.8000000000001,30.6983,0.896667,493.883,285.978,40.6033,491.053,493.808,496.688,284.627,287.048,286.213,38.96,59.9917,10.1217,11.01,9.785,0.883333,0.93,0.93,11756.7,11951.7,11131.7,3903.33,-265,5388.33]},{\"timestamp\":\"2024-01-17T19:15:00+00:00\",\"data\":[2871430.5,661.8000000000001,27.8833,0.96,495.78,287.088,37.8517,493.293,495.35,498.712,286.09,288.17,287.02,36.44,60.01,9.16333,9.895,8.82833,0.84,0.893333,0.893333,11011.7,11146.7,10463.3,4086.67,-868.333,5393.33]},{\"timestamp\":\"2024-01-17T19:30:00+00:00\",\"data\":[2871437,661.8000000000001,24.46,0.976667,493.257,285.632,34.1817,490.985,492.892,495.887,284.637,286.76,285.49,33.115,60.0117,7.78,8.53833,8.14,0.783333,0.866667,0.866667,9926.67,9990,9426.67,2480,-265,2621.67]},{\"timestamp\":\"2024-01-17T19:45:00+00:00\",\"data\":[2871442.25,661.8000000000001,21.5983,0.92,492.565,285.237,30.7167,489.828,492.407,495.353,283.897,286.54,285.205,29.3067,59.975,6.94667,7.60167,6.91333,0.823333,0.823333,0.823333,8960,8980,8341.67,1560,4476.67,2880]},{\"timestamp\":\"2024-01-17T20:00:00+00:00\",\"data\":[2871446.75,661.8000000000001,17.635,0.86,492.232,285.038,26.4433,489.727,491.795,495.06,283.832,285.963,285.253,25.0833,59.9933,6.495,6.07,5.295,0.83,0.816667,0.816667,7615,7810,7211.67,3640,4803.33,4965]},{\"timestamp\":\"2024-01-17T20:15:00+00:00\",\"data\":[2871450,661.8000000000001,13.2183,0.746667,491.523,284.64,21.06,488.852,491.192,494.515,283.163,286.005,284.745,19.9183,60.0133,5.07667,3.73667,4.39667,0.81,0.606667,0.606667,6193.33,6235,5625,2656.67,5075,4203.33]},{\"timestamp\":\"2024-01-17T20:30:00+00:00\",\"data\":[2871452.25,661.8000000000001,8.845,0.666667,492.028,284.933,16.0317,489.352,491.687,494.988,283.305,286.365,285.097,15.315,59.9883,2.70667,3.23667,3.08167,0.633333,0.633333,0.633333,4731.67,4651.67,4316.67,3716.67,2255,2820]},{\"timestamp\":\"2024-01-17T20:45:00+00:00\",\"data\":[2871453.5,661.8100000000001,5.28667,0.6,491.035,284.36,13.58,488.245,490.582,494.285,282.915,285.723,284.453,13.285,60.0117,0.808333,2.39667,2.21,0.253333,0.703333,0.703333,3776.67,4043.33,3743.33,3553.33,2186.67,2505]},{\"timestamp\":\"2024-01-17T21:00:00+00:00\",\"data\":[2871454.25,661.87,2.975,0.33,490.62,284.133,13.4,487.47,490.197,494.23,282.398,285.62,284.398,13.2367,59.9733,-0.153333,0.815,2.31333,-0.73,0.886667,0.886667,3806.67,3916.67,3678.33,3726.67,3701.67,2760]},{\"timestamp\":\"2024-01-17T21:15:00+00:00\",\"data\":[2871454.5,661.94,0.941667,0.106667,490.017,283.788,13.0767,486.928,489.51,493.61,282.017,285.363,283.987,12.93,59.9833,0.251667,0.353333,0.338333,0.09,0.13,0.13,3756.67,3703.33,3675,3738.33,3650,3635]},{\"timestamp\":\"2024-01-17T21:30:00+00:00\",\"data\":[2871454.75,662,0.0933333,0.35,489.012,283.21,4.38,485.727,488.49,492.817,281.375,284.7,283.558,4.32667,59.9633,-0.075,0.176667,-0.01,-0.37,0.42,0.42,1245,1251.67,1226.67,1233.33,1218.33,1193.33]},{\"timestamp\":\"2024-01-17T21:45:00+00:00\",\"data\":[2871454.75,662,0,1,487.967,282.618,0,484.52,487.44,491.918,280.545,284.148,283.15,0,59.9817,0,0,0,1,1,1,0,0,0,0,0,0]},{\"timestamp\":\"2024-01-17T22:00:00+00:00\",\"data\":[2871454.75,662,0,1,487.278,282.235,0,483.765,486.67,491.4,280.062,283.782,282.862,0,59.9983,0,0,0,1,1,1,0,0,0,0,0,0]},{\"timestamp\":\"2024-01-17T22:15:00+00:00\",\"data\":[2871454.75,662,0,1,486.197,281.618,0,482.603,485.38,490.607,279.47,283.183,282.2,0,59.9933,0,0,0,1,1,1,0,0,0,0,0,0]},{\"timestamp\":\"2024-01-17T22:30:00+00:00\",\"data\":[2871454.75,662,0,1,486.018,281.517,0,482.63,485.478,489.915,279.65,283.092,281.79,0,60,0,0,0,1,1,1,0,0,0,0,0,0]},{\"timestamp\":\"2024-01-17T22:45:00+00:00\",\"data\":[2871454.75,662,0,1,486.312,281.683,0,483.038,485.502,490.353,279.71,283.115,282.203,0,60.01,0,0,0,1,1,1,0,0,0,0,0,0]},{\"timestamp\":\"2024-01-17T23:00:00+00:00\",\"data\":[2871454.75,662,0,1,486.063,281.547,0,482.262,485.752,490.138,279.378,283.285,281.95,0,59.9933,0,0,0,1,1,1,0,0,0,0,0,0]},{\"timestamp\":\"2024-01-17T23:15:00+00:00\",\"data\":[2871454.75,662,0,1,485.912,281.457,0,482.433,485.437,489.873,279.483,282.915,281.973,0,59.9967,0,0,0,1,1,1,0,0,0,0,0,0]},{\"timestamp\":\"2024-01-17T23:30:00+00:00\",\"data\":[2871454.75,662,0,1,486.56,281.835,0,482.445,486.44,490.792,279.675,283.553,282.283,0,60.0133,0,0,0,1,1,1,0,0,0,0,0,0]},{\"timestamp\":\"2024-01-17T23:45:00+00:00\",\"data\":[2871454.75,662,0,1,486.88,282.02,0,483.085,486.677,490.863,280.052,283.658,282.345,0,59.9833,0,0,0,1,1,1,0,0,0,0,0,0]}]}",
        "payloadType": "json",
        "x": 1900,
        "y": 300,
        "wires": [
            [
                "cdedb7749a5c5521",
                "82cbfc55d64ec3f5"
            ]
        ]
    },
    {
        "id": "34842e66c099f0ec",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "Array Merge Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1160,
        "wires": []
    },
    {
        "id": "60d450240837d521",
        "type": "function",
        "z": "44c96c079469bdd0",
        "name": "Array Merge Using Seperator",
        "func": "let infoArray = msg.payload.info;\nlet itemsArray = msg.payload.items;\n\nconst mergedArray = [...infoArray, ...itemsArray]\n\nvar newMsg = {payload: {\n    new: mergedArray,\n    info: infoArray,\n    items: itemsArray\n}}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1160,
        "wires": [
            [
                "34842e66c099f0ec"
            ]
        ]
    },
    {
        "id": "859a78422c09e8c5",
        "type": "function",
        "z": "44c96c079469bdd0",
        "name": "Array Merge Using Seperator",
        "func": "let infoArray = msg.payload.info;\nlet itemsArray = msg.payload.items;\n\nconst mergedArray = [...infoArray, ...itemsArray]\n\nfunction merge(infoArray, itemsArray) {\n  //Create new array to store values\n  let result = [];\n\n  //Iterate through Array\n  for (let i = 0; i < itemsArray.length; i++) {\n    const { timestamp, data } = itemsArray[i];\n    //Create object for each dataIndex\n    const mergedData = infoArray.map(({ dataIndex, name, units }, index) => ({\n      payload: {\n        measurement: units,\n        timestamp,\n        value: data[index],\n      },\n    }));\n    result = result.concat(mergedData);\n  }\n  return result;\n}\n\nconst mergedResult = merge(infoArray, itemsArray)\n\n\n\nlet killowatthours = [];\nlet powerfactor = [];\nlet kw = [];\n\nfor (var x = 0; x < mergedResult.length; x++) {\n    if (mergedResult[x].payload.measurement == \"KilowattHours\") {\n        killowatthours.push(mergedResult[x].payload)\n    } else if (mergedResult[x].payload.measurement == \"PowerFactor\") {\n        powerfactor.push(mergedResult[x].payload)\n    } else if (mergedResult[x].payload.measurement == \"KW\") {\n      kw.push(mergedResult[x].payload)\n    }  else { }\n}\n\n\nvar newMsg = {\n  info: infoArray,\n  items: itemsArray,\n  payload: mergedResult,\n  killowatthours: killowatthours,\n  powerfactor: powerfactor,\n  merged_payload: {\n    merged_array: mergedArray,\n    merged_on_index: mergedResult,\n    info: infoArray,\n    items: itemsArray\n  }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 300,
        "wires": [
            [
                "ba5003ce634ff40c"
            ]
        ]
    },
    {
        "id": "ba5003ce634ff40c",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "Merge Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2480,
        "y": 240,
        "wires": []
    },
    {
        "id": "f2409bea182a0b19",
        "type": "delay",
        "z": "44c96c079469bdd0",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2560,
        "y": 120,
        "wires": [
            [
                "7611a909cfadcba5",
                "6338ad7c877f1d35"
            ]
        ]
    },
    {
        "id": "744cee439e4de493",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "reset",
        "props": [
            {
                "p": "reset",
                "v": "true",
                "vt": "bool"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 1910,
        "y": 480,
        "wires": [
            [
                "775d9c922e119061"
            ]
        ]
    },
    {
        "id": "44b75bb2023824d3",
        "type": "function",
        "z": "44c96c079469bdd0",
        "name": "Array Merge Using Seperator - 012124 Backup",
        "func": "let infoArray = msg.payload.info;\nlet itemsArray = msg.payload.items;\n\nconst mergedArray = [...infoArray, ...itemsArray]\n\nfunction merge(infoArray, itemsArray) {\n    //Create new array to store values\n    let result = [];\n\n    //Iterate through Array\n    for (let i = 0; i < itemsArray.length; i++) {\n        const {timestamp, data} = itemsArray[i];\n        //Create object for each dataIndex\n        const mergedData = infoArray.map(({ dataIndex, name, units }, index) => ({\n      payload: {\n        measurement: units,\n        timestamp,\n        value: data[index],\n      },\n    }));\n    result = result.concat(mergedData);\n    }\n    return result;\n}\n\nconst mergedResult = merge(infoArray, itemsArray)\n\nvar newMsg = {\n  merged: mergedResult,\n  payload: {\n    new: mergedArray,\n    merged: mergedResult,\n    info: infoArray,\n    items: itemsArray\n}}\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3340,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "1bf1a8d04a31d627",
        "type": "ui-chart",
        "z": "44c96c079469bdd0",
        "group": "9ba41ff47e73e33d",
        "name": "",
        "label": "Killowatt Hours",
        "order": 9007199254740991,
        "chartType": "line",
        "category": "payload",
        "categoryType": "msg",
        "xAxisProperty": "timestamp",
        "xAxisPropertyType": "msg",
        "yAxisProperty": "payload",
        "xAxisType": "time",
        "showLegend": false,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "100",
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "width": "6",
        "height": "6",
        "className": "",
        "x": 3320,
        "y": 660,
        "wires": [
            [
                "63d7d2e590e57d9c"
            ]
        ]
    },
    {
        "id": "63d7d2e590e57d9c",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "debug 1123",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3530,
        "y": 660,
        "wires": []
    },
    {
        "id": "fddb31d7c2b1b1bb",
        "type": "bigsplitter",
        "z": "44c96c079469bdd0",
        "name": "",
        "property": "killowatthours",
        "x": 2740,
        "y": 760,
        "wires": [
            [
                "2577bbf751d3cfbc"
            ],
            []
        ]
    },
    {
        "id": "feb076c2a6f2f042",
        "type": "change",
        "z": "44c96c079469bdd0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "kilowatt_hours",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "append",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "timestamp",
                "pt": "msg",
                "to": "timestamp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3120,
        "y": 720,
        "wires": [
            [
                "1bf1a8d04a31d627",
                "daa9d91122e8040a"
            ]
        ]
    },
    {
        "id": "5dda8da8dc4c1bf8",
        "type": "ui-button",
        "z": "44c96c079469bdd0",
        "group": "9ba41ff47e73e33d",
        "name": "",
        "label": "reset chart",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 3310,
        "y": 720,
        "wires": [
            [
                "1bf1a8d04a31d627"
            ]
        ]
    },
    {
        "id": "daa9d91122e8040a",
        "type": "ui_chart",
        "z": "44c96c079469bdd0",
        "name": "",
        "group": "508f86894c176d97",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3310,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "2577bbf751d3cfbc",
        "type": "delay",
        "z": "44c96c079469bdd0",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "6",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2920,
        "y": 760,
        "wires": [
            [
                "feb076c2a6f2f042"
            ]
        ]
    },
    {
        "id": "775d9c922e119061",
        "type": "link out",
        "z": "44c96c079469bdd0",
        "name": "reset_solar",
        "mode": "link",
        "links": [
            "752b7ab04ef353f5",
            "27de8349b483052e",
            "ac35d240d86f4dd4"
        ],
        "x": 2075,
        "y": 480,
        "wires": []
    },
    {
        "id": "752b7ab04ef353f5",
        "type": "link in",
        "z": "44c96c079469bdd0",
        "name": "reset_solar",
        "links": [
            "775d9c922e119061"
        ],
        "x": 2485,
        "y": 60,
        "wires": [
            [
                "f2409bea182a0b19"
            ]
        ]
    },
    {
        "id": "27de8349b483052e",
        "type": "link in",
        "z": "44c96c079469bdd0",
        "name": "reset_solar",
        "links": [
            "775d9c922e119061"
        ],
        "x": 2785,
        "y": 700,
        "wires": [
            [
                "2577bbf751d3cfbc"
            ]
        ]
    },
    {
        "id": "239739e89dadfc10",
        "type": "ui-chart",
        "z": "44c96c079469bdd0",
        "group": "4c7b7f7df754f4d9",
        "name": "",
        "label": "PowerFactor",
        "order": 9007199254740991,
        "chartType": "line",
        "category": "payload",
        "categoryType": "msg",
        "xAxisProperty": "timestamp",
        "xAxisPropertyType": "msg",
        "yAxisProperty": "payload",
        "xAxisType": "time",
        "showLegend": false,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "100",
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "width": "0",
        "height": "0",
        "className": "",
        "x": 3310,
        "y": 940,
        "wires": [
            [
                "be619782e9e32030"
            ]
        ]
    },
    {
        "id": "be619782e9e32030",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3510,
        "y": 940,
        "wires": []
    },
    {
        "id": "43748d087a39a0a4",
        "type": "bigsplitter",
        "z": "44c96c079469bdd0",
        "name": "",
        "property": "powerfactor",
        "x": 2740,
        "y": 1040,
        "wires": [
            [
                "6bcbe86a32076b05"
            ],
            []
        ]
    },
    {
        "id": "6bfdc9e33812a7f6",
        "type": "change",
        "z": "44c96c079469bdd0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "powerfactor",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "append",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "timestamp",
                "pt": "msg",
                "to": "timestamp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3120,
        "y": 1000,
        "wires": [
            [
                "239739e89dadfc10",
                "fe1014db01d71a48"
            ]
        ]
    },
    {
        "id": "010dd8516ee2ec51",
        "type": "ui-button",
        "z": "44c96c079469bdd0",
        "group": "9ba41ff47e73e33d",
        "name": "",
        "label": "reset chart",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 3310,
        "y": 1000,
        "wires": [
            [
                "239739e89dadfc10"
            ]
        ]
    },
    {
        "id": "fe1014db01d71a48",
        "type": "ui_chart",
        "z": "44c96c079469bdd0",
        "name": "",
        "group": "508f86894c176d97",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "PowerFactor",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3330,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "6bcbe86a32076b05",
        "type": "delay",
        "z": "44c96c079469bdd0",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "6",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2920,
        "y": 1040,
        "wires": [
            [
                "6bfdc9e33812a7f6"
            ]
        ]
    },
    {
        "id": "ac35d240d86f4dd4",
        "type": "link in",
        "z": "44c96c079469bdd0",
        "name": "reset_solar",
        "links": [
            "775d9c922e119061"
        ],
        "x": 2785,
        "y": 980,
        "wires": [
            [
                "6bcbe86a32076b05"
            ]
        ]
    },
    {
        "id": "83eac71ae89761a4",
        "type": "function",
        "z": "44c96c079469bdd0",
        "name": "function 1",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4020,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "a67139c7.15ec68",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2900,
        "y": 1660,
        "wires": [
            [
                "15047e0e.e613f2"
            ]
        ]
    },
    {
        "id": "15047e0e.e613f2",
        "type": "function",
        "z": "44c96c079469bdd0",
        "name": "multiple readings",
        "func": "msg.payload = [\n    [{\n        numValue: 10,\n        randomValue: Math.random()*10,\n        strValue: \"message1\",\n        time: new Date().getTime()-1\n    },\n    {\n        tag1:\"sensor1\",\n        tag2:\"device2\"\n    }],\n    [{\n        numValue: 20,\n        randomValue: Math.random()*10,\n        strValue: \"message2\",\n        time: new Date().getTime()\n    },\n    {\n        tag1:\"sensor1\",\n        tag2:\"device2\"\n    }]\n];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3100,
        "y": 1660,
        "wires": [
            [
                "388a0ea79dda8b5e"
            ]
        ]
    },
    {
        "id": "388a0ea79dda8b5e",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "debug 1124",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3310,
        "y": 1660,
        "wires": []
    },
    {
        "id": "cdedb7749a5c5521",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 240,
        "wires": []
    },
    {
        "id": "82cbfc55d64ec3f5",
        "type": "function",
        "z": "44c96c079469bdd0",
        "name": "Influx msg",
        "func": "let infoArray = msg.payload.info;\nlet itemsArray = msg.payload.items;\n\nconst mergedArray = [...infoArray, ...itemsArray]\n\nfunction merge(infoArray, itemsArray) {\n  //Create new array to store values\n  let result = [];\n\n  //Iterate through Array\n  for (let i = 0; i < itemsArray.length; i++) {\n    const { timestamp, data } = itemsArray[i];\n    //Create object for each dataIndex\n    const mergedData = infoArray.map(({ dataIndex, name, units, hardwareId }, index) => ({\n      measurement: name,\n      payload: [{\n        time: Date.parse(timestamp),\n        //time: new Date().getTime(),\n        //time: timestamp.getTime(),\n        value: data[index],\n      }, {\n        hardware_id: hardwareId,\n        units: units,\n        name: name\n      }],\n    }));\n    result = result.concat(mergedData);\n  }\n  return result;\n}\n\nconst mergedResult = merge(infoArray, itemsArray)\n\nvar influxMsg = {mergedResult}\n\nreturn influxMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2190,
        "y": 120,
        "wires": [
            [
                "fea6c9f9ede2260c",
                "1edc180af863f6fa"
            ]
        ]
    },
    {
        "id": "824167c0e91346c5",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "Change Debug XXX",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2960,
        "y": 60,
        "wires": []
    },
    {
        "id": "22991f98ade92f76",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "",
        "props": [
            {
                "p": "payload.site_id",
                "v": "7807",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 310,
        "y": 1100,
        "wires": [
            [
                "68ee575bc2cc8031"
            ]
        ]
    },
    {
        "id": "68ee575bc2cc8031",
        "type": "postgrestor",
        "z": "44c96c079469bdd0",
        "name": "",
        "query": "SELECT * FROM public.alsoenergy_sites \nWHERE site_id = 7807",
        "postgresDB": "92547680b74ab210",
        "output": true,
        "outputs": 1,
        "x": 510,
        "y": 1080,
        "wires": [
            [
                "23f0aea5a671416f"
            ]
        ]
    },
    {
        "id": "23f0aea5a671416f",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1080,
        "wires": []
    },
    {
        "id": "4fc2ef4245ed2bdd",
        "type": "catch",
        "z": "44c96c079469bdd0",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 540,
        "y": 800,
        "wires": [
            [
                "2e15ad10355e9a6e"
            ]
        ]
    },
    {
        "id": "2e15ad10355e9a6e",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "CATCH",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 800,
        "wires": []
    },
    {
        "id": "27cd11cf973ba5d8",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1760,
        "y": 1580,
        "wires": [
            [
                "f095b1821e582769"
            ]
        ]
    },
    {
        "id": "f095b1821e582769",
        "type": "file in",
        "z": "44c96c079469bdd0",
        "name": "",
        "filename": "/data/also_energy_sites.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2000,
        "y": 1580,
        "wires": [
            [
                "4dafbab469423050"
            ]
        ]
    },
    {
        "id": "572dfe3a1dcbf9a5",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2380,
        "y": 1580,
        "wires": []
    },
    {
        "id": "4dafbab469423050",
        "type": "json",
        "z": "44c96c079469bdd0",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2230,
        "y": 1580,
        "wires": [
            [
                "572dfe3a1dcbf9a5"
            ]
        ]
    },
    {
        "id": "3f38943d2452da86",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "",
        "props": [
            {
                "p": "payload.site_id",
                "v": "7807",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1770,
        "y": 1760,
        "wires": [
            [
                "6a0b88bd5ac8c797"
            ]
        ]
    },
    {
        "id": "6a0b88bd5ac8c797",
        "type": "postgrestor",
        "z": "44c96c079469bdd0",
        "name": "",
        "query": "SELECT * FROM alsoenergy_sites where location_id = 7807;",
        "postgresDB": "92547680b74ab210",
        "output": true,
        "outputs": 1,
        "x": 1990,
        "y": 1760,
        "wires": [
            [
                "b76dda900f693679"
            ]
        ]
    },
    {
        "id": "b76dda900f693679",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "debug 1125",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1760,
        "wires": []
    },
    {
        "id": "73ac27d7681b1c95",
        "type": "postgresql",
        "z": "44c96c079469bdd0",
        "name": "",
        "query": "SELECT * FROM alsoenergy_sites\nWHERE location_id = '{{msg.payload.site_id}}'",
        "postgreSQLConfig": "ca348830b9add8ba",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 2010,
        "y": 1820,
        "wires": [
            [
                "0638be4c3ecbd257"
            ]
        ]
    },
    {
        "id": "c367e3f0cde71a23",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "",
        "props": [
            {
                "p": "payload.site_id",
                "v": "7807",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1850,
        "y": 1820,
        "wires": [
            [
                "73ac27d7681b1c95"
            ]
        ]
    },
    {
        "id": "0638be4c3ecbd257",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "debug ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1820,
        "wires": []
    },
    {
        "id": "269fcd06cac4e18f",
        "type": "function",
        "z": "44c96c079469bdd0",
        "name": "Influx msg 020124",
        "func": "let infoArray = msg.payload.info;\nlet itemsArray = msg.payload.items;\n\nconst mergedArray = [...infoArray, ...itemsArray]\n\nfunction merge(infoArray, itemsArray) {\n  //Create new array to store values\n  let result = [];\n\n  //Iterate through Array\n  for (let i = 0; i < itemsArray.length; i++) {\n    const { timestamp, data } = itemsArray[i];\n    //Create object for each dataIndex\n    const mergedData = infoArray.map(({ dataIndex, name, units, hardwareId }, index) => ({\n      payload: [{\n        measurement: name,\n        time: Date.parse(timestamp),\n        value: data[index],\n      }, {\n        hardware_id: hardwareId,\n        units: units,\n        name: name\n      }],\n    }));\n    result = result.concat(mergedData);\n  }\n  return result;\n}\n\nconst mergedResult = merge(infoArray, itemsArray)\n\nvar influxMsg = {\n  payload: mergedResult\n}\n\nreturn influxMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3510,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "fea6c9f9ede2260c",
        "type": "bigsplitter",
        "z": "44c96c079469bdd0",
        "name": "",
        "property": "mergedResult",
        "x": 2360,
        "y": 120,
        "wires": [
            [
                "f2409bea182a0b19"
            ],
            []
        ]
    },
    {
        "id": "76151069ae72f0f4",
        "type": "catch",
        "z": "44c96c079469bdd0",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 3740,
        "y": 140,
        "wires": [
            [
                "0bdf5f749e9e8773"
            ]
        ]
    },
    {
        "id": "0bdf5f749e9e8773",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "Catch",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3930,
        "y": 140,
        "wires": []
    },
    {
        "id": "1edc180af863f6fa",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "influx out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2340,
        "y": 180,
        "wires": []
    },
    {
        "id": "7611a909cfadcba5",
        "type": "change",
        "z": "44c96c079469bdd0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "measurement",
                "pt": "msg",
                "to": "payload.measurement",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2760,
        "y": 120,
        "wires": [
            [
                "824167c0e91346c5",
                "1f7c50177379bb9c"
            ]
        ]
    },
    {
        "id": "1f7c50177379bb9c",
        "type": "influxdb out",
        "z": "44c96c079469bdd0",
        "influxdb": "a45e499a8d2a59db",
        "name": "solar",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "edgewoods",
        "bucket": "solar",
        "x": 2970,
        "y": 180,
        "wires": []
    },
    {
        "id": "6338ad7c877f1d35",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "debug xxx",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2750,
        "y": 200,
        "wires": []
    },
    {
        "id": "1f0d40ffbd4ded27",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "kilowatts - 2/7",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"info\":[{\"hardwareId\":426261,\"dataIndex\":0,\"name\":\"KWHrec\",\"units\":\"KilowattHours\"},{\"hardwareId\":426261,\"dataIndex\":1,\"name\":\"KWHdel\",\"units\":\"KilowattHours\"},{\"hardwareId\":426261,\"dataIndex\":2,\"name\":\"KW\",\"units\":\"Kilowatts\"},{\"hardwareId\":426261,\"dataIndex\":3,\"name\":\"PowerFactor\",\"units\":\"PowerFactor\"},{\"hardwareId\":426261,\"dataIndex\":4,\"name\":\"VacLL\",\"units\":\"Volts\"},{\"hardwareId\":426261,\"dataIndex\":5,\"name\":\"Vac\",\"units\":\"Volts\"},{\"hardwareId\":426261,\"dataIndex\":6,\"name\":\"Iac\",\"units\":\"Amps\"},{\"hardwareId\":426261,\"dataIndex\":7,\"name\":\"VacAB\",\"units\":\"Volts\"},{\"hardwareId\":426261,\"dataIndex\":8,\"name\":\"VacBC\",\"units\":\"Volts\"},{\"hardwareId\":426261,\"dataIndex\":9,\"name\":\"VacCA\",\"units\":\"Volts\"},{\"hardwareId\":426261,\"dataIndex\":10,\"name\":\"VacA\",\"units\":\"Volts\"},{\"hardwareId\":426261,\"dataIndex\":11,\"name\":\"VacB\",\"units\":\"Volts\"},{\"hardwareId\":426261,\"dataIndex\":12,\"name\":\"VacC\",\"units\":\"Volts\"},{\"hardwareId\":426261,\"dataIndex\":13,\"name\":\"IacC\",\"units\":\"Amps\"},{\"hardwareId\":426261,\"dataIndex\":14,\"name\":\"Frequency\",\"units\":\"Hz\"},{\"hardwareId\":426261,\"dataIndex\":15,\"name\":\"KW_A\",\"units\":\"Kilowatts\"},{\"hardwareId\":426261,\"dataIndex\":16,\"name\":\"KW_B\",\"units\":\"Kilowatts\"},{\"hardwareId\":426261,\"dataIndex\":17,\"name\":\"KW_C\",\"units\":\"Kilowatts\"},{\"hardwareId\":426261,\"dataIndex\":18,\"name\":\"PF_A\",\"units\":\"PowerFactor\"},{\"hardwareId\":426261,\"dataIndex\":19,\"name\":\"PF_B\",\"units\":\"PowerFactor\"},{\"hardwareId\":426261,\"dataIndex\":20,\"name\":\"PF_C\",\"units\":\"PowerFactor\"},{\"hardwareId\":426261,\"dataIndex\":21,\"name\":\"VA_A\",\"units\":\"VA\"},{\"hardwareId\":426261,\"dataIndex\":22,\"name\":\"VA_B\",\"units\":\"VA\"},{\"hardwareId\":426261,\"dataIndex\":23,\"name\":\"VA_C\",\"units\":\"VA\"},{\"hardwareId\":426261,\"dataIndex\":24,\"name\":\"VAR_A\",\"units\":\"VAR\"},{\"hardwareId\":426261,\"dataIndex\":25,\"name\":\"VAR_B\",\"units\":\"VAR\"},{\"hardwareId\":426261,\"dataIndex\":26,\"name\":\"VAR_C\",\"units\":\"VAR\"}],\"items\":[{\"timestamp\":\"2024-02-07T14:45:00+00:00\",\"data\":[2871257.75,661.8000000000001,7.024,0.771972,486.673,281.763,9.59646,483.712,486.293,490.013,280.337,282.909,282.035,9.30591,60.0117,2.32838,2.35399,2.30829,0.800475,0.779097,0.779097,2683.91,2776.92,2619.17,1235.07,1530.29,1215.93]},{\"timestamp\":\"2024-02-07T15:00:00+00:00\",\"data\":[2871266,661.8000000000001,33.2083,0.956667,487,281.952,41.8367,484.128,486.955,489.92,280.738,283.052,282.068,40.49,60.0067,10.8167,11.6283,10.8483,0.933333,0.946667,0.946667,11746.7,12270,11386.7,1741.67,4458.33,4016.67]},{\"timestamp\":\"2024-02-07T15:15:00+00:00\",\"data\":[2871275,661.8000000000001,35.7233,0.933333,487.115,282.017,44.535,484.603,486.843,489.893,280.935,282.942,282.177,43.4367,59.9983,11.635,11.96,12.13,0.916667,0.916667,0.916667,12696.7,12836.7,12098.3,5460,4148.33,3956.67]},{\"timestamp\":\"2024-02-07T15:30:00+00:00\",\"data\":[2871284.25,661.8000000000001,37.575,0.926667,487.002,281.952,46.5817,484.693,486.67,489.635,281.1,282.858,281.887,44.805,60.005,11.8917,13.825,11.8583,0.926667,0.98,0.98,12833.3,13898.3,12676.7,4955,4791.67,5425]},{\"timestamp\":\"2024-02-07T15:45:00+00:00\",\"data\":[2871294.25,661.8000000000001,39.66,0.953333,487.337,282.142,48.77,485.007,487.032,489.955,281.242,282.83,282.343,46.825,60.0117,13.2633,13.8317,12.5633,0.93,0.983333,0.983333,14053.3,13961.7,13231.7,1598.33,3408.33,4606.67]},{\"timestamp\":\"2024-02-07T16:00:00+00:00\",\"data\":[2871304.5,661.8000000000001,42.015,0.966667,486.8,281.832,51.2733,484.433,486.28,489.628,280.735,282.572,282.157,50.3433,60.04,13.6767,14.4883,13.835,0.943333,0.976667,0.976667,14360,14836.7,14151.7,3885,4141.67,2898.33]},{\"timestamp\":\"2024-02-07T16:15:00+00:00\",\"data\":[2871315.25,661.8000000000001,42.2683,0.99,486.117,281.44,52.2417,483.542,485.872,488.945,280.34,282.31,281.672,50.735,59.9967,14.2683,14.485,13.5117,0.97,0.953333,0.953333,14641.7,15178.3,14330,-1643.33,3376.67,3876.67]},{\"timestamp\":\"2024-02-07T16:30:00+00:00\",\"data\":[2871326,661.8000000000001,42.875,0.99,486.223,281.503,52.7183,483.463,486.173,489.022,280.45,282.427,281.63,51.14,59.9967,14.5233,14.5867,13.69,0.986667,0.933333,0.933333,14716.7,15408.3,14408.3,-4126.67,4943.33,4816.67]},{\"timestamp\":\"2024-02-07T16:45:00+00:00\",\"data\":[2871336.75,661.8000000000001,43.3217,0.983333,486.42,281.613,53.2017,484.005,486.02,489.203,280.487,282.475,281.858,51.6083,60.0033,14.1033,15.3267,13.6717,0.956667,0.97,0.97,14816.7,15556.7,14596.7,-4678.33,3671.67,5521.67]},{\"timestamp\":\"2024-02-07T17:00:00+00:00\",\"data\":[2871347.75,661.8000000000001,43.3717,0.973333,487.115,282.017,53.3717,484.497,487.155,489.685,280.808,282.978,282.257,50.82,60.0033,14.49,15.3167,13.4367,0.956667,0.976667,0.976667,15241.7,15495,14420,-138.333,3346.67,4848.33]},{\"timestamp\":\"2024-02-07T17:15:00+00:00\",\"data\":[2871358.25,661.8000000000001,42.5333,0.986667,487.042,281.973,52.675,484.288,487.225,489.658,280.863,283.017,282.077,50.8967,60.01,14.195,14.7233,13.6133,0.946667,0.966667,0.966667,14740,15496.7,14378.3,-2628.33,4798.33,4206.67]},{\"timestamp\":\"2024-02-07T17:30:00+00:00\",\"data\":[2871369,661.8000000000001,42.545,0.983333,487.618,282.308,52.2933,484.908,487.45,490.41,281.083,283.362,282.43,50.8017,60.0033,14.3133,14.7067,13.5233,0.986667,0.936667,0.936667,14448.3,15450,14405,-2256.67,2095,4941.67]},{\"timestamp\":\"2024-02-07T17:45:00+00:00\",\"data\":[2871379.25,661.8000000000001,40.7067,0.966667,487.148,282.035,50.43,484.527,486.992,489.797,280.845,283.097,282.09,48.9083,60.01,13.4083,14.3767,12.8167,0.94,0.983333,0.983333,14148.3,14673.3,13800,-635,3848.33,4183.33]},{\"timestamp\":\"2024-02-07T18:00:00+00:00\",\"data\":[2871389.25,661.8000000000001,39.855,0.966667,486.868,281.868,49.2667,484.333,486.99,489.38,280.768,283.003,281.903,47.6217,60.005,13.1933,13.8517,12.5517,0.953333,0.963333,0.963333,13885,14345,13430,3188.33,3133.33,5000]},{\"timestamp\":\"2024-02-07T18:15:00+00:00\",\"data\":[2871398.5,661.8000000000001,38.115,0.94,487.14,282.033,47.2283,484.58,486.697,490.143,280.727,282.965,282.412,46.755,60.0067,12.6083,12.4667,13.0367,0.976667,0.893333,0.893333,12951.7,13931.7,13060,3765,5950,3995]},{\"timestamp\":\"2024-02-07T18:30:00+00:00\",\"data\":[2871407.5,661.8000000000001,35.6817,0.933333,487.005,281.953,44.7267,484.258,486.87,489.758,280.74,282.92,282.125,42.7483,59.99,11.9983,12.955,10.7267,0.943333,0.963333,0.963333,12450,13185,12240,3306.67,6055,4078.33]},{\"timestamp\":\"2024-02-07T18:45:00+00:00\",\"data\":[2871416,661.8000000000001,33.7,0.953333,487.14,282.032,42.3967,484.043,487.208,490.042,280.722,283.183,282.122,40.9283,60.0133,10.9383,11.7833,10.9983,0.933333,0.94,0.94,11831.7,12516.7,11468.3,1001.67,5373.33,4101.67]},{\"timestamp\":\"2024-02-07T19:00:00+00:00\",\"data\":[2871423.5,661.8000000000001,30.6983,0.896667,493.883,285.978,40.6033,491.053,493.808,496.688,284.627,287.048,286.213,38.96,59.9917,10.1217,11.01,9.785,0.883333,0.93,0.93,11756.7,11951.7,11131.7,3903.33,-265,5388.33]},{\"timestamp\":\"2024-02-07T19:15:00+00:00\",\"data\":[2871430.5,661.8000000000001,27.8833,0.96,495.78,287.088,37.8517,493.293,495.35,498.712,286.09,288.17,287.02,36.44,60.01,9.16333,9.895,8.82833,0.84,0.893333,0.893333,11011.7,11146.7,10463.3,4086.67,-868.333,5393.33]},{\"timestamp\":\"2024-02-07T19:30:00+00:00\",\"data\":[2871437,661.8000000000001,24.46,0.976667,493.257,285.632,34.1817,490.985,492.892,495.887,284.637,286.76,285.49,33.115,60.0117,7.78,8.53833,8.14,0.783333,0.866667,0.866667,9926.67,9990,9426.67,2480,-265,2621.67]},{\"timestamp\":\"2024-02-07T19:45:00+00:00\",\"data\":[2871442.25,661.8000000000001,21.5983,0.92,492.565,285.237,30.7167,489.828,492.407,495.353,283.897,286.54,285.205,29.3067,59.975,6.94667,7.60167,6.91333,0.823333,0.823333,0.823333,8960,8980,8341.67,1560,4476.67,2880]},{\"timestamp\":\"2024-02-07T20:00:00+00:00\",\"data\":[2871446.75,661.8000000000001,17.635,0.86,492.232,285.038,26.4433,489.727,491.795,495.06,283.832,285.963,285.253,25.0833,59.9933,6.495,6.07,5.295,0.83,0.816667,0.816667,7615,7810,7211.67,3640,4803.33,4965]},{\"timestamp\":\"2024-02-07T20:15:00+00:00\",\"data\":[2871450,661.8000000000001,13.2183,0.746667,491.523,284.64,21.06,488.852,491.192,494.515,283.163,286.005,284.745,19.9183,60.0133,5.07667,3.73667,4.39667,0.81,0.606667,0.606667,6193.33,6235,5625,2656.67,5075,4203.33]},{\"timestamp\":\"2024-02-07T20:30:00+00:00\",\"data\":[2871452.25,661.8000000000001,8.845,0.666667,492.028,284.933,16.0317,489.352,491.687,494.988,283.305,286.365,285.097,15.315,59.9883,2.70667,3.23667,3.08167,0.633333,0.633333,0.633333,4731.67,4651.67,4316.67,3716.67,2255,2820]},{\"timestamp\":\"2024-02-07T20:45:00+00:00\",\"data\":[2871453.5,661.8100000000001,5.28667,0.6,491.035,284.36,13.58,488.245,490.582,494.285,282.915,285.723,284.453,13.285,60.0117,0.808333,2.39667,2.21,0.253333,0.703333,0.703333,3776.67,4043.33,3743.33,3553.33,2186.67,2505]},{\"timestamp\":\"2024-02-07T21:00:00+00:00\",\"data\":[2871454.25,661.87,2.975,0.33,490.62,284.133,13.4,487.47,490.197,494.23,282.398,285.62,284.398,13.2367,59.9733,-0.153333,0.815,2.31333,-0.73,0.886667,0.886667,3806.67,3916.67,3678.33,3726.67,3701.67,2760]},{\"timestamp\":\"2024-02-07T21:15:00+00:00\",\"data\":[2871454.5,661.94,0.941667,0.106667,490.017,283.788,13.0767,486.928,489.51,493.61,282.017,285.363,283.987,12.93,59.9833,0.251667,0.353333,0.338333,0.09,0.13,0.13,3756.67,3703.33,3675,3738.33,3650,3635]},{\"timestamp\":\"2024-02-07T21:30:00+00:00\",\"data\":[2871454.75,662,0.0933333,0.35,489.012,283.21,4.38,485.727,488.49,492.817,281.375,284.7,283.558,4.32667,59.9633,-0.075,0.176667,-0.01,-0.37,0.42,0.42,1245,1251.67,1226.67,1233.33,1218.33,1193.33]},{\"timestamp\":\"2024-02-07T21:45:00+00:00\",\"data\":[2871454.75,662,0,1,487.967,282.618,0,484.52,487.44,491.918,280.545,284.148,283.15,0,59.9817,0,0,0,1,1,1,0,0,0,0,0,0]},{\"timestamp\":\"2024-02-07T22:00:00+00:00\",\"data\":[2871454.75,662,0,1,487.278,282.235,0,483.765,486.67,491.4,280.062,283.782,282.862,0,59.9983,0,0,0,1,1,1,0,0,0,0,0,0]},{\"timestamp\":\"2024-02-07T22:15:00+00:00\",\"data\":[2871454.75,662,0,1,486.197,281.618,0,482.603,485.38,490.607,279.47,283.183,282.2,0,59.9933,0,0,0,1,1,1,0,0,0,0,0,0]},{\"timestamp\":\"2024-02-07T22:30:00+00:00\",\"data\":[2871454.75,662,0,1,486.018,281.517,0,482.63,485.478,489.915,279.65,283.092,281.79,0,60,0,0,0,1,1,1,0,0,0,0,0,0]},{\"timestamp\":\"2024-02-07T22:45:00+00:00\",\"data\":[2871454.75,662,0,1,486.312,281.683,0,483.038,485.502,490.353,279.71,283.115,282.203,0,60.01,0,0,0,1,1,1,0,0,0,0,0,0]},{\"timestamp\":\"2024-02-07T23:00:00+00:00\",\"data\":[2871454.75,662,0,1,486.063,281.547,0,482.262,485.752,490.138,279.378,283.285,281.95,0,59.9933,0,0,0,1,1,1,0,0,0,0,0,0]},{\"timestamp\":\"2024-02-07T23:15:00+00:00\",\"data\":[2871454.75,662,0,1,485.912,281.457,0,482.433,485.437,489.873,279.483,282.915,281.973,0,59.9967,0,0,0,1,1,1,0,0,0,0,0,0]},{\"timestamp\":\"2024-02-07T23:30:00+00:00\",\"data\":[2871454.75,662,0,1,486.56,281.835,0,482.445,486.44,490.792,279.675,283.553,282.283,0,60.0133,0,0,0,1,1,1,0,0,0,0,0,0]},{\"timestamp\":\"2024-02-07T23:45:00+00:00\",\"data\":[2871454.75,662,0,1,486.88,282.02,0,483.085,486.677,490.863,280.052,283.658,282.345,0,59.9833,0,0,0,1,1,1,0,0,0,0,0,0]}]}",
        "payloadType": "json",
        "x": 1910,
        "y": 140,
        "wires": [
            [
                "82cbfc55d64ec3f5"
            ]
        ]
    }
]