[
    {
        "id": "e851f138fbd198fe",
        "type": "tab",
        "label": "TTN.v3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "abf038f.43da5c8",
        "type": "tab",
        "label": "Home Assistant",
        "disabled": true,
        "info": ""
    },
    {
        "id": "2500c006.91d75",
        "type": "tab",
        "label": "Dark Sky",
        "disabled": false,
        "info": ""
    },
    {
        "id": "aa130715069a6eeb",
        "type": "tab",
        "label": "Influxdb",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f905b49ce5011782",
        "type": "tab",
        "label": "GCP Remote",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1600a05a.fc816",
        "type": "tab",
        "label": "Twillo",
        "disabled": true,
        "info": ""
    },
    {
        "id": "171b21f.9e6efde",
        "type": "tab",
        "label": "RainMachine",
        "disabled": false,
        "info": ""
    },
    {
        "id": "bf8b5ca4b28f6892",
        "type": "tab",
        "label": "MongoDB",
        "disabled": true,
        "info": ""
    },
    {
        "id": "4576b216.7dd43c",
        "type": "tab",
        "label": "Grafana",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c2dba5e02909beed",
        "type": "tab",
        "label": "Alerts",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b78ed3d06ab6db61",
        "type": "tab",
        "label": "GoogleHome",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5a34b650.a16c48",
        "type": "tab",
        "label": "Dynamic DNS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "978ca627078b4010",
        "type": "tab",
        "label": "Unifi",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "44c96c079469bdd0",
        "type": "tab",
        "label": "WIP",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2b79d1365169f919",
        "type": "subflow",
        "name": "device_name ",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 200,
                "wires": [
                    {
                        "id": "8777becfbd016b0a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 200,
                "wires": [
                    {
                        "id": "ab2a910779716323",
                        "port": 0
                    }
                ]
            },
            {
                "x": 640,
                "y": 300,
                "wires": [
                    {
                        "id": "8777becfbd016b0a",
                        "port": 0
                    }
                ]
            },
            {
                "x": 720,
                "y": 300,
                "wires": [
                    {
                        "id": "82d9ab252e9b8089",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 820,
            "y": 300,
            "wires": [
                {
                    "id": "82d9ab252e9b8089",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "39c85520361d1f91",
        "type": "mqtt-broker",
        "name": "edgewoods",
        "broker": "10.10.10.10",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "322cbb2615da3e18",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "11b943bb2882710d",
        "type": "mqtt-broker",
        "name": "RadioBridge-ttnv3",
        "broker": "nam1.cloud.thethings.network",
        "port": "8883",
        "tls": "322cbb2615da3e18",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "76f8126894e2f90f",
        "type": "mqtt-broker",
        "name": "Dragino-ttnv3",
        "broker": "nam1.cloud.thethings.network",
        "port": "8883",
        "tls": "322cbb2615da3e18",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a45e499a8d2a59db",
        "type": "influxdb",
        "hostname": "influxdb",
        "port": "8086",
        "protocol": "http",
        "database": "LoRaWAN",
        "name": "influxdb",
        "usetls": false,
        "tls": "322cbb2615da3e18",
        "influxdbVersion": "2.0",
        "url": "http://influxdb:8086",
        "rejectUnauthorized": false
    },
    {
        "id": "3b0c9cf9dbc6cbe2",
        "type": "mqtt-broker",
        "name": "SenseCAP-TTNv3",
        "broker": "nam1.cloud.thethings.network",
        "port": "1883",
        "tls": "322cbb2615da3e18",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "3",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "824a7d9e09a2be8d",
        "type": "mqtt-broker",
        "name": "MultiTech-TTNv3",
        "broker": "nam1.cloud.thethings.network",
        "port": "8883",
        "tls": "322cbb2615da3e18",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "dbb495c520f68730",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "3a9c7e55.2fdf72",
        "type": "ui_group",
        "name": "GPS Survey",
        "tab": "aa5557b0.ab79c8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "48e3f75d.5d7798",
        "type": "ui_group",
        "name": "LoRa Demo",
        "tab": "aa5557b0.ab79c8",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "aa5557b0.ab79c8",
        "type": "ui_tab",
        "name": "LoRa",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7f2ebed0.9fcd3",
        "type": "ui_group",
        "name": "GPS Survey",
        "tab": "9cc4d04a.b62aa",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "87d11ec8.ee325",
        "type": "ui_group",
        "name": "LoRa Demo",
        "tab": "9cc4d04a.b62aa",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "9cc4d04a.b62aa",
        "type": "ui_tab",
        "name": "LoRa",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5010ad6c.df5ca4",
        "type": "server",
        "name": "Home Assistant",
        "version": 5,
        "addon": false,
        "rejectUnauthorizedCerts": false,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true,
        "heartbeat": false,
        "heartbeatInterval": "30",
        "areaSelector": "friendlyName",
        "deviceSelector": "friendlyName",
        "entitySelector": "friendlyName",
        "statusSeparator": "at: ",
        "statusYear": "hidden",
        "statusMonth": "short",
        "statusDay": "numeric",
        "statusHourCycle": "h23",
        "statusTimeFormat": "h:m",
        "enableGlobalContextStore": true
    },
    {
        "id": "e81e7427.232dd8",
        "type": "influxdb",
        "hostname": "influxdb",
        "port": "8086",
        "protocol": "http",
        "database": "homeassistant",
        "name": "",
        "usetls": false,
        "tls": "d15f51f5.84dab",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "d15f51f5.84dab",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "b841d93f.1fc228",
        "type": "ui_group",
        "name": "Wind Speed",
        "tab": "355c6684.d14cea",
        "order": 7,
        "disp": true,
        "width": "6"
    },
    {
        "id": "61d8381c.d631b8",
        "type": "ui_group",
        "name": "OAT",
        "tab": "355c6684.d14cea",
        "order": 6,
        "disp": true,
        "width": "6"
    },
    {
        "id": "1687319f.26f19e",
        "type": "ui_group",
        "name": "Storms",
        "tab": "355c6684.d14cea",
        "order": 8,
        "disp": true,
        "width": "6"
    },
    {
        "id": "355c6684.d14cea",
        "type": "ui_tab",
        "name": "Home Control",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "db11d248.010a3",
        "type": "influxdb",
        "hostname": "influxdb",
        "port": "8086",
        "protocol": "http",
        "database": "weather",
        "name": "",
        "usetls": false,
        "tls": "d15f51f5.84dab",
        "influxdbVersion": "1.x",
        "url": "",
        "rejectUnauthorized": false
    },
    {
        "id": "b03b267.f2a54d8",
        "type": "twilio-api",
        "name": "",
        "sid": "$(TWILLIOSID)",
        "from": "6127127904"
    },
    {
        "id": "f21111d7.3018c",
        "type": "tls-config",
        "name": "defaultTLS",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "c813143834382b28",
        "type": "mongodb",
        "hostname": "10.1.1.10",
        "connectOptions": "",
        "port": "27017",
        "db": "sensors",
        "name": ""
    },
    {
        "id": "f8ce23bb.23857",
        "type": "influxdb",
        "hostname": "influxdb",
        "port": "8086",
        "protocol": "http",
        "database": "zwave",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x"
    },
    {
        "id": "b005dcb8a9e6bb86",
        "type": "mqtt-broker",
        "name": "GCP-edgewoods",
        "broker": "pines.edgewoods.net",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "09f2c70562eb4732",
        "type": "google-home-conf",
        "d": true,
        "username": "bdbuysse"
    },
    {
        "id": "88e1b19a.74497",
        "type": "tls-config",
        "name": "defaultTLS",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "3b0217bc.de55b8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "d0b6d8cf.354418",
        "type": "influxdb",
        "hostname": "influxdb",
        "port": "8086",
        "protocol": "http",
        "database": "fail2ban",
        "name": "",
        "usetls": false,
        "tls": "ef2c57f1.833998",
        "influxdbVersion": "1.x"
    },
    {
        "id": "ef2c57f1.833998",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "ba12e1b1b4930c5e",
        "type": "ui_tab",
        "name": "WellnesExam",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "df71c92d64343c4c",
        "type": "ui_group",
        "name": "Pain Management",
        "tab": "ba12e1b1b4930c5e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "92547680b74ab210",
        "type": "postgresDB",
        "name": "postgres",
        "host": "10.10.10.10",
        "port": "5432",
        "database": "postgres",
        "ssl": "false",
        "max": "10",
        "min": "1",
        "idle": "1000"
    },
    {
        "id": "ea745cefbcdbc96f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "$(MQTTPINES)",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "8777becfbd016b0a",
        "type": "change",
        "z": "2b79d1365169f919",
        "name": "decoded_payload",
        "rules": [
            {
                "t": "set",
                "p": "decoded_payload",
                "pt": "msg",
                "to": "payload.uplink_message.decoded_payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ttnv3_payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 200,
        "wires": [
            [
                "82d9ab252e9b8089"
            ]
        ]
    },
    {
        "id": "ab2a910779716323",
        "type": "change",
        "z": "2b79d1365169f919",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "device_name",
                "pt": "msg",
                "to": "payload.rows[0].device_name",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ttnv3_payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "82d9ab252e9b8089",
        "type": "function",
        "z": "2b79d1365169f919",
        "name": "",
        "func": "var lookup = [\n{\"device_name\": \"hibiscus-lux\",\"device_id\": \"eui-2cf7f1212100000f\"},\n{\"device_name\": \"bdb-mbox\",\"device_id\": \"eui-008000000000fa94\"},\n{\"device_name\": \"guest_bedroom\",\"device_id\": \"eui-4491600000f7c6fd\"},\n{\"device_name\": \"garage-door\",\"device_id\":\"eui-4491600000f7d055\" },\n{\"device_name\": \"bdb-desk\",\"device_id\": \"eui-ccc0790000ee4eb4\"},\n{\"device_name\": \"hibiscus-soil-sensecap\",\"device_id\": \"eui-2cf7f12121000241\"},\n{\"device_name\": \"hibiscus-ath\",\"device_id\": \"eui-00800000040181bd\"},\n{\"device_name\": \"temp-rh-buffet\",\"device_id\": \"eui-ccc0790000ee507e\"},\n{\"device_name\": \"temp-rh-fireplace\",\"device_id\": \"eui-ccc0790000ee4ff8\"},\n{\"device_name\": \"temp-rh-attic\",\"device_id\": \"eui-ccc0790000ee5014\"},\n{\"device_name\": \"hibiscus-soil-dragino\",\"device_id\": \"eui-a84041edc1828b08\"},\n{\"device_name\": \"temp-garage\",\"device_id\": \"eui-ccc0790000ee58d8\"},\n{\"device_name\": \"temp-rh-master-bedroom\",\"device_id\": \"eui-ccc0790000ee517e\"},\n{\"device_name\": \"hibiscus-leak\",\"device_id\": \"eui-0080000004018174\"}\n];\n\n\n\nvar lookupMatch = lookup.find(el => msg.payload.end_device_ids.device_id === el.device_id);\n//node.warn(lookupMatch)\n\nif(lookupMatch) {\n   msg.device_name = lookupMatch.device_name;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 200,
        "wires": [
            [
                "ab2a910779716323"
            ]
        ]
    },
    {
        "id": "bd311abd4364b361",
        "type": "inject",
        "z": "e851f138fbd198fe",
        "name": "test",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "v3/edgewoods-radiobridge@ttn/devices/eui-ccc0790000ee4eb4/up",
        "payload": "{\"end_device_ids\":{\"device_id\":\"eui-ccc0790000ee4eb4\",\"application_ids\":{\"application_id\":\"edgewoods-radiobridge\"},\"dev_eui\":\"CCC0790000EE4EB4\",\"join_eui\":\"0101010101010101\",\"dev_addr\":\"260CD238\"},\"correlation_ids\":[\"as:up:01FK6X1ZSFWHEZZ3JRRYD3NKZQ\",\"gs:conn:01FK0JC37X4B4RF60SNDPDY8RS\",\"gs:up:host:01FK0JC3DKHKZ85GHZXCDEV8Y0\",\"gs:uplink:01FK6X1ZJKVP1JA6CF734MJ904\",\"ns:uplink:01FK6X1ZJPFP1V2AX58SGZHM51\",\"rpc:/ttn.lorawan.v3.GsNs/HandleUplink:01FK6X1ZJPCDDTMCSCVR9NKCAY\",\"rpc:/ttn.lorawan.v3.NsAs/HandleUplink:01FK6X1ZSFWSN1Q5YAN50NT6B8\"],\"received_at\":\"2021-10-29T20:49:58.578142446Z\",\"uplink_message\":{\"session_key_id\":\"AXyWPENbqlKKUMSIkYdArg==\",\"f_port\":2,\"f_cnt\":1128,\"frm_payload\":\"GA0AGhAnUA==\",\"decoded_payload\":{\"Message\":\"Event: Air Temperature/Humidity, ATH Event: Periodic Report, Temperature: 26.1, Humidity: 39.5, Packet Counter: 8, Protocol Version: 1\",\"event_type\":{\"description\":\"Periodic Report\"},\"events\":[{\"n\":\"temperature\",\"u\":\"Fah\",\"v\":78.98},{\"n\":\"relative_humidity\",\"u\":\"%RH\",\"v\":39.5}]},\"rx_metadata\":[{\"gateway_ids\":{\"gateway_id\":\"edgewoods-ttn3-001\",\"eui\":\"00800000A000195A\"},\"timestamp\":2102926475,\"rssi\":-51,\"channel_rssi\":-51,\"snr\":8.2,\"uplink_token\":\"CiAKHgoSZWRnZXdvb2RzLXR0bjMtMDAxEggAgAAAoAAZWhCLueDqBxoMCPa88YsGEPj40akBIPj9vYGaqjA=\",\"channel_index\":2},{\"gateway_ids\":{\"gateway_id\":\"packetbroker\"},\"packet_broker\":{\"message_id\":\"01FK6X1ZKFN7R8SBS6PMMCZXPP\",\"forwarder_net_id\":\"000013\",\"forwarder_tenant_id\":\"ttnv2\",\"forwarder_cluster_id\":\"ttn-v2-us-west\",\"forwarder_gateway_id\":\"innatedgewood\",\"home_network_net_id\":\"000013\",\"home_network_tenant_id\":\"ttn\",\"home_network_cluster_id\":\"nam1.cloud.thethings.network\"},\"time\":\"2021-10-29T21:44:16Z\",\"rssi\":-77,\"channel_rssi\":-77,\"snr\":7.75,\"location\":{\"latitude\":45.14176697,\"longitude\":-93.37486187,\"altitude\":290},\"uplink_token\":\"eyJnIjoiWlhsS2FHSkhZMmxQYVVwQ1RWUkpORkl3VGs1VE1XTnBURU5LYkdKdFRXbFBhVXBDVFZSSk5GSXdUazVKYVhkcFlWaFphVTlwU25oWFNFNDJVVlp2TVZOVVVYUlZlbXhHWlZoS1JVbHBkMmxrUjBadVNXcHZhVkV3VG1wU01IUjJZV3BzUTAwelVrSlZNMXBhWkd4V1RXRnJUa2hrZVVvNUxsRnRaVzgxWDA5TlQweG5Ua0pFUm5NeWVGRXpTbmN1ZEZsUFVVb3RkWFpFYmpocGQwbHlOeTU2UVRaWmNUTjBja3BQYzIxRlMwbE1abVZPTmtGNFZUazBURzFQTkZkdGJGSm9lbVZCTUhGUVZVdFhjMHh2VFdrdE9HSnhiWHBzTm10WFZHMXZOVXRhVW5KallVVnROVXRZUmxaaFdVc3RZVEpYTWxSc1gxUjVOM3B0UVhKU2JHOWpRbTVKWVZvME5rd3dWMDlwWTBkbE1VTnBPREp0V0RkclZtY3lkM0ZYVUdRMVRGRkJaeTVVWkhaTWVWUldjM2xqU0RKVFpWWTVkRkpHUWxSQiIsImEiOnsiZm5pZCI6IjAwMDAxMyIsImZ0aWQiOiJ0dG52MiIsImZjaWQiOiJ0dG4tdjItdXMtd2VzdCJ9fQ==\"},{\"gateway_ids\":{\"gateway_id\":\"edgewood-ttn-001\",\"eui\":\"58A0CBFFFE803199\"},\"time\":\"2021-10-29T20:49:58.314033985Z\",\"timestamp\":841893379,\"rssi\":-42,\"channel_rssi\":-42,\"snr\":8,\"uplink_token\":\"Ch4KHAoQZWRnZXdvb2QtdHRuLTAwMRIIWKDL//6AMZkQg4y5kQMaDAj2vPGLBhCsyZa8ASC494WmwIwE\"}],\"settings\":{\"data_rate\":{\"lora\":{\"bandwidth\":125000,\"spreading_factor\":7}},\"data_rate_index\":3,\"coding_rate\":\"4/5\",\"frequency\":\"904300000\",\"timestamp\":2102926475},\"received_at\":\"2021-10-29T20:49:58.358996021Z\",\"consumed_airtime\":\"0.061696s\",\"network_ids\":{\"net_id\":\"000013\",\"tenant_id\":\"ttn\",\"cluster_id\":\"ttn-nam1\"}}}",
        "payloadType": "json",
        "x": 150,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "7aff16d44c3565eb",
        "type": "comment",
        "z": "e851f138fbd198fe",
        "name": "Dragino",
        "info": "",
        "x": 130,
        "y": 1180,
        "wires": []
    },
    {
        "id": "9a131e34344e4835",
        "type": "switch",
        "z": "e851f138fbd198fe",
        "name": "",
        "property": "ttnv3_payload.uplink_message.decoded_payload.event_type.description",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Periodic Report",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Supervisory",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Humidity has Risen Above Upper Threshold",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 650,
        "y": 1000,
        "wires": [
            [
                "46acc3fa.0e350c"
            ],
            [
                "e9daff03243840f9"
            ],
            [
                "e9daff03243840f9"
            ],
            [
                "e9daff03243840f9"
            ]
        ]
    },
    {
        "id": "46acc3fa.0e350c",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "Periodic Event Loop",
        "func": "let dev_id = msg.device_name;\nlet hardware_serial = msg.payload.end_device_ids.dev_eui;\nlet app_id = msg.payload.end_device_ids.application_ids.application_id;\nlet counter = msg.payload.uplink_message.f_cnt;\nlet events = msg.payload.uplink_message.decoded_payload.events;\nlet influxMsg = {};\n\n\n/*\nTO Do...  when unknown_event is passed through to influxdb, it throws 400 bad request error.\nHow can I filter out using an array of bad events in my if statement most efficeintly?\nmap filter?\n\nlet exclusion_list = ['unknown_event', 'raw_data'];\n*/\ninfluxMsg.measurement = \"radio_bridge\";\n//var influxMsg = [];\n\n//if (msg.payload.object.events[i].n === \"temperature\") {\n\n/*\n122719 bdb - Doing a couple things here intentionally:  \n\n1) Stripping off raw_data packets - Already caputring them in mongodb if needed.  \n2) defining influxdb measurement equal to the name of the event from the codec.\n3) defining events[i].n \n\n*/\n\n\nfor (var i = 0 ; i < events.length; i++) {\n    //if (events[i].n !=[\"raw_data\", \"unknown_event\"] ){\n    //if (events[i].n != \"raw_data\" || events[i].n != \"unknown_event\" ) {\n    if (events[i].n != \"raw_data\") {\n        influxMsg = [{\n            measurement: events[i].n,\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: events[i].n,\n            u: events[i].u,\n            v: events[i].v,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: events[i].n\n        }],}];\n        node.send(influxMsg);\n    } else {}\n}    \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 980,
        "wires": [
            [
                "ad01381f10d5e3b7"
            ]
        ]
    },
    {
        "id": "ad01381f10d5e3b7",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "radioBridgePeriodicMsg",
        "mode": "link",
        "links": [
            "b30ec6d3b9997c05"
        ],
        "x": 995,
        "y": 980,
        "wires": []
    },
    {
        "id": "484480bd4c1b0376",
        "type": "comment",
        "z": "e851f138fbd198fe",
        "name": "RadioBridge",
        "info": "",
        "x": 150,
        "y": 800,
        "wires": []
    },
    {
        "id": "026a9c8085a7862c",
        "type": "subflow:2b79d1365169f919",
        "z": "e851f138fbd198fe",
        "name": "",
        "env": [],
        "x": 480,
        "y": 1000,
        "wires": [
            [
                "9a131e34344e4835"
            ],
            [],
            []
        ]
    },
    {
        "id": "c6277d9827b77001",
        "type": "comment",
        "z": "e851f138fbd198fe",
        "name": "SenseCAP",
        "info": "",
        "x": 140,
        "y": 1380,
        "wires": []
    },
    {
        "id": "d02558043be717f3",
        "type": "subflow:2b79d1365169f919",
        "z": "e851f138fbd198fe",
        "name": "",
        "env": [],
        "x": 480,
        "y": 1260,
        "wires": [
            [
                "a25f330c2c765f5a"
            ],
            [],
            []
        ]
    },
    {
        "id": "6e40d9f14980d493",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "draginoOut",
        "mode": "link",
        "links": [
            "571d727121b45daa"
        ],
        "x": 835,
        "y": 1300,
        "wires": []
    },
    {
        "id": "91b54c5a6e9f7916",
        "type": "subflow:2b79d1365169f919",
        "z": "e851f138fbd198fe",
        "name": "",
        "x": 480,
        "y": 1460,
        "wires": [
            [
                "b1effb7d0f5312e2",
                "935ea9c0c09a1c14"
            ],
            [],
            []
        ]
    },
    {
        "id": "b1effb7d0f5312e2",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "SenseCap Loop",
        "func": "let dev_id = msg.device_name;\nlet hardware_serial = msg.payload.end_device_ids.dev_eui;\nlet app_id = msg.payload.end_device_ids.application_ids.application_id;\nlet counter = msg.payload.uplink_message.f_cnt;\nlet events = msg.payload.uplink_message.decoded_payload.messages;\nlet influxMsg = [];\n\n/*\nTO Do...  when unknown_event is passed through to influxdb, it throws 400 bad request error.\nHow can I filter out using an array of bad events in my if statement most efficeintly?\nmap filter?\n\nlet exclusion_list = ['unknown_event', 'raw_data'];\n*/\ninfluxMsg.measurement = \"sense_cap\";\n\nfor (var i = 0 ; i < events.length; i++) {\n    if (typeof events[i].measurementId !== 'undefined') {\n        if (events[i].measurementId === 4102 ) {\n            var temp_f = ((events[i].measurementValue * 9/5)+32)\n    //        var temp_f = math.round((events[i].measurementValue * 9/5)+32)\n            influxMsg = [{\n                measurement: 'soil_temperature',\n                payload: [{\n                dev_id: dev_id,\n                dev_eui: hardware_serial,\n                msg_counter: counter,\n                n: 'soil_temperature',\n                u: 'Fah',\n                //v: temp_f.toFixed(2),\n                v: Number(temp_f.toFixed(2)),\n            },{\n                app_id: app_id,\n                device_id: dev_id,\n                event_name: 'soil_temperature'\n            }],}];\n            node.send(influxMsg);\n        } else {\n            if (events[i].measurementId === 4103 ) {\n            influxMsg = [{\n                measurement: 'soil_moisture',\n                payload: [{\n                dev_id: dev_id,\n                dev_eui: hardware_serial,\n                msg_counter: counter,\n                n: 'soil_moisture',\n                u: 'Moist',\n                v: events[i].measurementValue,\n            },{\n                app_id: app_id,\n                device_id: dev_id,\n                event_name: 'soil_moisture'\n            }],}];\n            node.send(influxMsg);\n        } else {\n            if (events[i].measurementId === 4099 ) {\n            influxMsg = [{\n                measurement: 'lux',\n                payload: [{\n                dev_id: dev_id,\n                dev_eui: hardware_serial,\n                msg_counter: counter,\n                n: 'lux',\n                u: 'lux',\n                v: events[i].measurementValue,\n            },{\n                app_id: app_id,\n                device_id: dev_id,\n                event_name: 'lux'\n            }],}];\n            node.send(influxMsg);\n        }}}\n    } else if (typeof events[i].battery !== 'undefined') {\n        influxMsg = [{\n            measurement: 'battery_voltage',\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: 'battery_voltage',\n            u: 'V',\n            v: events[i].battery,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: 'battery_voltage'\n        }],}];\n        node.send(influxMsg);\n    } else if (typeof events[i].interval !== 'undefined') {\n        influxMsg = [{\n            measurement: 'reporting_interval',\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: 'reporting_interval',\n            u: 'SEC',\n            v: events[i].interval,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: 'reporting_interval'\n        }],}];\n        node.send(influxMsg);\n    } else {\n        influxMsg = [{\n            measurement: 'unknown',\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: 'unknown',\n            u: 'unknown',\n            v: events[i].measurementValue,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: 'unknown'\n        }],}];\n        node.send(influxMsg);\n      \n\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1460,
        "wires": [
            [
                "b53af92376739f8a",
                "67e5e4b131aca562"
            ]
        ]
    },
    {
        "id": "b53af92376739f8a",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "senseCapOut",
        "mode": "link",
        "links": [
            "d3561ca26614772f"
        ],
        "x": 815,
        "y": 1460,
        "wires": []
    },
    {
        "id": "e9daff03243840f9",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 1040,
        "wires": []
    },
    {
        "id": "5e72f91f649fedfa",
        "type": "subflow:2b79d1365169f919",
        "z": "e851f138fbd198fe",
        "name": "",
        "env": [],
        "x": 490,
        "y": 2260,
        "wires": [
            [
                "878519f3.342c88"
            ],
            [],
            []
        ]
    },
    {
        "id": "30a5297b.a93276",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1500,
        "y": 2540,
        "wires": []
    },
    {
        "id": "62a237f9.a753f8",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "TTN Mbox Codec",
        "func": "//function Decoder(bytes, port) {\n  // Decode an uplink message from a buffer\n  // (array) of bytes to an object of fields.\n  //var decoded = {};\n\n  // if (port === 1) decoded.led = bytes[0];\n\n  //return decoded;\n//}\n//function Decode(fPort, bytes) {\n\n\n//function Decoder(bytes, port) {\nvar bytes = msg.payload_raw;\n\n\nif (bytes.length == 14){  \n  var event_array = [];\n  var evb_sensors = {};\n  var EVB_TYPE = {\n    none: 0,\n    led_1: 1,\n    led_2: 2,\n    lux_max: 3,\n    lux_min: 4,\n    lux: 5,\n    barometer_max: 6,\n    barometer_min: 7,\n    barometer: 8,\n    temperature_max: 9,\n    temperature__min: 10,\n    temperature: 11,\n    accelerometer_max: 12,\n    accelerometer_min: 13,\n    accelerometer: 14,\n    tx_interval: 15,\n    amps_max: 16,\n    amps_min: 17,\n    amps: 18,\n    m2x_device: 19,\n    m2x_key: 20,\n  };\n\n/*\n * Process the EVB LoRa payload.\n *\n * EVB payload contains one or more TLV fields.\n *\n * [<type: accelerometer><length: 6><x-high><x-low><y-high><y-low><z-high><z-low>]\n * [<type: barometer><length: 3><byte2><byte1><byte0>]\n * [<type: temperature><length: 2><byte-high><byte-low>]\n * \n */\n  for (var index = 0; index < bytes.length; ) {\n    var type = bytes[index++];\n  //   var length = bytes[index++];\n    var value;\n    console.log(\"type: \" + type + \" length: \" );\n\n    switch (type) {\n    case EVB_TYPE.lux:\n      if (typeof(evb_sensors.light) == \"undefined\") {\n        evb_sensors.light = {};\n      }\n      value = bytes[index++] << 8;\n      value |= bytes[index++];\n      value = value * 0.24;\n      evb_sensors.light.lux = value;\n      // web of things \n      var lux_lighting_event = {};\n      lux_lighting_event.n = \"lux_level\";\n      lux_lighting_event.u = \"lx\";\n      lux_lighting_event.v = evb_sensors.light.lux;\n      event_array.push(lux_lighting_event);\n      break;\n    case EVB_TYPE.barometer:\n      if (typeof(evb_sensors.barometer) == \"undefined\") {\n        evb_sensors.barometer = {};\n      }\n      value = bytes[index++] << 16;\n      value |= bytes[index++] << 8;\n      value |= bytes[index++];\n      value = value * 0.00025;\n      evb_sensors.barometer.pa = value;\n      \n      //web of things event array payload\n      var relative_humidity_event = {};\n      relative_humidity_event.n = \"relative_humidity\";\n      relative_humidity_event.u = \"%RH\";\n      relative_humidity_event.v = evb_sensors.barometer.pa;\n      event_array.push(relative_humidity_event);\n      \n      break;\n    case EVB_TYPE.temperature:\n      if (typeof(evb_sensors.temperature) == \"undefined\") {\n      evb_sensors.temperature = {};\n      }\n      value = (bytes[index++] << 24) >> 16;\n      value |= bytes[index++];\n      value = value * 0.0625;\n      evb_sensors.temperature.c = value;\n      evb_sensors.temperature.f =  value * 9 / 5 + 32; \n      //web of things event array payload\n      var air_temp_event = {};\n      air_temp_event.n = \"temperature\";\n      air_temp_event.u = \"Fah\";\n      air_temp_event.v = evb_sensors.temperature.f;\n      event_array.push(air_temp_event);\n      \n      break;\n    case EVB_TYPE.accelerometer:\n      if (typeof(evb_sensors.accelerometer) == \"undefined\") {\n      evb_sensors.accelerometer = {};\n      }\n      // evb_sensors.accelerometer.x = (bytes[index++] << 24) >> 16;\n      var x1 = evb_sensors.accelerometer.x = bytes[index++] ;\n      // x1 = ~x1 ; \n      // x1 = ( x1 + 1 ) % 256; \n      evb_sensors.accelerometer.x = x1 * 0.0625;//; / 15;\n      // evb_sensors.accelerometer.y = (bytes[index++] << 24) >> 16;\n      var y1 = evb_sensors.accelerometer.y = bytes[index++] ;\n      // y1 = ~ y1 ; \n      // y1 = ( y1 + 1 ) % 256;\n        \n      y1 = evb_sensors.accelerometer.y = y1 * 0.0625 ; // / 15 ;\n      // evb_sensors.accelerometer.z = (bytes[index++] << 24) >> 16;\n      var z1 = evb_sensors.accelerometer.z = bytes[index++] ;\n      // z1 = ~ z1 ; \n      // z1 = ( z1 + 1 ) % 256; \n      // z1 = z1 - 128;\n      z1 = evb_sensors.accelerometer.z = z1 * 0.0625; // / 15;\n      //web of things event array payload\n      var accelerometer_x_event = {};\n      accelerometer_x_event.n = \"x\";\n      accelerometer_x_event.u = \"axis\";\n      accelerometer_x_event.n = evb_sensors.accelerometer.x;\n      event_array.push(accelerometer_x_event);\n      \n      var accelerometer_y_event = {};\n      accelerometer_y_event.n = \"\";\n      accelerometer_y_event.u = \"axis\";\n      accelerometer_y_event.n = evb_sensors.accelerometer.y;\n      event_array.push(accelerometer_y_event);\n      \n      var accelerometer_z_event = {};\n      accelerometer_z_event.n = \"z\";\n      accelerometer_z_event.u = \"axis\";\n      accelerometer_z_event.n = evb_sensors.accelerometer.z;\n      event_array.push(accelerometer_z_event);\n      break;    \n      }\n  }\n  return {\n    //temp_c: evb_sensors.temperature.c,\n    measurement: \"LoRa_demo\",\n    temp_f: evb_sensors.temperature.f,\n    moisture: evb_sensors.barometer.pa,\n    lux: evb_sensors.light.lux,\n    x_acc: evb_sensors.accelerometer.x,\n    y_acc: evb_sensors.accelerometer.y,\n    z_acc: evb_sensors.accelerometer.z,\n    events: event_array,\n  };\n} \n\nif (bytes.length == 11) {\n\n/*\n * Process the EVB LoRa GPS Survey Sweep payload.\n * \n * Byte 0 is 0\n * Byte 1 is temperature in Celsius\n * Byte 2 is 0\n * Byte 3-6 is GPS Latitude\n * Byte 7-10 is GPS Longitude\n * Bytes 10+ is padding with 0\n * \n*/  \n  var gps_event_array = [];\n  \n  var temp_c = bytes[1];\n  var temp_f = 1.8 * temp_c + 32;\n  //web of things event array payload\n  var gps_air_temp_event = {};\n  gps_air_temp_event.n = \"temperature\";\n  gps_air_temp_event.u = \"Fah\";\n  gps_air_temp_event.v = temp_f;\n  gps_event_array.push(gps_air_temp_event);\n  \n  var latitude = ((bytes[3] << 24) | (bytes[4] << 16) | (bytes[5] << 8 ) | bytes[6])  / 2147483648*90; // 2^31 * 90\n  //web of things event array payload\n  var gps_latitude_event = {};\n  gps_latitude_event.n = \"latitude\";\n  gps_latitude_event.u = \"deg\";\n  gps_latitude_event.v = latitude;\n  gps_event_array.push(gps_latitude_event);\n  \n  var longitude = ((bytes[7] << 24) | (bytes[8] << 16) | (bytes[9] << 8 ) | bytes[10]) / 2147483648*180; // 2^31 * 180\n  //web of things event array payload\n  var gps_longitude_event = {};\n  gps_longitude_event.n = \"longitude\";\n  gps_longitude_event.u = \"deg\";\n  gps_longitude_event.v = longitude;\n  gps_event_array.push(gps_longitude_event);  \n  \n // if (port === 1) decoded.led = bytes[0];\n  return {\n    measurement: \"GPS_survey\",\n    events: gps_event_array,\n    temp_f: temp_f,\n    latitude: latitude,\n    longitude: longitude,\n  };\n} else { return { payload: \"unexpected byte length\"};  \n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 2540,
        "wires": [
            [
                "30a5297b.a93276"
            ]
        ]
    },
    {
        "id": "67e5e4b131aca562",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "senseCap",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1540,
        "wires": []
    },
    {
        "id": "935ea9c0c09a1c14",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 1400,
        "wires": []
    },
    {
        "id": "878519f3.342c88",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "TTN Mbox Codec",
        "func": "//Translator for MultiTech mbox LoRaWAN survey sweep tool\n\nvar bytes = msg.payload.uplink_message.decoded_payload.bytes;\nvar dev_id = msg.device_name;\nvar hardware_serial = msg.payload.end_device_ids.device_id;\nvar counter = msg.payload.uplink_message.f_cnt;\n\nif (bytes.length == 14){  \n  var event_array = [];\n  var evb_sensors = {};\n  var EVB_TYPE = {\n    none: 0,\n    led_1: 1,\n    led_2: 2,\n    lux_max: 3,\n    lux_min: 4,\n    lux: 5,\n    barometer_max: 6,\n    barometer_min: 7,\n    barometer: 8,\n    temperature_max: 9,\n    temperature__min: 10,\n    temperature: 11,\n    accelerometer_max: 12,\n    accelerometer_min: 13,\n    accelerometer: 14,\n    tx_interval: 15,\n    amps_max: 16,\n    amps_min: 17,\n    amps: 18,\n    m2x_device: 19,\n    m2x_key: 20,\n  };\n\n/*\n * Process the EVB LoRa payload.\n *\n * EVB payload contains one or more TLV fields.\n *\n * [<type: accelerometer><length: 6><x-high><x-low><y-high><y-low><z-high><z-low>]\n * [<type: barometer><length: 3><byte2><byte1><byte0>]\n * [<type: temperature><length: 2><byte-high><byte-low>]\n * \n */\n  for (var index = 0; index < bytes.length; ) {\n    var type = bytes[index++];\n  //   var length = bytes[index++];\n    var value;\n    console.log(\"type: \" + type + \" length: \" );\n\n    switch (type) {\n    case EVB_TYPE.lux:\n      if (typeof(evb_sensors.light) == \"undefined\") {\n        evb_sensors.light = {};\n      }\n      value = bytes[index++] << 8;\n      value |= bytes[index++];\n      value = value * 0.24;\n      evb_sensors.light.lux = value;\n      // web of things \n      var lux_lighting_event = {};\n      lux_lighting_event.n = \"lux_level\";\n      lux_lighting_event.u = \"lx\";\n      lux_lighting_event.v = evb_sensors.light.lux;\n      event_array.push(lux_lighting_event);\n      break;\n    case EVB_TYPE.barometer:\n      if (typeof(evb_sensors.barometer) == \"undefined\") {\n        evb_sensors.barometer = {};\n      }\n      value = bytes[index++] << 16;\n      value |= bytes[index++] << 8;\n      value |= bytes[index++];\n      value = value * 0.00025;\n      evb_sensors.barometer.pa = value;\n      \n      //web of things event array payload\n      var relative_humidity_event = {};\n      relative_humidity_event.n = \"relative_humidity\";\n      relative_humidity_event.u = \"%RH\";\n      relative_humidity_event.v = evb_sensors.barometer.pa;\n      event_array.push(relative_humidity_event);\n      \n      break;\n    case EVB_TYPE.temperature:\n      if (typeof(evb_sensors.temperature) == \"undefined\") {\n      evb_sensors.temperature = {};\n      }\n      value = (bytes[index++] << 24) >> 16;\n      value |= bytes[index++];\n      value = value * 0.0625;\n      evb_sensors.temperature.c = value;\n      evb_sensors.temperature.f =  value * 9 / 5 + 32; \n      //web of things event array payload\n      var air_temp_event = {};\n      air_temp_event.n = \"temperature\";\n      air_temp_event.u = \"Fah\";\n      air_temp_event.v = evb_sensors.temperature.f;\n      event_array.push(air_temp_event);\n      \n      break;\n    case EVB_TYPE.accelerometer:\n      if (typeof(evb_sensors.accelerometer) == \"undefined\") {\n      evb_sensors.accelerometer = {};\n      }\n      // evb_sensors.accelerometer.x = (bytes[index++] << 24) >> 16;\n      var x1 = evb_sensors.accelerometer.x = bytes[index++] ;\n      // x1 = ~x1 ; \n      // x1 = ( x1 + 1 ) % 256; \n      evb_sensors.accelerometer.x = x1 * 0.0625;//; / 15;\n      // evb_sensors.accelerometer.y = (bytes[index++] << 24) >> 16;\n      var y1 = evb_sensors.accelerometer.y = bytes[index++] ;\n      // y1 = ~ y1 ; \n      // y1 = ( y1 + 1 ) % 256;\n        \n      y1 = evb_sensors.accelerometer.y = y1 * 0.0625 ; // / 15 ;\n      // evb_sensors.accelerometer.z = (bytes[index++] << 24) >> 16;\n      var z1 = evb_sensors.accelerometer.z = bytes[index++] ;\n      // z1 = ~ z1 ; \n      // z1 = ( z1 + 1 ) % 256; \n      // z1 = z1 - 128;\n      z1 = evb_sensors.accelerometer.z = z1 * 0.0625; // / 15;\n      //web of things event array payload\n      var accelerometer_x_event = {};\n      accelerometer_x_event.n = \"x\";\n      accelerometer_x_event.u = \"axis\";\n      accelerometer_x_event.n = evb_sensors.accelerometer.x;\n      event_array.push(accelerometer_x_event);\n      \n      var accelerometer_y_event = {};\n      accelerometer_y_event.n = \"\";\n      accelerometer_y_event.u = \"axis\";\n      accelerometer_y_event.n = evb_sensors.accelerometer.y;\n      event_array.push(accelerometer_y_event);\n      \n      var accelerometer_z_event = {};\n      accelerometer_z_event.n = \"z\";\n      accelerometer_z_event.u = \"axis\";\n      accelerometer_z_event.n = evb_sensors.accelerometer.z;\n      event_array.push(accelerometer_z_event);\n      break;    \n      }\n  }\n  return {\n    //temp_c: evb_sensors.temperature.c,\n    dev_id: dev_id,\n    hardware_serial: hardware_serial,\n    counter: counter,\n    measurement: \"LoRa_demo\",\n    temp_f: evb_sensors.temperature.f,\n    moisture: evb_sensors.barometer.pa,\n    lux: evb_sensors.light.lux,\n    x_acc: evb_sensors.accelerometer.x,\n    y_acc: evb_sensors.accelerometer.y,\n    z_acc: evb_sensors.accelerometer.z,\n    events: event_array,\n  };\n} \n\nif (bytes.length == 11) {\n\n/*\n * Process the EVB LoRa GPS Survey Sweep payload.\n * \n * Byte 0 is 0\n * Byte 1 is temperature in Celsius\n * Byte 2 is 0\n * Byte 3-6 is GPS Latitude\n * Byte 7-10 is GPS Longitude\n * Bytes 10+ is padding with 0\n * \n*/  \n  var gps_event_array = [];\n  \n  var temp_c = bytes[1];\n  var temp_f = 1.8 * temp_c + 32;\n  //web of things event array payload\n  var gps_air_temp_event = {};\n  gps_air_temp_event.n = \"temperature\";\n  gps_air_temp_event.u = \"Fah\";\n  gps_air_temp_event.v = temp_f;\n  gps_event_array.push(gps_air_temp_event);\n  \n  var latitude = ((bytes[3] << 24) | (bytes[4] << 16) | (bytes[5] << 8 ) | bytes[6])  / 2147483648*90; // 2^31 * 90\n  //web of things event array payload\n  var gps_latitude_event = {};\n  gps_latitude_event.n = \"latitude\";\n  gps_latitude_event.u = \"deg\";\n  gps_latitude_event.v = latitude;\n  gps_event_array.push(gps_latitude_event);\n  \n  var longitude = ((bytes[7] << 24) | (bytes[8] << 16) | (bytes[9] << 8 ) | bytes[10]) / 2147483648*180; // 2^31 * 180\n  //web of things event array payload\n  var gps_longitude_event = {};\n  gps_longitude_event.n = \"longitude\";\n  gps_longitude_event.u = \"deg\";\n  gps_longitude_event.v = longitude;\n  gps_event_array.push(gps_longitude_event);  \n  \n // if (port === 1) decoded.led = bytes[0];\n  return {\n    dev_id: dev_id,\n    hardware_serial: hardware_serial,\n    counter: counter,\n    measurement: \"GPS_survey\",\n    events: gps_event_array,\n    temp_f: temp_f,\n    latitude: latitude,\n    longitude: longitude,\n  };\n} else { return { payload: \"unexpected byte length\"};  \n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 2260,
        "wires": [
            [
                "7f570de8.443464",
                "f2730c07.eb44d"
            ]
        ]
    },
    {
        "id": "c31034c9.52aa08",
        "type": "trigger",
        "z": "e851f138fbd198fe",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 1110,
        "y": 2340,
        "wires": [
            [
                "4fa6bad9.438c44"
            ]
        ]
    },
    {
        "id": "4fa6bad9.438c44",
        "type": "ui_gauge",
        "z": "e851f138fbd198fe",
        "name": "",
        "group": "7f2ebed0.9fcd3",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "ping",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1280,
        "y": 2340,
        "wires": []
    },
    {
        "id": "7f570de8.443464",
        "type": "switch",
        "z": "e851f138fbd198fe",
        "name": "",
        "property": "measurement",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "LoRa_demo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GPS_survey",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 920,
        "y": 2260,
        "wires": [
            [
                "55fd3b1e.39ce74",
                "6bd0cdb7.3986b4",
                "de6f17c0.a78da8",
                "98ccd05b.4dd4b",
                "d0066b2d.7b1918",
                "37234500.9c946c",
                "3d0033b5.0ddfbc",
                "92c164a6.a5e438"
            ],
            [
                "467cbadf.d25174",
                "3e45b65d.ff3aaa",
                "56a7c4cd.562f5c",
                "c31034c9.52aa08",
                "8fe302c4.bfbf4"
            ]
        ]
    },
    {
        "id": "56a7c4cd.562f5c",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "7f2ebed0.9fcd3",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperature",
        "format": "{{msg.payload.temp_f}}",
        "layout": "row-spread",
        "x": 1120,
        "y": 2460,
        "wires": []
    },
    {
        "id": "467cbadf.d25174",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "7f2ebed0.9fcd3",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Latitude",
        "format": "{{msg.payload.latitude}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 2380,
        "wires": []
    },
    {
        "id": "3e45b65d.ff3aaa",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "7f2ebed0.9fcd3",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Longitude",
        "format": "{{msg.payload.longitude}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 2420,
        "wires": []
    },
    {
        "id": "55fd3b1e.39ce74",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "87d11ec8.ee325",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Lux",
        "format": "{{msg.payload.lux}}",
        "layout": "row-spread",
        "x": 1100,
        "y": 2100,
        "wires": []
    },
    {
        "id": "6bd0cdb7.3986b4",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "87d11ec8.ee325",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Moisture",
        "format": "{{msg.payload.moisture}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 2140,
        "wires": []
    },
    {
        "id": "de6f17c0.a78da8",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "87d11ec8.ee325",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperature",
        "format": "{{msg.payload.temp_f}}",
        "layout": "row-spread",
        "x": 1120,
        "y": 2060,
        "wires": []
    },
    {
        "id": "98ccd05b.4dd4b",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "87d11ec8.ee325",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "X_Acc",
        "format": "{{msg.payload.x_acc}}",
        "layout": "row-spread",
        "x": 1100,
        "y": 2180,
        "wires": []
    },
    {
        "id": "d0066b2d.7b1918",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "87d11ec8.ee325",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Y_Acc",
        "format": "{{msg.payload.y_acc}}",
        "layout": "row-spread",
        "x": 1100,
        "y": 2220,
        "wires": []
    },
    {
        "id": "37234500.9c946c",
        "type": "ui_text",
        "z": "e851f138fbd198fe",
        "group": "87d11ec8.ee325",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Z_Acc",
        "format": "{{msg.payload.z_acc}}",
        "layout": "row-spread",
        "x": 1100,
        "y": 2260,
        "wires": []
    },
    {
        "id": "3d0033b5.0ddfbc",
        "type": "trigger",
        "z": "e851f138fbd198fe",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 1110,
        "y": 2300,
        "wires": [
            [
                "a79c555b.d6b1b8"
            ]
        ]
    },
    {
        "id": "a79c555b.d6b1b8",
        "type": "ui_gauge",
        "z": "e851f138fbd198fe",
        "name": "",
        "group": "87d11ec8.ee325",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "ping",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1280,
        "y": 2300,
        "wires": []
    },
    {
        "id": "f2730c07.eb44d",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "mulitech-TTN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 2340,
        "wires": []
    },
    {
        "id": "92c164a6.a5e438",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "Loop",
        "func": "let dev_id = msg.dev_id;\nlet hardware_serial = msg.hardware_serial;\nlet app_id = msg.app_id;\nlet counter = msg.counter;\nlet events = msg.events;\nlet influxMsg = {};\n\n\n/*\nTO Do...  when unknown_event is passed through to influxdb, it throws 400 bad request error.\nHow can I filter out using an array of bad events in my if statement most efficeintly?\nmap filter?\n\nlet exclusion_list = ['unknown_event', 'raw_data'];\n*/\ninfluxMsg.measurement = \"radio_bridge\";\n//var influxMsg = [];\n\n//if (msg.payload.object.events[i].n === \"temperature\") {\n\n/*\n122719 bdb - Doing a couple things here intentionally:  \n\n1) Stripping off raw_data packets - Already caputring them in mongodb if needed.  \n2) defining influxdb measurement equal to the name of the event from the codec.\n3) defining events[i].n \n\n*/\n\n\nfor (var i = 0 ; i < events.length; i++) {\n    //if (events[i].n !=[\"raw_data\", \"unknown_event\"] ){\n    if (events[i].n != \"raw_data\") {\n        influxMsg = [{\n            measurement: events[i].n,\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: events[i].n,\n            u: events[i].u,\n            v: events[i].v,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: events[i].n\n        }],}];\n        node.send(influxMsg);\n    } else {}\n}    \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 2020,
        "wires": [
            [
                "7f05c1bb.5f016"
            ]
        ]
    },
    {
        "id": "7f05c1bb.5f016",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1280,
        "y": 2020,
        "wires": []
    },
    {
        "id": "8fe302c4.bfbf4",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "",
        "func": "let dev_id = msg.dev_id;\nlet hardware_serial = msg.hardware_serial;\nlet app_id = msg.app_id;\nlet counter = msg.counter;\nlet events = msg.events;\nlet influxMsg = {};\n\nlet latitude = msg.latitude;\nlet longitude = msg.longitude;\nlet temp_f = msg.temp_f;\n//let frequency = msg.metadata.frequency;\n//let data_rate = msg.metadata.data_rate\n//let airtime = msg.metadata.airtime;\n\n\nlet measurement = msg.measurement;\nlet geoloc = \"mbox gps survey\"\n\ninfluxMsg = [{\nmeasurement: measurement,\npayload: [{\n    dev_id: dev_id,\n    dev_eui: hardware_serial,\n    msg_counter: counter,\n    latitude: latitude,\n    longitude: longitude,\n    temp_f: temp_f,\n    //frequency: frequency,\n    //data_rate: data_rate,\n    //airtime: airtime,\n    },{\n    app_id: app_id,\n    device_id: dev_id,\n    event_name: geoloc,\n    }],}];\n\nreturn influxMsg;    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 2500,
        "wires": [
            [
                "ab76c53c.5b4f78",
                "761461.a7a63ba"
            ]
        ]
    },
    {
        "id": "d622c24d.b2d",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1360,
        "y": 2620,
        "wires": []
    },
    {
        "id": "e7228b7d.dfabb8",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "mboxTTN",
        "links": [
            "56a1fccf.ecb884",
            "d43cfd50.963c4"
        ],
        "x": 1445,
        "y": 2500,
        "wires": []
    },
    {
        "id": "ab76c53c.5b4f78",
        "type": "geohash",
        "z": "e851f138fbd198fe",
        "name": "",
        "property": "payload.events",
        "x": 1210,
        "y": 2620,
        "wires": [
            [
                "d622c24d.b2d"
            ]
        ]
    },
    {
        "id": "d66ec734.e963e8",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1480,
        "y": 2440,
        "wires": []
    },
    {
        "id": "761461.a7a63ba",
        "type": "switch",
        "z": "e851f138fbd198fe",
        "name": "Filter null GPS",
        "property": "payload[0].latitude",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1300,
        "y": 2500,
        "wires": [
            [
                "d66ec734.e963e8"
            ],
            [
                "e7228b7d.dfabb8",
                "56e4588c.c1c1d8"
            ]
        ]
    },
    {
        "id": "56e4588c.c1c1d8",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1480,
        "y": 2560,
        "wires": []
    },
    {
        "id": "f809a2978620b2f7",
        "type": "comment",
        "z": "e851f138fbd198fe",
        "name": "MultiTech mbox",
        "info": "",
        "x": 170,
        "y": 2080,
        "wires": []
    },
    {
        "id": "8cf570d1cc793d27",
        "type": "inject",
        "z": "e851f138fbd198fe",
        "name": "senseCap Battery",
        "props": [
            {
                "p": "ttnv3_payload",
                "v": "{\"end_device_ids\":{\"device_id\":\"eui-2cf7f1212100000f\",\"application_ids\":{\"application_id\":\"edgewoods-sensecap\"},\"dev_eui\":\"2CF7F1212100000F\",\"join_eui\":\"8000000000000008\",\"dev_addr\":\"260C8464\"},\"correlation_ids\":[\"as:up:01FKCHVHE5AJDC4NWECT8Y104H\",\"gs:conn:01FK94905DZR13AMG6DW7NF0P3\",\"gs:up:host:01FK9490A3K3E9YSRXXWEVTPYD\",\"gs:uplink:01FKCHVH7CV8W7WD1ERY2FHD0D\",\"ns:uplink:01FKCHVH7F8Y1TJS2MVH567Y1J\",\"rpc:/ttn.lorawan.v3.GsNs/HandleUplink:01FKCHVH7FND0ZMF4QSHE9VGNE\",\"rpc:/ttn.lorawan.v3.NsAs/HandleUplink:01FKCHVHE4BE6E2S2B4K5P6684\"],\"received_at\":\"2021-11-01T01:29:39.527971572Z\",\"uplink_message\":{\"session_key_id\":\"AXzYrNflA+ROUR3uzWFYBg==\",\"f_port\":2,\"f_cnt\":11,\"frm_payload\":\"AAcAZAA8AAEDEAAAAADzBg==\",\"decoded_payload\":{\"err\":0,\"messages\":[{\"battery\":100,\"type\":\"upload_battery\"},{\"interval\":3600,\"type\":\"upload_interval\"},{\"measurementId\":4099,\"measurementValue\":0,\"type\":\"report_telemetry\"}],\"payload\":\"00070064003C0001031000000000F306\",\"valid\":true},\"rx_metadata\":[{\"gateway_ids\":{\"gateway_id\":\"edgewoods-inn-1\",\"eui\":\"008000000001644F\"},\"timestamp\":2565412627,\"rssi\":-56,\"channel_rssi\":-56,\"snr\":10,\"uplink_token\":\"Ch0KGwoPZWRnZXdvb2RzLWlubi0xEggAgAAAAAFkTxCTrqTHCRoMCIOG/YsGEInjmpMBILjEiPTU9hs=\"},{\"gateway_ids\":{\"gateway_id\":\"edgewoods-ttn3-001\",\"eui\":\"00800000A000195A\"},\"timestamp\":2705065443,\"rssi\":-38,\"channel_rssi\":-38,\"snr\":9.2,\"uplink_token\":\"CiAKHgoSZWRnZXdvb2RzLXR0bjMtMDAxEggAgAAAoAAZWhDji/CJChoMCIOG/YsGEJSMn5YBILj925Pdt1s=\"},{\"gateway_ids\":{\"gateway_id\":\"edgewood-ttn-001\",\"eui\":\"58A0CBFFFE803199\"},\"time\":\"2021-11-01T01:29:39.245666980Z\",\"timestamp\":435363659,\"rssi\":-57,\"channel_rssi\":-57,\"snr\":10.5,\"uplink_token\":\"Ch4KHAoQZWRnZXdvb2QtdHRuLTAwMRIIWKDL//6AMZkQy77MzwEaDAiDhv2LBhDho7GfASD4+cjt1fQH\"}],\"settings\":{\"data_rate\":{\"lora\":{\"bandwidth\":125000,\"spreading_factor\":7}},\"data_rate_index\":3,\"coding_rate\":\"4/5\",\"frequency\":\"903900000\",\"timestamp\":2565412627},\"received_at\":\"2021-11-01T01:29:39.311917122Z\",\"confirmed\":true,\"consumed_airtime\":\"0.066816s\",\"version_ids\":{\"brand_id\":\"sensecap\",\"model_id\":\"sensecap-light\",\"hardware_version\":\"2.0\",\"firmware_version\":\"3.4\",\"band_id\":\"US_902_928\"},\"network_ids\":{\"net_id\":\"000013\",\"tenant_id\":\"ttn\",\"cluster_id\":\"ttn-nam1\"}}}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload.rows[0].device_name",
                "v": "lux-test",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "v3/edgewoods-sensecap@ttn/devices/eui-2cf7f1212100000f/up",
        "x": 230,
        "y": 1700,
        "wires": [
            [
                "3304d85528a07320",
                "98cb33fed8346b55"
            ]
        ]
    },
    {
        "id": "3304d85528a07320",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "SenseCap Loop",
        "func": "let dev_id = msg.payload.rows[0].device_name;\nlet hardware_serial = msg.ttnv3_payload.end_device_ids.dev_eui;\nlet app_id = msg.ttnv3_payload.end_device_ids.application_ids.application_id;\nlet counter = msg.ttnv3_payload.uplink_message.f_cnt;\nlet events = msg.ttnv3_payload.uplink_message.decoded_payload.messages;\n\nlet influxMsg = [];\n\n/*\nTO Do...  when unknown_event is passed through to influxdb, it throws 400 bad request error.\nHow can I filter out using an array of bad events in my if statement most efficeintly?\nmap filter?\n\nlet exclusion_list = ['unknown_event', 'raw_data'];\n*/\ninfluxMsg.measurement = \"sense_cap\";\n\n//Loop for Sensor Measurements, Battery Interval, Reporting Interval    \n\nfor (var i = 0 ; i < events.length; i++) {\n    if (typeof events[i].measurementId !== 'undefined') {\n        if (events[i].measurementId === 4102 ) {\n            var temp_f = ((events[i].measurementValue * 9/5)+32)\n    //        var temp_f = math.round((events[i].measurementValue * 9/5)+32)\n            influxMsg = [{\n                measurement: 'soil_temperature',\n                payload: [{\n                dev_id: dev_id,\n                dev_eui: hardware_serial,\n                msg_counter: counter,\n                n: 'soil_temperature',\n                u: 'Fah',\n                //v: temp_f.toFixed(2),\n                v: Number(temp_f.toFixed(2)),\n            },{\n                app_id: app_id,\n                device_id: dev_id,\n                event_name: 'soil_temperature'\n            }],}];\n            node.send(influxMsg);\n        } else {\n            if (events[i].measurementId === 4103 ) {\n            influxMsg = [{\n                measurement: 'soil_moisture',\n                payload: [{\n                dev_id: dev_id,\n                dev_eui: hardware_serial,\n                msg_counter: counter,\n                n: 'soil_moisture',\n                u: 'Moist',\n                v: events[i].measurementValue,\n            },{\n                app_id: app_id,\n                device_id: dev_id,\n                event_name: 'soil_moisture'\n            }],}];\n            node.send(influxMsg);\n        } else {\n            if (events[i].measurementId === 4099 ) {\n            influxMsg = [{\n                measurement: 'lux',\n                payload: [{\n                dev_id: dev_id,\n                dev_eui: hardware_serial,\n                msg_counter: counter,\n                n: 'lux',\n                u: 'lux',\n                v: events[i].measurementValue,\n            },{\n                app_id: app_id,\n                device_id: dev_id,\n                event_name: 'lux'\n            }],}];\n            node.send(influxMsg);\n        }}}\n    } else if (typeof events[i].battery !== 'undefined') {\n        influxMsg = [{\n            measurement: 'battery_voltage',\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: 'battery_voltage',\n            u: 'V',\n            v: events[i].battery,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: 'battery_voltage'\n        }],}];\n        node.send(influxMsg);\n    } else if (typeof events[i].interval !== 'undefined') {\n        influxMsg = [{\n            measurement: 'reporting_interval',\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: 'reporting_interval',\n            u: 'SEC',\n            v: events[i].interval,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: 'reporting_interval'\n        }],}];\n        node.send(influxMsg);\n    } else {\n        influxMsg = [{\n            measurement: 'unknown',\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: 'unknown',\n            u: 'unknown',\n            v: events[i].measurementValue,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: 'unknown'\n        }],}];\n        node.send(influxMsg);\n      \n\n    }\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1700,
        "wires": [
            [
                "e5e7fbb22027c3b6"
            ]
        ]
    },
    {
        "id": "e5e7fbb22027c3b6",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 1700,
        "wires": []
    },
    {
        "id": "98cb33fed8346b55",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 1640,
        "wires": []
    },
    {
        "id": "a25f330c2c765f5a",
        "type": "function",
        "z": "e851f138fbd198fe",
        "name": "Dragino Msg",
        "func": "let battery = msg.payload.uplink_message.decoded_payload.Bat;\nlet hardware_flag = msg.payload.uplink_message.decoded_payload.Hardware_flag;\nlet interrupt_flag = msg.payload.uplink_message.decoded_payload.Interrupt_flag;\nlet sensor_flag = msg.payload.uplink_message.decoded_payload.Interrupt_flag;\nlet tempc_ds18b20 = msg.payload.uplink_message.decoded_payload.TempC_DS18B20;\nlet conduct_soil = msg.payload.uplink_message.decoded_payload.conduct_SOIL;\nlet temp_soil = parseInt(msg.payload.uplink_message.decoded_payload.temp_SOIL);\nlet water_soil = parseFloat(msg.payload.uplink_message.decoded_payload.water_SOIL);\nlet hardware_serial = msg.payload.end_device_ids.dev_eui;\nlet counter = msg.payload.uplink_message.f_cnt;\nlet dev_id = msg.device_name;\nlet app_id = msg.payload.end_device_ids.application_ids.application_id;\n\nbatteryMsg = [{\n    measurement: 'battery_voltage',\n    payload: [{\n        dev_id: dev_id,\n        dev_eui: hardware_serial,\n        msg_counter: counter,\n        n: 'battery_voltage',\n        u: 'V',\n        v: battery,\n    },{\n        app_id: app_id,\n        device_id: dev_id,\n        event_name: 'battery_voltage'\n}],}];\n\nsoilTempMsg = [{\n    measurement: 'soil_temperature',\n    payload: [{\n        dev_id: dev_id,\n        dev_eui: hardware_serial,\n        msg_counter: counter,\n        n: 'soil_temperature',\n        u: 'Fah',\n        v: temp_soil * 9 / 5 + 32,\n    },{\n        app_id: app_id,\n        device_id: dev_id,\n        event_name: 'soil_temperature'\n}],}];\n\nsoilConductMsg = [{\n    measurement: 'soil_conductivity',\n    payload: [{\n        dev_id: dev_id,\n        dev_eui: hardware_serial,\n        msg_counter: counter,\n        n: 'soil_conductivity',\n        u: '°uS/cm',\n        v: conduct_soil,\n    },{\n        app_id: app_id,\n        device_id: dev_id,\n        event_name: 'soil_conductivity'\n}],}];\n\nsoilMoistureMsg = [{\n    measurement: 'soil_moisture',\n    payload: [{\n        dev_id: dev_id,\n        dev_eui: hardware_serial,\n        msg_counter: counter,\n        n: 'soil_moisture',\n        u: '%',\n        v: water_soil,\n    },{\n        app_id: app_id,\n        device_id: dev_id,\n        event_name: 'soil_moisture'\n}],}];\n\nreturn [batteryMsg, soilTempMsg, soilConductMsg, soilMoistureMsg];\n",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1260,
        "wires": [
            [
                "6e40d9f14980d493",
                "121b57f67a65f74f"
            ],
            [
                "6e40d9f14980d493",
                "121b57f67a65f74f"
            ],
            [
                "6e40d9f14980d493",
                "121b57f67a65f74f"
            ],
            [
                "6e40d9f14980d493",
                "121b57f67a65f74f"
            ]
        ]
    },
    {
        "id": "121b57f67a65f74f",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "dragino",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 876,
        "y": 1203,
        "wires": []
    },
    {
        "id": "5acf7e9b0380317c",
        "type": "mqtt in",
        "z": "e851f138fbd198fe",
        "name": "",
        "topic": "TTN/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ea745cefbcdbc96f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 380,
        "wires": [
            [
                "f0d7218cd00d391c"
            ]
        ]
    },
    {
        "id": "f0d7218cd00d391c",
        "type": "switch",
        "z": "e851f138fbd198fe",
        "name": "translator",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "TTN/dragino",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TTN/senseCap",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TTN/radioBridge",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TTN/multiTech",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 380,
        "y": 380,
        "wires": [
            [
                "f659fd4290c21a88"
            ],
            [
                "be86d71309237c75"
            ],
            [
                "61280ebd76c6546b"
            ],
            [
                "79e05ef6e7272571"
            ],
            [
                "5a0e57087e3150d8"
            ]
        ]
    },
    {
        "id": "f659fd4290c21a88",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "TTNdraginoOut",
        "mode": "link",
        "links": [
            "d11af781a2800808"
        ],
        "x": 645,
        "y": 280,
        "wires": []
    },
    {
        "id": "d11af781a2800808",
        "type": "link in",
        "z": "e851f138fbd198fe",
        "name": "dragino",
        "links": [
            "f659fd4290c21a88"
        ],
        "x": 155,
        "y": 1260,
        "wires": [
            [
                "d02558043be717f3"
            ]
        ]
    },
    {
        "id": "be86d71309237c75",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "TTN/senseCap",
        "mode": "link",
        "links": [
            "ed25ad1929a91f84"
        ],
        "x": 645,
        "y": 320,
        "wires": []
    },
    {
        "id": "61280ebd76c6546b",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "TTN/radioBridge",
        "mode": "link",
        "links": [
            "407725419c82937a"
        ],
        "x": 645,
        "y": 360,
        "wires": []
    },
    {
        "id": "79e05ef6e7272571",
        "type": "link out",
        "z": "e851f138fbd198fe",
        "name": "TTN/multiTech",
        "mode": "link",
        "links": [
            "dd23fa2948974556"
        ],
        "x": 645,
        "y": 400,
        "wires": []
    },
    {
        "id": "5a0e57087e3150d8",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "TTN Uncaught",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 460,
        "wires": []
    },
    {
        "id": "ed25ad1929a91f84",
        "type": "link in",
        "z": "e851f138fbd198fe",
        "name": "senseCap",
        "links": [
            "be86d71309237c75"
        ],
        "x": 165,
        "y": 1460,
        "wires": [
            [
                "91b54c5a6e9f7916"
            ]
        ]
    },
    {
        "id": "407725419c82937a",
        "type": "link in",
        "z": "e851f138fbd198fe",
        "name": "radioBridge",
        "links": [
            "61280ebd76c6546b"
        ],
        "x": 155,
        "y": 1000,
        "wires": [
            [
                "026a9c8085a7862c"
            ]
        ]
    },
    {
        "id": "dd23fa2948974556",
        "type": "link in",
        "z": "e851f138fbd198fe",
        "name": "multiTech",
        "links": [
            "79e05ef6e7272571"
        ],
        "x": 175,
        "y": 2260,
        "wires": [
            [
                "5e72f91f649fedfa"
            ]
        ]
    },
    {
        "id": "ca603d357a1edf87",
        "type": "subflow:2b79d1365169f919",
        "z": "e851f138fbd198fe",
        "name": "",
        "x": 1130,
        "y": 380,
        "wires": [
            [
                "54c854068006d5c1"
            ],
            [
                "6ac2f7867f706c18"
            ],
            [
                "5ae7f251a44a38e5"
            ]
        ]
    },
    {
        "id": "6ac2f7867f706c18",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "subflow 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 380,
        "wires": []
    },
    {
        "id": "5ae7f251a44a38e5",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "subflow 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 440,
        "wires": []
    },
    {
        "id": "54c854068006d5c1",
        "type": "debug",
        "z": "e851f138fbd198fe",
        "name": "subflow 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 320,
        "wires": []
    },
    {
        "id": "0d0b8624ab777c60",
        "type": "comment",
        "z": "e851f138fbd198fe",
        "name": "TTNv3 Inbound from GCP",
        "info": "",
        "x": 210,
        "y": 60,
        "wires": []
    },
    {
        "id": "4081a840.16fb98",
        "type": "server-events",
        "z": "abf038f.43da5c8",
        "name": "",
        "server": "5010ad6c.df5ca4",
        "version": 2,
        "eventType": "",
        "exposeToHomeAssistant": false,
        "eventData": "",
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "waitForRunning": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            },
            {
                "property": "event_type",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            }
        ],
        "x": 160,
        "y": 160,
        "wires": [
            [
                "4190eae8.4d2674"
            ]
        ]
    },
    {
        "id": "4190eae8.4d2674",
        "type": "switch",
        "z": "abf038f.43da5c8",
        "name": "",
        "property": "payload.entity_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "arris",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 160,
        "wires": [
            [],
            [
                "d80df6ac6bc0499b"
            ]
        ]
    },
    {
        "id": "f40be16e.e1fea",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "events_all",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 160,
        "wires": []
    },
    {
        "id": "ce9549c0.9f9bb8",
        "type": "poll-state",
        "z": "abf038f.43da5c8",
        "name": "",
        "server": "5010ad6c.df5ca4",
        "version": 2,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "updateinterval": "12",
        "updateIntervalType": "num",
        "updateIntervalUnits": "hours",
        "outputinitially": false,
        "outputonchanged": true,
        "entity_id": "sensor.bdb_steps",
        "state_type": "str",
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "x": 220,
        "y": 400,
        "wires": [
            [
                "2197074d.3fcc48"
            ]
        ]
    },
    {
        "id": "5b38785a.a44098",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 340,
        "wires": []
    },
    {
        "id": "c0421365.4231b",
        "type": "api-current-state",
        "z": "abf038f.43da5c8",
        "name": "",
        "server": "5010ad6c.df5ca4",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 460,
        "y": 600,
        "wires": [
            [
                "90582645.c45d08"
            ]
        ]
    },
    {
        "id": "85485c33.afc0e",
        "type": "inject",
        "z": "abf038f.43da5c8",
        "name": "",
        "props": [
            {
                "p": "payload.entity_id",
                "v": "zwave.diningroom_dimmer_switch",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 260,
        "y": 600,
        "wires": [
            [
                "c0421365.4231b"
            ]
        ]
    },
    {
        "id": "90582645.c45d08",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 600,
        "wires": []
    },
    {
        "id": "2197074d.3fcc48",
        "type": "function",
        "z": "abf038f.43da5c8",
        "name": "Format Measurement",
        "func": "let entity_id = msg.data.entity_id;\nlet state = msg.data.state;\nlet unit_of_measure = msg.data.attributes.unit_of_measurement;\nlet friendly_name = msg.data.attributes.friendly_name;\nlet icon = msg.data.attributes.icon;\n\ninfluxMsg = [{\n    measurement: unit_of_measure,\n    payload: [{\n    n: friendly_name,\n    u: unit_of_measure,\n    v: Number(state),\n},{\n    entity_id: entity_id,\n    event_name: unit_of_measure\n}],}];\n\nreturn(influxMsg);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 400,
        "wires": [
            [
                "5b38785a.a44098",
                "b0fefa1b.c9ef88"
            ]
        ]
    },
    {
        "id": "b0fefa1b.c9ef88",
        "type": "link out",
        "z": "abf038f.43da5c8",
        "name": "stepsOut",
        "links": [
            "284ffe0f.351742"
        ],
        "x": 635,
        "y": 400,
        "wires": []
    },
    {
        "id": "33b5856b.1f57ba",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 360,
        "wires": []
    },
    {
        "id": "358994d6.45e81c",
        "type": "api-call-service",
        "z": "abf038f.43da5c8",
        "name": "Front Porch",
        "server": "5010ad6c.df5ca4",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "{{payload}}",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.front_porch"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1350,
        "y": 360,
        "wires": [
            [
                "33b5856b.1f57ba"
            ]
        ]
    },
    {
        "id": "18c2a428.dbffac",
        "type": "inject",
        "z": "abf038f.43da5c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "turn_off",
        "payloadType": "str",
        "x": 1150,
        "y": 360,
        "wires": [
            [
                "358994d6.45e81c"
            ]
        ]
    },
    {
        "id": "1a8c1e18.6456e2",
        "type": "bigtimer",
        "z": "abf038f.43da5c8",
        "outtopic": "",
        "outpayload1": "turn_on",
        "outpayload2": "turn_off",
        "name": "Big Timer",
        "comment": "",
        "lat": "45° 05' 38.87\" N",
        "lon": "-93° 21' 22.82\" W",
        "starttime": 5001,
        "endtime": 1425,
        "starttime2": "5000",
        "endtime2": "510",
        "startoff": 0,
        "endoff": 0,
        "startoff2": 0,
        "endoff2": 0,
        "offs": "-6",
        "outtext1": "turn_on",
        "outtext2": "turn_off",
        "timeout": 1440,
        "sun": true,
        "mon": true,
        "tue": true,
        "wed": true,
        "thu": true,
        "fri": true,
        "sat": true,
        "jan": true,
        "feb": true,
        "mar": true,
        "apr": true,
        "may": true,
        "jun": true,
        "jul": true,
        "aug": true,
        "sep": true,
        "oct": true,
        "nov": true,
        "dec": true,
        "day1": 0,
        "month1": 0,
        "day2": 0,
        "month2": 0,
        "day3": 0,
        "month3": 0,
        "day4": 0,
        "month4": 0,
        "day5": 0,
        "month5": 0,
        "day6": 0,
        "month6": 0,
        "day7": 0,
        "month7": 0,
        "day8": 0,
        "month8": 0,
        "day9": 0,
        "month9": 0,
        "day10": 0,
        "month10": 0,
        "day11": 0,
        "month11": 0,
        "day12": 0,
        "month12": 0,
        "d1": 0,
        "w1": 0,
        "d2": 0,
        "w2": 0,
        "d3": 0,
        "w3": 0,
        "d4": 0,
        "w4": 0,
        "d5": 0,
        "w5": 0,
        "d6": 0,
        "w6": 0,
        "xday1": 0,
        "xmonth1": 0,
        "xday2": 0,
        "xmonth2": 0,
        "xday3": 0,
        "xmonth3": 0,
        "xday4": 0,
        "xmonth4": 0,
        "xday5": 0,
        "xmonth5": 0,
        "xday6": 0,
        "xmonth6": 0,
        "xday7": 0,
        "xmonth7": 0,
        "xday8": 0,
        "xmonth8": 0,
        "xday9": 0,
        "xmonth9": 0,
        "xday10": 0,
        "xmonth10": 0,
        "xday11": 0,
        "xmonth11": 0,
        "xday12": 0,
        "xmonth12": 0,
        "xd1": 0,
        "xw1": 0,
        "xd2": 0,
        "xw2": 0,
        "xd3": 0,
        "xw3": 0,
        "xd4": 0,
        "xw4": 0,
        "xd5": 0,
        "xw5": 0,
        "xd6": 0,
        "xw6": 0,
        "suspend": false,
        "random": false,
        "randon1": false,
        "randoff1": false,
        "randon2": false,
        "randoff2": false,
        "repeat": true,
        "atstart": true,
        "odd": false,
        "even": false,
        "x": 1140,
        "y": 420,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "748d9ccf.e4c594",
        "type": "inject",
        "z": "abf038f.43da5c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "turn_on",
        "payloadType": "str",
        "x": 1150,
        "y": 300,
        "wires": [
            [
                "358994d6.45e81c"
            ]
        ]
    },
    {
        "id": "4aa2b8c1.2148a8",
        "type": "json",
        "z": "abf038f.43da5c8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1130,
        "y": 1180,
        "wires": [
            [
                "495bcfbf41b13688"
            ]
        ]
    },
    {
        "id": "25118149.16b94e",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 1260,
        "wires": []
    },
    {
        "id": "ff38493bee40bb6d",
        "type": "function",
        "z": "abf038f.43da5c8",
        "name": "kWh InfluxDB",
        "func": "let measurement = 'kWh';\nlet label = msg.payload.label;\nlet node_name = msg.payload.nodeName;\nlet node_location = msg.payload.nodeLocation;\nlet value = msg.payload.value;\nlet unit = msg.payload.unit;\nlet property_key = msg.payload.propertyKey;\nlet command_class = msg.payload.commandClassName;\n\ninfluxMsg = [{\n    measurement: measurement,\n    payload: [{\n    node_name: node_name,\n    node_location: node_location,\n    msg_counter: property_key,\n    n: label,\n    u: unit,\n    v: value,\n},{\n    command_class: command_class,\n    node: node_name,\n    event_name: label\n}],}];\n\nreturn influxMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 1140,
        "wires": [
            [
                "5f56447dba52498e"
            ]
        ]
    },
    {
        "id": "0e260be5f4121378",
        "type": "switch",
        "z": "abf038f.43da5c8",
        "name": "Electric",
        "property": "payload.propertyKeyName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Electric_kWh_Consumed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Electric_W_Consumed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Electric_A_Consumed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Electric_V_Consumed",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1440,
        "y": 1180,
        "wires": [
            [
                "ff38493bee40bb6d"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "5f56447dba52498e",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "Electric_kWh_Consumed",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 1140,
        "wires": []
    },
    {
        "id": "495bcfbf41b13688",
        "type": "switch",
        "z": "abf038f.43da5c8",
        "name": "Meters",
        "property": "payload.commandClassName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Meter",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1290,
        "y": 1180,
        "wires": [
            [
                "0e260be5f4121378",
                "d4973c8eb18cef3a"
            ],
            [
                "25118149.16b94e"
            ]
        ]
    },
    {
        "id": "d4973c8eb18cef3a",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f120698c6e114e4f",
        "type": "api-current-state",
        "z": "abf038f.43da5c8",
        "name": "Mech Room RH",
        "server": "5010ad6c.df5ca4",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.nodeid_10_humidity_air",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 290,
        "y": 780,
        "wires": [
            [
                "93a7109d70da5476"
            ]
        ]
    },
    {
        "id": "d27d8aa741558dcd",
        "type": "inject",
        "z": "abf038f.43da5c8",
        "name": "",
        "props": [
            {
                "p": "payload.entity_id",
                "v": "sensor.nodeid_10_temperature_air",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 780,
        "wires": [
            [
                "f120698c6e114e4f"
            ]
        ]
    },
    {
        "id": "93a7109d70da5476",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 780,
        "wires": []
    },
    {
        "id": "d80df6ac6bc0499b",
        "type": "switch",
        "z": "abf038f.43da5c8",
        "name": "",
        "property": "payload.entity_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sensor.greatroom_diverlight_electric_v_value",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 160,
        "wires": [
            [],
            [
                "f40be16e.e1fea",
                "328a53a82b51ab4b"
            ]
        ]
    },
    {
        "id": "328a53a82b51ab4b",
        "type": "mqtt out",
        "z": "abf038f.43da5c8",
        "name": "",
        "topic": "homeAssistant",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b005dcb8a9e6bb86",
        "x": 730,
        "y": 220,
        "wires": []
    },
    {
        "id": "b1ab0e146ae096fe",
        "type": "mqtt in",
        "z": "abf038f.43da5c8",
        "name": "",
        "topic": "zwave/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "39c85520361d1f91",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 1260,
        "wires": [
            [
                "d50481635cd31d07"
            ]
        ]
    },
    {
        "id": "d50481635cd31d07",
        "type": "json",
        "z": "abf038f.43da5c8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 490,
        "y": 1260,
        "wires": [
            [
                "4d96bfcd5c092bc1"
            ]
        ]
    },
    {
        "id": "4d96bfcd5c092bc1",
        "type": "switch",
        "z": "abf038f.43da5c8",
        "name": "entity_id switch",
        "property": "payload.entity_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sensor.greatroom_diverlight_electric_w_value",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 680,
        "y": 1260,
        "wires": [
            [
                "d4f64d290fb92eb1"
            ],
            [
                "87322223916f5c01"
            ]
        ]
    },
    {
        "id": "acdd85bfd20ef1c5",
        "type": "inject",
        "z": "abf038f.43da5c8",
        "name": "low battery",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"topic\":\"zwave/greatRoom/multisensor/128/0/isLow\",\"payload\":{\"id\":\"19-128-0-isLow\",\"nodeId\":19,\"commandClass\":128,\"commandClassName\":\"Battery\",\"endpoint\":0,\"property\":\"isLow\",\"propertyName\":\"isLow\",\"type\":\"boolean\",\"readable\":true,\"writeable\":false,\"label\":\"Low battery level\",\"stateless\":false,\"commandClassVersion\":1,\"list\":false,\"value\":false,\"lastUpdate\":1651891689564,\"nodeName\":\"multisensor\",\"nodeLocation\":\"greatRoom\"},\"qos\":1,\"retain\":false,\"_msgid\":\"e7bf9596917ccdc2\"}",
        "payloadType": "json",
        "x": 460,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "d4f64d290fb92eb1",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "diver_light",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1220,
        "wires": []
    },
    {
        "id": "87322223916f5c01",
        "type": "debug",
        "z": "abf038f.43da5c8",
        "name": "Otherwise",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 1300,
        "wires": []
    },
    {
        "id": "eb7a216f.8a0d4",
        "type": "http request",
        "z": "2500c006.91d75",
        "name": "weatherapi",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 910,
        "y": 560,
        "wires": [
            [
                "32022405.d9dadc",
                "85175233.74ec2",
                "8a1b089d.50d3c8",
                "c9f8b959.a22ee8",
                "153bb17.b0aac4f",
                "96283cb6.f2955"
            ]
        ]
    },
    {
        "id": "9eefeb5d.691108",
        "type": "function",
        "z": "2500c006.91d75",
        "name": "Weather - Home",
        "func": "let darkSkyKey = env.get(\"DARKSKYAPIKEY\");\nlet latLong = env.get(\"LATLONG\");\n\n\nmsg.url = \"https://api.darksky.net/forecast/\"+darkSkyKey+\"/\"+latLong+\"?exclude=alerts,flags\";\nmsg.method = \"GET\";\nmsg.headers = { \"Content-Type\":\"application/json;charset=UTF-8\"};\n \n \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 560,
        "wires": [
            [
                "ca59e24c7c56bb51"
            ]
        ]
    },
    {
        "id": "ae6839b8.4d2a98",
        "type": "inject",
        "z": "2500c006.91d75",
        "name": "Every Hour",
        "props": [
            {
                "p": "payload",
                "v": "45.1416667,092.3747222",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "weatherapi",
                "vt": "string"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "topic": "weatherapi",
        "payload": "45.1416667,092.3747222",
        "payloadType": "str",
        "x": 330.5555648803711,
        "y": 561.1112880706787,
        "wires": [
            [
                "9eefeb5d.691108"
            ]
        ]
    },
    {
        "id": "32022405.d9dadc",
        "type": "function",
        "z": "2500c006.91d75",
        "name": "Weather Icons",
        "func": "summaryicon = msg.payload.currently.icon;\nminuteicon = msg.payload.minutely.icon;\nhouricon = msg.payload.hourly.icon;\ndailyicon = msg.payload.daily.icon;\n\n//Summary Icons\n\nvar summaryMSG={ \n    payload: summaryicon\n};\nvar minuteMSG={\n    payload: minuteicon\n};\nvar hourMSG={\n    payload: houricon\n};\nvar dailyMSG={\n    payload: dailyicon\n};\n\nreturn [ [ summaryMSG, minuteMSG, hourMSG, dailyMSG ] ];\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1200,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "85175233.74ec2",
        "type": "function",
        "z": "2500c006.91d75",
        "name": "Weather Summary",
        "func": "summary = msg.payload.currently.summary;\nminute = msg.payload.minutely.summary;\nhour = msg.payload.hourly.summary;\ndaily = msg.payload.daily.summary;\n\n//Descriptions\n\n\nvar weatherMSG={ \n    payload: {'Currently': + summary}\n};\n\nreturn weatherMSG;\n\n\n/*\n    payload: {'Currently': +summary, 'Hourly': +hour, 'Daily': +daily}\n\n\nvar summarydescMSG={ \n    payload: summary\n};\n\nvar minutedescMSG={\n    payload: minute\n};\nvar hourdescMSG={\n    payload: hour\n};\nvar dailydescMSG={\n    payload: daily\n};\n\nreturn [ [summarydescMSG, minutedescMSG, hourdescMSG, dailydescMSG ] ];\n*/\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 747,
        "wires": [
            []
        ]
    },
    {
        "id": "41614fed.a7639",
        "type": "comment",
        "z": "2500c006.91d75",
        "name": "Broadcast Hourly Weather Status",
        "info": "",
        "x": 364.72228240966797,
        "y": 483.8890314102173,
        "wires": []
    },
    {
        "id": "8a1b089d.50d3c8",
        "type": "function",
        "z": "2500c006.91d75",
        "name": "Sunset",
        "func": "if (msg.payload.currently.summary.length >1){ \nvar temp = msg.payload.currently.temperature;\nvar feelslike = msg.payload.currently.apparentTemperature;\nvar windspeed = msg.payload.currently.windSpeed;\nvar precipProbability = msg.payload.currently.precipProbability;\nvar precipType = msg.payload.currently.precipType;\nvar summary = msg.payload.currently.summary;\nvar sunset = msg.payload.daily.data.sunsetTime;\nvar dailyicon = msg.payload.daily.data;\nmsg.payload = {};\nmsg.payload.temp= temp;\nmsg.payload.feelslike = feelslike;\nmsg.payload.sunset = sunset;\n\nmsg2 = {};\n    msg2.payload = (\"Fuck\");\n\nreturn [msg, msg2];\n}\n\n/*\n\nif (msg.payload.currently.summary.length >1){ \n    msg.payload ={\"weather\":[{\"id\": \"summary\", \"value\": summary}]};\n    return msg;\n}\nreturn \"bad.\";\n\n\n\n\n//Descriptions\nvar tempMSG={ \n    payload: temp\n};\nvar feelslikeMSG={\n    payload: feelslike\n};\nvar windspeedMSG={\n    payload: windspeed\n};\nvar precipProbabilityMSG={\n    payload: precipProbability\n};\nvar precipTypeMSG={\n    payload: precipType\n};\n\n\nreturn [ [tempMSG, feelslikeMSG, windspeedMSG, precipProbabilityMSG, precipTypeMSG ] ];\n*/\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1180,
        "y": 787,
        "wires": [
            []
        ]
    },
    {
        "id": "4d646d0c.ef3b54",
        "type": "debug",
        "z": "2500c006.91d75",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1331.428581237793,
        "y": 339.99999952316284,
        "wires": []
    },
    {
        "id": "cb373c18.c53d",
        "type": "debug",
        "z": "2500c006.91d75",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1341.4443969726562,
        "y": 643.9999542236328,
        "wires": []
    },
    {
        "id": "5eb0c3b2.68f2ac",
        "type": "ui_chart",
        "z": "2500c006.91d75",
        "name": "Wind Speed",
        "group": "b841d93f.1fc228",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Wind Speed",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "500",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "outputs": 2,
        "x": 1361.4443969726562,
        "y": 523.9999542236328,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "796199da.52f7a8",
        "type": "ui_chart",
        "z": "2500c006.91d75",
        "name": "OAT Chart",
        "group": "61d8381c.d631b8",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "ymin": "",
        "ymax": "",
        "removeOlder": "7",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "outputs": 2,
        "x": 1361.4443969726562,
        "y": 483.9999542236328,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "26bd2003.b2161",
        "type": "ui_text",
        "z": "2500c006.91d75",
        "group": "61d8381c.d631b8",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "OAT Text",
        "label": "Current OAT",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 1351.4443969726562,
        "y": 443.9999542236328,
        "wires": []
    },
    {
        "id": "43f3b839.1a6848",
        "type": "ui_text",
        "z": "2500c006.91d75",
        "group": "b841d93f.1fc228",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "OAT Text",
        "label": "Current Wind Speed",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 1351.4443969726562,
        "y": 563.9999542236328,
        "wires": []
    },
    {
        "id": "c9f8b959.a22ee8",
        "type": "debug",
        "z": "2500c006.91d75",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1141.4443969726562,
        "y": 503.9999542236328,
        "wires": []
    },
    {
        "id": "153bb17.b0aac4f",
        "type": "function",
        "z": "2500c006.91d75",
        "name": "",
        "func": "//BDB Code to consume DarkSky Weather Reports\ntime = msg.payload.currently.time;\nsummary = msg.payload.currently.summary;\nicon = msg.payload.currently.icon;\nnearestStormDistance = msg.payload.currently.nearestStormDistance;\nnearestStormBearing = msg.payload.currently.nearestStormBearing;\nprecipIntensity = msg.payload.currently.precipIntensity;\nprecipProbability = msg.payload.currently.precipProbability;\ntemperature = msg.payload.currently.temperature;\napparentTemperature = msg.payload.currently.apparentTemperature;\ndewPoint = msg.payload.currently.dewPoint;\nhumidity = msg.payload.currently.humidity;\npressure = msg.payload.currently.pressure;\nwindSpeed = msg.payload.currently.windSpeed;\nwindGust = msg.payload.currently.windGust;\nwindBearing = msg.payload.currently.windBearing;\ncloudCover = msg.payload.currently.cloudCover;\nuvIndex = msg.payload.currently.uvIndex;\nvisibility = msg.payload.currently.visibility;\nozone = msg.payload.currently.ozone;\nsunSet = msg.payload.daily.data.sunsetTime;\n\n\n//Time Stamp Formatting\nvar now     = new Date(); \nvar year    = now.getFullYear();\nvar month   = now.getMonth()+1; \nvar day     = now.getDate();\nvar hour    = now.getHours();\nvar minute  = now.getMinutes();\nvar second  = now.getSeconds(); \nif(month.toString().length == 1) {\nvar month = '0'+month;\n}\nif(day.toString().length == 1) {\nvar day = '0'+day;\n}   \nif(hour.toString().length == 1) {\nvar hour = '0'+hour;\n}\nif(minute.toString().length == 1) {\nvar minute = '0'+minute;\n}\nif(second.toString().length == 1) {\nvar second = '0'+second;\n}   \ntimestamp = year+'-'+month+'-'+day+' '+hour+':'+minute+':'+second;\n\nvar darkSkyMsg = {\n    topic: \"darkSky\", \n    payload: { \n    summary: summary, \n    icon: icon, \n    nearestStormDistance: nearestStormDistance, \n    nearestStormBearing: nearestStormBearing,\n    precipIntensity: precipIntensity,\n    temperature: temperature,\n    apparentTemperature: apparentTemperature,\n    dewPoint: dewPoint,\n    humidity: humidity,\n    pressure: pressure,\n    windSpeed: windSpeed,\n    windGust: windGust,\n    windBearing: windBearing,\n    cloudCover: cloudCover,\n    sunSet: sunSet,\n    uvIndex: uvIndex,\n    visibility: visibility,\n    ozone: ozone,\n    time: time,\n    timestamp: timestamp}\n};\n\nvar tempMsg = {\n    topic: \"darkSky/temp\",\n    payload: temperature,\n    temperature: temperature,\n    apparentTemperature: apparentTemperature,\n    dewPoint: dewPoint,\n    humidity: humidity,\n    timestamp: timestamp\n};\n\nvar windMsg = {\n    topic: \"darkSky/wind\",\n    payload: windSpeed,\n    windSpeed: windSpeed,\n    windGust: windGust,\n    windBearing: windBearing,\n    timestamp: timestamp\n};\n\nvar stormMsg = {\n    topic: \"darkSky/storm\",\n    payload: nearestStormDistance,\n    nearestStormDistance: nearestStormDistance, \n    nearestStormBearing: nearestStormBearing,\n    precipIntensity: precipIntensity,\n    cloudCover: cloudCover,\n    //visibility: visbility,\n};\n\nreturn [ [darkSkyMsg], [tempMsg], [windMsg], [stormMsg]];\n",
        "outputs": "4",
        "noerr": 0,
        "x": 1151.4443969726562,
        "y": 423.9999542236328,
        "wires": [
            [
                "4d646d0c.ef3b54",
                "fcdc5308.3a81b"
            ],
            [
                "796199da.52f7a8",
                "26bd2003.b2161"
            ],
            [
                "5eb0c3b2.68f2ac",
                "43f3b839.1a6848"
            ],
            [
                "cb373c18.c53d",
                "79947b63.04a674"
            ]
        ]
    },
    {
        "id": "79947b63.04a674",
        "type": "ui_text",
        "z": "2500c006.91d75",
        "group": "1687319f.26f19e",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "nearestStormDistance",
        "label": "Storm Distance",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 1391.4443969726562,
        "y": 603.9999542236328,
        "wires": []
    },
    {
        "id": "fcdc5308.3a81b",
        "type": "mqtt out",
        "z": "2500c006.91d75",
        "name": "",
        "topic": "darksky",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "39c85520361d1f91",
        "x": 1340,
        "y": 280,
        "wires": []
    },
    {
        "id": "96283cb6.f2955",
        "type": "link out",
        "z": "2500c006.91d75",
        "name": "weatherOut",
        "links": [
            "ba2485bb.db73f8"
        ],
        "x": 1106.4443969726562,
        "y": 343.9999542236328,
        "wires": []
    },
    {
        "id": "ca59e24c7c56bb51",
        "type": "http request",
        "z": "2500c006.91d75",
        "name": "weatherapi",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 722.0000076293945,
        "y": 559.5556516647339,
        "wires": [
            [
                "eb7a216f.8a0d4"
            ]
        ]
    },
    {
        "id": "b30ec6d3b9997c05",
        "type": "link in",
        "z": "aa130715069a6eeb",
        "name": "radioBridgePeridoicIn",
        "links": [
            "ad01381f10d5e3b7"
        ],
        "x": 135,
        "y": 180,
        "wires": [
            [
                "e29fe4f6bcfaa0b6",
                "745638fabc4c6a65"
            ]
        ]
    },
    {
        "id": "e29fe4f6bcfaa0b6",
        "type": "influxdb out",
        "z": "aa130715069a6eeb",
        "influxdb": "a45e499a8d2a59db",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "edgewoods",
        "bucket": "LoRaWAN",
        "x": 360,
        "y": 240,
        "wires": []
    },
    {
        "id": "745638fabc4c6a65",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 120,
        "wires": []
    },
    {
        "id": "571d727121b45daa",
        "type": "link in",
        "z": "aa130715069a6eeb",
        "name": "draginoIn",
        "links": [
            "6e40d9f14980d493"
        ],
        "x": 135,
        "y": 280,
        "wires": [
            [
                "e29fe4f6bcfaa0b6"
            ]
        ]
    },
    {
        "id": "d3561ca26614772f",
        "type": "link in",
        "z": "aa130715069a6eeb",
        "name": "senseCapIn",
        "links": [
            "b53af92376739f8a"
        ],
        "x": 135,
        "y": 380,
        "wires": [
            [
                "e29fe4f6bcfaa0b6"
            ]
        ]
    },
    {
        "id": "284ffe0f.351742",
        "type": "link in",
        "z": "aa130715069a6eeb",
        "name": "stepsInflux",
        "links": [
            "b0fefa1b.c9ef88"
        ],
        "x": 155,
        "y": 800,
        "wires": [
            [
                "d0f6a3de.7a94e"
            ]
        ]
    },
    {
        "id": "d0f6a3de.7a94e",
        "type": "influxdb out",
        "z": "aa130715069a6eeb",
        "influxdb": "e81e7427.232dd8",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 440,
        "y": 800,
        "wires": []
    },
    {
        "id": "1e23db74.0064b5",
        "type": "comment",
        "z": "aa130715069a6eeb",
        "name": "Home Assistant",
        "info": "",
        "x": 200,
        "y": 660,
        "wires": []
    },
    {
        "id": "ba2485bb.db73f8",
        "type": "link in",
        "z": "aa130715069a6eeb",
        "name": "",
        "links": [
            "96283cb6.f2955"
        ],
        "x": 155,
        "y": 1320,
        "wires": [
            [
                "ab3fc863.2ea098",
                "76ba7b8f.482f64",
                "1ccd779d.946288"
            ]
        ]
    },
    {
        "id": "ca11ca63.add948",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 550,
        "y": 1160,
        "wires": []
    },
    {
        "id": "ab3fc863.2ea098",
        "type": "function",
        "z": "aa130715069a6eeb",
        "name": "apparentTemperature",
        "func": "let value = msg.payload.currently.apparentTemperature;\nvar label = \"apparentTemperature\";\n\nmsg.payload = [{\n    apparentTemperature: value\n},\n{\n    measurement: label\n}];\n\nmsg.measurement = label;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 1260,
        "wires": [
            [
                "bfe1e10d.a1b1e",
                "ca11ca63.add948"
            ]
        ]
    },
    {
        "id": "bfe1e10d.a1b1e",
        "type": "influxdb out",
        "z": "aa130715069a6eeb",
        "influxdb": "db11d248.010a3",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 640,
        "y": 1300,
        "wires": []
    },
    {
        "id": "76ba7b8f.482f64",
        "type": "function",
        "z": "aa130715069a6eeb",
        "name": "pressure",
        "func": "let value = msg.payload.currently.pressure;\nvar label = \"pressure\";\n\nmsg.payload = [{\n    pressure: value\n},\n{\n    measurement: label\n}];\n\nmsg.measurement = label;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 1320,
        "wires": [
            [
                "bfe1e10d.a1b1e"
            ]
        ]
    },
    {
        "id": "1ccd779d.946288",
        "type": "function",
        "z": "aa130715069a6eeb",
        "name": "windGust",
        "func": "let value = msg.payload.currently.windGust;\nvar label = \"pressure\";\n\nmsg.payload = [{\n    windGust: value\n},\n{\n    measurement: label\n}];\n\nmsg.measurement = label;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 1380,
        "wires": [
            [
                "bfe1e10d.a1b1e"
            ]
        ]
    },
    {
        "id": "6b0707e0.efcd68",
        "type": "mqtt in",
        "z": "aa130715069a6eeb",
        "name": "",
        "topic": "zwave/cov",
        "qos": "2",
        "datatype": "auto",
        "broker": "39c85520361d1f91",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 1420,
        "y": 200,
        "wires": [
            [
                "474ca5cb.de226c"
            ]
        ]
    },
    {
        "id": "474ca5cb.de226c",
        "type": "json",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1570,
        "y": 200,
        "wires": [
            [
                "559737f9.8a1c08"
            ]
        ]
    },
    {
        "id": "8d924bc9.491c98",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "measurement",
                "pt": "msg",
                "to": "msg.payload.label",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "payload.value",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.cmdclass",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.cmdidx",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.instance",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.currState",
                "pt": "msg",
                "to": "$number(payload.currState)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.oldState",
                "pt": "msg",
                "to": "$number(payload.oldState)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 300,
        "wires": [
            [
                "a6e2816d.3ae6c"
            ]
        ]
    },
    {
        "id": "246af166.50229e",
        "type": "influxdb out",
        "z": "aa130715069a6eeb",
        "influxdb": "f8ce23bb.23857",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "x": 2540,
        "y": 400,
        "wires": []
    },
    {
        "id": "559737f9.8a1c08",
        "type": "switch",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "payload.label",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Temperature",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Relative Humidity",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Battery Level",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Alarm Level",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Alarm Type",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Switch",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Level",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Luminance",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 1710,
        "y": 200,
        "wires": [
            [
                "7066abd4.acf854"
            ],
            [
                "45055a6a.ac42d4"
            ],
            [
                "a7055134.dac49"
            ],
            [
                "74c33191.47452"
            ],
            [
                "48e5d936.febaf8"
            ],
            [
                "2899bd7b.9f6a62"
            ],
            [
                "71902a79.2f2c64"
            ],
            [
                "142b2f01.dc76e1"
            ],
            [
                "ebf86302.a6c7c"
            ]
        ]
    },
    {
        "id": "45055a6a.ac42d4",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "RH",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "RH",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 80,
        "wires": [
            [
                "8d924bc9.491c98"
            ]
        ]
    },
    {
        "id": "a6e2816d.3ae6c",
        "type": "function",
        "z": "aa130715069a6eeb",
        "name": "Add Tag",
        "func": "nodeid = msg.payload.nodeid;\noldState = msg.payload.oldState;\ncurrState = msg.payload.currState;\n\n//Fix Alarm Type label\nlabel = msg.payload.label;\nunits = msg.payload.units;\nuuid = msg.payload.uuid;\n\n\nmsg.payload = [{\n    oldState: oldState,\n    currState: currState,\n    label: label,\n    units: units,\n    uuid: uuid\n},\n{\n    nodeid: nodeid\n}];\n\nmsg.measurement = label\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2240,
        "y": 300,
        "wires": [
            [
                "aa0beef4.b569e",
                "246af166.50229e"
            ]
        ]
    },
    {
        "id": "aa0beef4.b569e",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2370,
        "y": 260,
        "wires": []
    },
    {
        "id": "a7055134.dac49",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Battery",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "Battery",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1880,
        "y": 120,
        "wires": [
            [
                "8d924bc9.491c98"
            ]
        ]
    },
    {
        "id": "74c33191.47452",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Alarm",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "Alarm",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 160,
        "wires": [
            [
                "8d924bc9.491c98"
            ]
        ]
    },
    {
        "id": "48e5d936.febaf8",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Alarm",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "AlarmType",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 200,
        "wires": [
            [
                "8d924bc9.491c98"
            ]
        ]
    },
    {
        "id": "2a5d302d.cd2fe",
        "type": "comment",
        "z": "aa130715069a6eeb",
        "name": "Zwave Sensors",
        "info": "",
        "x": 1440,
        "y": 60,
        "wires": []
    },
    {
        "id": "ba459182.879bd",
        "type": "json",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1630,
        "y": 500,
        "wires": [
            [
                "b9a1f7b1.305908"
            ]
        ]
    },
    {
        "id": "2899bd7b.9f6a62",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Switch",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "Switch",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 240,
        "wires": [
            [
                "8d924bc9.491c98"
            ]
        ]
    },
    {
        "id": "494c87b7.d877c8",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "measurement",
                "pt": "msg",
                "to": "msg.payload.label",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "payload.help",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2140,
        "y": 500,
        "wires": [
            [
                "a63831ed.1d46"
            ]
        ]
    },
    {
        "id": "b9a1f7b1.305908",
        "type": "switch",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "payload.help",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Notification - Node Awake",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Notification - Node Asleep",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1770,
        "y": 500,
        "wires": [
            [
                "97c97ece.b123a"
            ],
            [
                "9cd0a165.d3ad7"
            ],
            []
        ]
    },
    {
        "id": "97c97ece.b123a",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Awake",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "NodeStatus",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.status",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload.value",
                "pt": "msg",
                "to": "Awake",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 480,
        "wires": [
            [
                "494c87b7.d877c8"
            ]
        ]
    },
    {
        "id": "9cd0a165.d3ad7",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Asleep",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "NodeStatus",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.status",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload.value",
                "pt": "msg",
                "to": "Asleep",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 520,
        "wires": [
            [
                "494c87b7.d877c8"
            ]
        ]
    },
    {
        "id": "cc89078f.553208",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2430,
        "y": 540,
        "wires": []
    },
    {
        "id": "a63831ed.1d46",
        "type": "function",
        "z": "aa130715069a6eeb",
        "name": "Add Tag",
        "func": "nodeid = msg.payload.nodeid;\nnotification = msg.payload.notification;\nlabel = msg.payload.label;\nuuid = msg.payload.uuid;\nstatus = msg.payload.status;\nvalue = msg.payload.value;\n\nmsg.payload = [{\n    status: status,\n    notification: notification,\n    label: label,\n    uuid: uuid\n},\n{\n    nodeid: nodeid,\n    value: value,\n\n}];\n\nmsg.measurement = label\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2300,
        "y": 500,
        "wires": [
            [
                "246af166.50229e",
                "cc89078f.553208"
            ]
        ]
    },
    {
        "id": "ebf86302.a6c7c",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1870,
        "y": 360,
        "wires": []
    },
    {
        "id": "71902a79.2f2c64",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Level",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "Level",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 280,
        "wires": [
            [
                "8d924bc9.491c98"
            ]
        ]
    },
    {
        "id": "7066abd4.acf854",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Temperature",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "Temperature",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1890,
        "y": 40,
        "wires": [
            [
                "8d924bc9.491c98"
            ]
        ]
    },
    {
        "id": "142b2f01.dc76e1",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "Lux",
        "rules": [
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "Lux",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 320,
        "wires": [
            [
                "8d924bc9.491c98"
            ]
        ]
    },
    {
        "id": "5027a0e.1ea556",
        "type": "mqtt in",
        "z": "aa130715069a6eeb",
        "name": "",
        "topic": "zwave/lux/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "39c85520361d1f91",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 1430,
        "y": 680,
        "wires": [
            [
                "fafc82d7.1ed05",
                "ab732724d64d1ea8"
            ]
        ]
    },
    {
        "id": "fafc82d7.1ed05",
        "type": "json",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1630,
        "y": 680,
        "wires": [
            [
                "e4c0e436.980568"
            ]
        ]
    },
    {
        "id": "e4c0e436.980568",
        "type": "switch",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "zwave/lux/main",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "zwave/lux/basement",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1770,
        "y": 680,
        "wires": [
            [
                "4c3b5bdf.fc41d4"
            ],
            [],
            []
        ]
    },
    {
        "id": "4c3b5bdf.fc41d4",
        "type": "change",
        "z": "aa130715069a6eeb",
        "name": "mainLux",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "mainLux",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 640,
        "wires": [
            [
                "441ee599.6387cc"
            ]
        ]
    },
    {
        "id": "441ee599.6387cc",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2090,
        "y": 640,
        "wires": []
    },
    {
        "id": "ab732724d64d1ea8",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "LUX",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 760,
        "wires": []
    },
    {
        "id": "56ac5e22.9ccb2",
        "type": "mqtt in",
        "z": "aa130715069a6eeb",
        "name": "",
        "topic": "fail2ban",
        "qos": "2",
        "datatype": "auto",
        "broker": "39c85520361d1f91",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 150,
        "y": 1800,
        "wires": [
            [
                "dafc65c5.8182a8"
            ]
        ]
    },
    {
        "id": "6efe185e.a4aa18",
        "type": "debug",
        "z": "aa130715069a6eeb",
        "name": "fail2ban",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 1740,
        "wires": []
    },
    {
        "id": "dafc65c5.8182a8",
        "type": "json",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 1800,
        "wires": [
            [
                "99145286.e4c3b"
            ]
        ]
    },
    {
        "id": "697dabbb.959a74",
        "type": "function",
        "z": "aa130715069a6eeb",
        "name": "",
        "func": "let key = msg.payload.key;\nlet latitude = msg.payload.latitude;\nlet longitude = msg.payload.longitude;\nlet name = msg.payload.name;\nlet geohash = msg.payload.geohash;\n\nlet timezone = msg.payload.timezone;\nlet ip = msg.payload.ip;\nlet region = msg.payload.region;\nlet city = msg.payload.city;\nlet zip = msg.payload.zip;\n\nlet measurement = 'geoloc'\n\n\ninfluxMsg = [{\n    measurement: measurement,\n        payload: [{\n            key: key,\n            latitude: latitude,\n            longitude: longitude,\n            name: name,\n            geohash: geohash,\n            ip_address: ip\n        },{\n        country: key,\n        country_name: name,\n        region: region,\n        ip: ip\n        }],}]\n\n\n\nreturn influxMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 1800,
        "wires": [
            [
                "b3577801.fa87c8",
                "6efe185e.a4aa18"
            ]
        ]
    },
    {
        "id": "b3577801.fa87c8",
        "type": "influxdb out",
        "z": "aa130715069a6eeb",
        "influxdb": "d0b6d8cf.354418",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "x": 780,
        "y": 1800,
        "wires": []
    },
    {
        "id": "99145286.e4c3b",
        "type": "geohash",
        "z": "aa130715069a6eeb",
        "name": "",
        "property": "payload",
        "x": 400,
        "y": 1800,
        "wires": [
            [
                "697dabbb.959a74"
            ]
        ]
    },
    {
        "id": "13641673.3aefca",
        "type": "comment",
        "z": "aa130715069a6eeb",
        "name": "Fail2Ban",
        "info": "",
        "x": 160,
        "y": 1720,
        "wires": []
    },
    {
        "id": "012729026d3687ab",
        "type": "mqtt in",
        "z": "f905b49ce5011782",
        "name": "GCP",
        "topic": "gcp/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "b005dcb8a9e6bb86",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "8788784597f764cc",
                "a4512b8d4872fae7"
            ]
        ]
    },
    {
        "id": "61386a3ed8966416",
        "type": "debug",
        "z": "f905b49ce5011782",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 180,
        "wires": []
    },
    {
        "id": "8788784597f764cc",
        "type": "json",
        "z": "f905b49ce5011782",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 455,
        "y": 180,
        "wires": [
            [
                "61386a3ed8966416"
            ]
        ]
    },
    {
        "id": "a4512b8d4872fae7",
        "type": "debug",
        "z": "f905b49ce5011782",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 455,
        "y": 240,
        "wires": []
    },
    {
        "id": "6d214f186b75b223",
        "type": "inject",
        "z": "f905b49ce5011782",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 400,
        "y": 580,
        "wires": [
            [
                "0abd11ffa4054f58"
            ]
        ]
    },
    {
        "id": "0abd11ffa4054f58",
        "type": "function",
        "z": "f905b49ce5011782",
        "name": "",
        "func": "\n//msg.url = \"https://udm.home.arpa/proxy/network/api/auth/login\";\nmsg.url = \"https://udm.home.arpa/api/auth/login\";\n\nmsg.method = \"POST\";\nmsg.headers = { \"Content-Type\":\"application/json;charset=UTF-8\"};\nmsg.payload = {\n    username: 'bdbuysse@gmail.com',\n    password: 'spiceygoat!!@'\n} \n \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 580,
        "wires": [
            [
                "3c0924e617ba1292"
            ]
        ]
    },
    {
        "id": "458d2e148e138dd9",
        "type": "debug",
        "z": "f905b49ce5011782",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 520,
        "wires": []
    },
    {
        "id": "3c0924e617ba1292",
        "type": "http request",
        "z": "f905b49ce5011782",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 770,
        "y": 580,
        "wires": [
            [
                "642f26d3d5ed8482"
            ]
        ]
    },
    {
        "id": "642f26d3d5ed8482",
        "type": "json",
        "z": "f905b49ce5011782",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 950,
        "y": 580,
        "wires": [
            [
                "458d2e148e138dd9",
                "8fd3745f7dd8bb83"
            ]
        ]
    },
    {
        "id": "fde0d712d8ac59f6",
        "type": "function",
        "z": "f905b49ce5011782",
        "name": "",
        "func": "\nsite = msg.payload.sso_uuid;\n\n//msg.url = \"https://udm.home.arpa/proxy/network/api/auth/login\";\n//msg.url = \"https://udm.home.arpa/api/auth/login\";\n// /api/s/{site}/rest/portforward/\nmsg.url = 'https://udm.home.arpa/api/s/'+site+'/rest/portforward/'\n\n\nmsg.method = \"GET\";\nmsg.headers = { \"Content-Type\":\"application/json;charset=UTF-8\"};\n \n \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "30ba01fd567c4a1d",
        "type": "debug",
        "z": "f905b49ce5011782",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 520,
        "wires": []
    },
    {
        "id": "5b6659284a97268d",
        "type": "json",
        "z": "f905b49ce5011782",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 0,
        "y": 0,
        "wires": [
            []
        ]
    },
    {
        "id": "7a55922680b2dcdb",
        "type": "json",
        "z": "f905b49ce5011782",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 0,
        "y": 0,
        "wires": [
            []
        ]
    },
    {
        "id": "edd0c420c19ac743",
        "type": "http request",
        "z": "f905b49ce5011782",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 0,
        "y": 0,
        "wires": [
            []
        ]
    },
    {
        "id": "75f2c9174bd31320",
        "type": "http request",
        "z": "f905b49ce5011782",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 0,
        "y": 0,
        "wires": [
            []
        ]
    },
    {
        "id": "ad27470269c1ac99",
        "type": "http request",
        "z": "f905b49ce5011782",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 0,
        "y": 0,
        "wires": [
            []
        ]
    },
    {
        "id": "7e700fef522ad82c",
        "type": "http request",
        "z": "f905b49ce5011782",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 0,
        "y": 0,
        "wires": [
            []
        ]
    },
    {
        "id": "d386ccfbf009dafc",
        "type": "http request",
        "z": "f905b49ce5011782",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1310,
        "y": 580,
        "wires": [
            [
                "29e505256a34840e",
                "9fc1a93260888a58"
            ]
        ]
    },
    {
        "id": "29e505256a34840e",
        "type": "json",
        "z": "f905b49ce5011782",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1490,
        "y": 580,
        "wires": [
            [
                "012fb185e8a075ef"
            ]
        ]
    },
    {
        "id": "012fb185e8a075ef",
        "type": "debug",
        "z": "f905b49ce5011782",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1610,
        "y": 580,
        "wires": []
    },
    {
        "id": "9fc1a93260888a58",
        "type": "debug",
        "z": "f905b49ce5011782",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 520,
        "wires": []
    },
    {
        "id": "8fd3745f7dd8bb83",
        "type": "function",
        "z": "f905b49ce5011782",
        "name": "",
        "func": "\nsite = msg.payload.sso_uuid;\n\n//api/self/sites\nmsg.url = 'https://udm.home.arpa/api/self/sites'\n\n\nmsg.method = \"GET\";\nmsg.headers = { \"Content-Type\":\"application/json;charset=UTF-8\"};\n \n \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 580,
        "wires": [
            [
                "d386ccfbf009dafc",
                "30ba01fd567c4a1d"
            ]
        ]
    },
    {
        "id": "d89c6ebb.cf6c2",
        "type": "twilio out",
        "z": "1600a05a.fc816",
        "twilio": "b03b267.f2a54d8",
        "twilioType": "sms",
        "url": "",
        "number": "6124142744",
        "name": "",
        "x": 270,
        "y": 140,
        "wires": []
    },
    {
        "id": "d1ee053.b080ff8",
        "type": "inject",
        "z": "1600a05a.fc816",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "test...1234",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "test...1234",
        "payloadType": "str",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "d89c6ebb.cf6c2"
            ]
        ]
    },
    {
        "id": "6f3deca1.5d8144",
        "type": "bigtimer",
        "z": "1600a05a.fc816",
        "outtopic": "kitchen",
        "outpayload1": "ON",
        "outpayload2": "OFF",
        "name": "Evening",
        "lat": "45.14176697",
        "lon": "-93.37486187",
        "starttime": "5004",
        "endtime": "60",
        "startoff": "-45",
        "endoff": 0,
        "offs": 0,
        "outtext1": "",
        "outtext2": "",
        "timeout": 1440,
        "sun": true,
        "mon": true,
        "tue": true,
        "wed": true,
        "thu": true,
        "fri": true,
        "sat": true,
        "jan": true,
        "feb": true,
        "mar": true,
        "apr": false,
        "may": false,
        "jun": false,
        "jul": false,
        "aug": false,
        "sep": false,
        "oct": true,
        "nov": true,
        "dec": true,
        "day1": 0,
        "month1": 0,
        "day2": 0,
        "month2": 0,
        "day3": 0,
        "month3": 0,
        "day4": 0,
        "month4": 0,
        "day5": 0,
        "month5": 0,
        "day6": "",
        "month6": "",
        "d1": 0,
        "w1": 0,
        "d2": 0,
        "w2": 0,
        "d3": 0,
        "w3": 0,
        "d4": 0,
        "w4": 0,
        "d5": 0,
        "w5": 0,
        "d6": "",
        "w6": "",
        "xday1": "",
        "xmonth1": "0",
        "xday2": "",
        "xmonth2": "0",
        "xday3": "0",
        "xmonth3": "0",
        "xday4": "",
        "xmonth4": "0",
        "xday5": "",
        "xmonth5": "0",
        "xday6": "",
        "xmonth6": "0",
        "xd1": "",
        "xw1": "",
        "xd2": "",
        "xw2": "",
        "xd3": "",
        "xw3": "",
        "xd4": "",
        "xw4": "",
        "xd5": "",
        "xw5": "",
        "xd6": "",
        "xw6": "",
        "suspend": false,
        "random": true,
        "repeat": false,
        "atstart": true,
        "odd": false,
        "even": false,
        "x": 260,
        "y": 360,
        "wires": [
            [
                "34f1ba8c.5ef186"
            ],
            [],
            []
        ]
    },
    {
        "id": "dc3ad4e2.89f088",
        "type": "inject",
        "z": "1600a05a.fc816",
        "name": "On",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "6f3deca1.5d8144"
            ]
        ]
    },
    {
        "id": "d319ccc0.6a409",
        "type": "inject",
        "z": "1600a05a.fc816",
        "name": "Off",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "x": 90,
        "y": 360,
        "wires": [
            [
                "6f3deca1.5d8144"
            ]
        ]
    },
    {
        "id": "a221bf5a.631ff",
        "type": "inject",
        "z": "1600a05a.fc816",
        "name": "Default",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "default",
        "payloadType": "str",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "6f3deca1.5d8144"
            ]
        ]
    },
    {
        "id": "34f1ba8c.5ef186",
        "type": "switch",
        "z": "1600a05a.fc816",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "OFF",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 360,
        "wires": [
            [
                "9a48b61b.78fa98"
            ],
            [
                "4bea1a27.89dc24"
            ]
        ]
    },
    {
        "id": "bbbd4cd5.d6b04",
        "type": "comment",
        "z": "1600a05a.fc816",
        "name": "twillo recovery code",
        "info": "vLjNMt_3dmUHAZ83QEr7n05TdZEENE2ixPgwI4iG",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "9a48b61b.78fa98",
        "type": "change",
        "z": "1600a05a.fc816",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Turn Kitchen Island ON",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 340,
        "wires": [
            [
                "6cd8401d.fc0af"
            ]
        ]
    },
    {
        "id": "4bea1a27.89dc24",
        "type": "change",
        "z": "1600a05a.fc816",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Turn Kitchen Island OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "6cd8401d.fc0af",
        "type": "link out",
        "z": "1600a05a.fc816",
        "name": "darkKitchenIsland",
        "links": [
            "ffce84f4.46ae48"
        ],
        "x": 735,
        "y": 360,
        "wires": []
    },
    {
        "id": "ffce84f4.46ae48",
        "type": "link in",
        "z": "1600a05a.fc816",
        "name": "twillioIn",
        "links": [
            "6cd8401d.fc0af"
        ],
        "x": 155,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4574ac93.2a3224",
        "type": "link in",
        "z": "1600a05a.fc816",
        "name": "grafanaAlertIn",
        "links": [
            "9838d745.f0ade8"
        ],
        "x": 155,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "4d504261.43ad5c",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2120,
        "y": 1700,
        "wires": [
            [
                "1603a11b.64cfdf"
            ]
        ]
    },
    {
        "id": "1603a11b.64cfdf",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "",
        "func": "msg.url = 'https://10.0.0.205:8080/api/apiVer'\nmsg.method = 'GET'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2290,
        "y": 1700,
        "wires": [
            [
                "337ae6ba.01d52a"
            ]
        ]
    },
    {
        "id": "79e3d845.e64948",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2770,
        "y": 1700,
        "wires": []
    },
    {
        "id": "337ae6ba.01d52a",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2450,
        "y": 1700,
        "wires": [
            [
                "3204d6f2.0995ba"
            ]
        ]
    },
    {
        "id": "3204d6f2.0995ba",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2590,
        "y": 1700,
        "wires": [
            [
                "79e3d845.e64948"
            ]
        ]
    },
    {
        "id": "c3f0f185.5992",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "f1bbe200.adbf9"
            ]
        ]
    },
    {
        "id": "f1bbe200.adbf9",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "",
        "func": "let hostname = flow.get('rainMachine_ip')\nlet rainMachinePassword = flow.get('rainMachine_pass')\nmsg.url = 'https://'+hostname+':8080/api/4/auth/login'\nmsg.method = 'POST'\nmsg.payload = {\n    \"pwd\": rainMachinePassword, \n    \"remember\":0\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 320,
        "wires": [
            [
                "33c710e7.72b7f"
            ]
        ]
    },
    {
        "id": "b12fed07.189f4",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 870,
        "y": 260,
        "wires": []
    },
    {
        "id": "33c710e7.72b7f",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 570,
        "y": 320,
        "wires": [
            [
                "d6e3e0a8.3fd48",
                "ae37257114f89ef8"
            ]
        ]
    },
    {
        "id": "d6e3e0a8.3fd48",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 710,
        "y": 320,
        "wires": [
            [
                "b12fed07.189f4",
                "69152718.fa36b8"
            ]
        ]
    },
    {
        "id": "69152718.fa36b8",
        "type": "change",
        "z": "171b21f.9e6efde",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rainMachine_access_token",
                "pt": "flow",
                "to": "payload.access_token",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rainMachine_token_expiration",
                "pt": "flow",
                "to": "payload.expiration",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "29a2d12d.7ef01e",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2060,
        "y": 1080,
        "wires": [
            [
                "8fadb99e.a53238"
            ]
        ]
    },
    {
        "id": "8fadb99e.a53238",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "",
        "func": "var token = flow.get('rainMachine_access_token');\nmsg.url = 'https://10.0.0.205:8080/api/4/dailystats?access_token='+token;\nmsg.method = 'GET'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2230,
        "y": 1080,
        "wires": [
            [
                "cac0b660.2fa4f8"
            ]
        ]
    },
    {
        "id": "6a904f99.d457c",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2710,
        "y": 1080,
        "wires": []
    },
    {
        "id": "cac0b660.2fa4f8",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2390,
        "y": 1080,
        "wires": [
            [
                "c617cecc.c8b65"
            ]
        ]
    },
    {
        "id": "c617cecc.c8b65",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2530,
        "y": 1080,
        "wires": [
            [
                "6a904f99.d457c"
            ]
        ]
    },
    {
        "id": "f163cbf1.8ece38",
        "type": "comment",
        "z": "171b21f.9e6efde",
        "name": "AUTH",
        "info": "",
        "x": 130,
        "y": 260,
        "wires": []
    },
    {
        "id": "e8716492.b5a9f8",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "password",
                "v": "RAINMACHINEPASS",
                "vt": "env"
            }
        ],
        "repeat": "82800",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "rainmachine.home.arpa",
        "payloadType": "str",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "e8d22fe3.98463"
            ]
        ]
    },
    {
        "id": "e8d22fe3.98463",
        "type": "change",
        "z": "171b21f.9e6efde",
        "name": "rainmachine host",
        "rules": [
            {
                "t": "set",
                "p": "rainMachine_ip",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rainMachine_pass",
                "pt": "flow",
                "to": "password",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e04789c1.e93e28",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "provision",
        "func": "let hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/provision?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2120,
        "y": 200,
        "wires": [
            [
                "71c77090.a990d"
            ]
        ]
    },
    {
        "id": "d98d49a2.584a98",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2710,
        "y": 200,
        "wires": []
    },
    {
        "id": "71c77090.a990d",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2390,
        "y": 200,
        "wires": [
            [
                "a06c0610.ac6a28"
            ]
        ]
    },
    {
        "id": "a06c0610.ac6a28",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2530,
        "y": 200,
        "wires": [
            [
                "d98d49a2.584a98"
            ]
        ]
    },
    {
        "id": "abdf86f5.3d5188",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1960,
        "y": 200,
        "wires": [
            [
                "e04789c1.e93e28"
            ]
        ]
    },
    {
        "id": "d42103bf.50ec5",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "zone/start",
        "func": "let zone_id = msg.payload;\nlet hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/zone/'+zone_id+'/start?access_token='+access_token;\nmsg.method = 'POST';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2140,
        "y": 360,
        "wires": [
            [
                "cc08aa7e.376148"
            ]
        ]
    },
    {
        "id": "272864b2.8693fc",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2730,
        "y": 360,
        "wires": []
    },
    {
        "id": "cc08aa7e.376148",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2410,
        "y": 360,
        "wires": [
            [
                "26c1fd3.96dd502"
            ]
        ]
    },
    {
        "id": "26c1fd3.96dd502",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2590,
        "y": 360,
        "wires": [
            [
                "272864b2.8693fc"
            ]
        ]
    },
    {
        "id": "90a726bd.f74118",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 1970,
        "y": 360,
        "wires": [
            [
                "d42103bf.50ec5"
            ]
        ]
    },
    {
        "id": "71788fc7.f6874",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "zone/stop",
        "func": "let zone_id = msg.payload;\nlet hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/zone/'+zone_id+'/stop?access_token='+access_token;\nmsg.method = 'POST';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2140,
        "y": 440,
        "wires": [
            [
                "82e699cc.03a248"
            ]
        ]
    },
    {
        "id": "165d61ef.ef135e",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2730,
        "y": 440,
        "wires": []
    },
    {
        "id": "82e699cc.03a248",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2410,
        "y": 440,
        "wires": [
            [
                "11f90b0b.737995"
            ]
        ]
    },
    {
        "id": "11f90b0b.737995",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2590,
        "y": 440,
        "wires": [
            [
                "165d61ef.ef135e"
            ]
        ]
    },
    {
        "id": "4701d5a8.f51bec",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 1970,
        "y": 440,
        "wires": [
            [
                "71788fc7.f6874"
            ]
        ]
    },
    {
        "id": "d3604b0b.5e1d38",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "watering/zone",
        "func": "let zone_id = msg.payload;\nlet hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/watering/zone?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2160,
        "y": 540,
        "wires": [
            [
                "dac86e37.11b34"
            ]
        ]
    },
    {
        "id": "83e6042f.8bbb08",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2890,
        "y": 540,
        "wires": []
    },
    {
        "id": "dac86e37.11b34",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2410,
        "y": 540,
        "wires": [
            [
                "9b5cfaf6.706558"
            ]
        ]
    },
    {
        "id": "9b5cfaf6.706558",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2590,
        "y": 540,
        "wires": [
            [
                "831ca230.193fb"
            ]
        ]
    },
    {
        "id": "f8e3c9d.2583238",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "inject",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 1970,
        "y": 540,
        "wires": [
            [
                "d3604b0b.5e1d38"
            ]
        ]
    },
    {
        "id": "831ca230.193fb",
        "type": "bigsplitter",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload.zones",
        "x": 2740,
        "y": 540,
        "wires": [
            [
                "83e6042f.8bbb08"
            ],
            []
        ]
    },
    {
        "id": "cc875c80.5e815",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "watering/log",
        "func": "let zone_id = msg.payload;\nlet hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/watering/log?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2150,
        "y": 720,
        "wires": [
            [
                "fd656c16.2b292"
            ]
        ]
    },
    {
        "id": "3af60ceb.a0b564",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2890,
        "y": 720,
        "wires": []
    },
    {
        "id": "fd656c16.2b292",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2410,
        "y": 720,
        "wires": [
            [
                "be33fef3.83c7f"
            ]
        ]
    },
    {
        "id": "be33fef3.83c7f",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2590,
        "y": 720,
        "wires": [
            [
                "43aac5a3.e47aac"
            ]
        ]
    },
    {
        "id": "72f6ee63.cdc31",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "inject",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 1970,
        "y": 720,
        "wires": [
            [
                "cc875c80.5e815"
            ]
        ]
    },
    {
        "id": "e0c87058.3944f",
        "type": "bigsplitter",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload.zones",
        "x": 2740,
        "y": 720,
        "wires": [
            [
                "3af60ceb.a0b564"
            ],
            []
        ]
    },
    {
        "id": "43aac5a3.e47aac",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2730,
        "y": 760,
        "wires": []
    },
    {
        "id": "85c8fe4d.ce6b2",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "zone",
        "func": "let hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/zone?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 540,
        "wires": [
            [
                "cc735508.ae8b28"
            ]
        ]
    },
    {
        "id": "cd86f017.fbcae",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 910,
        "y": 540,
        "wires": []
    },
    {
        "id": "cc735508.ae8b28",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 590,
        "y": 540,
        "wires": [
            [
                "a242ed47.cc4e3"
            ]
        ]
    },
    {
        "id": "a242ed47.cc4e3",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 770,
        "y": 540,
        "wires": [
            [
                "cd86f017.fbcae"
            ]
        ]
    },
    {
        "id": "64bbad1.ee1f954",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 540,
        "wires": [
            [
                "85c8fe4d.ce6b2"
            ]
        ]
    },
    {
        "id": "e4aab55.7912d48",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "zone/properties",
        "func": "let hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/zone/properties?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 480,
        "wires": [
            [
                "b6faeb40.3d6288"
            ]
        ]
    },
    {
        "id": "274a7a5f.6f9536",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 480,
        "wires": []
    },
    {
        "id": "b6faeb40.3d6288",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 590,
        "y": 480,
        "wires": [
            [
                "ccdda0bb.0e14b"
            ]
        ]
    },
    {
        "id": "ccdda0bb.0e14b",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 770,
        "y": 480,
        "wires": [
            [
                "611099e8.560828"
            ]
        ]
    },
    {
        "id": "5e16fc49.04fed4",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": false,
        "onceDelay": "30",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 480,
        "wires": [
            [
                "e4aab55.7912d48"
            ]
        ]
    },
    {
        "id": "611099e8.560828",
        "type": "change",
        "z": "171b21f.9e6efde",
        "name": "persist zones",
        "rules": [
            {
                "t": "set",
                "p": "zones",
                "pt": "flow",
                "to": "payload.zones",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 480,
        "wires": [
            [
                "274a7a5f.6f9536"
            ]
        ]
    },
    {
        "id": "6beda2aa.6bc38c",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "provision",
        "payloadType": "str",
        "x": 2160,
        "y": 1920,
        "wires": [
            [
                "8c51405.678f3c"
            ]
        ]
    },
    {
        "id": "8c51405.678f3c",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "",
        "func": "var token = flow.get('rainMachine_access_token');\nlet api = msg.payload\n\nmsg.url = 'https://10.0.0.205:8080/api/4/'+api+'?access_token='+token;\n\n\n\nmsg.method = 'GET'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2350,
        "y": 1980,
        "wires": [
            [
                "5cbdb22.506cb4c"
            ]
        ]
    },
    {
        "id": "9da599fd.7c97e8",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2770,
        "y": 1980,
        "wires": []
    },
    {
        "id": "5cbdb22.506cb4c",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2510,
        "y": 1980,
        "wires": [
            [
                "5cab8d8a.2e5b34",
                "57692dd4.1d36e4"
            ]
        ]
    },
    {
        "id": "5cab8d8a.2e5b34",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2650,
        "y": 1980,
        "wires": [
            [
                "9da599fd.7c97e8"
            ]
        ]
    },
    {
        "id": "e904d760.e055f8",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/watering/zone",
        "payloadType": "str",
        "x": 2140,
        "y": 1980,
        "wires": [
            [
                "8c51405.678f3c"
            ]
        ]
    },
    {
        "id": "57d7f5c5.9a138c",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/zone/simulate",
        "payloadType": "str",
        "x": 2140,
        "y": 2040,
        "wires": [
            [
                "8c51405.678f3c"
            ]
        ]
    },
    {
        "id": "57692dd4.1d36e4",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2650,
        "y": 1920,
        "wires": []
    },
    {
        "id": "b0cf0f61.32df6",
        "type": "comment",
        "z": "171b21f.9e6efde",
        "name": "Zone Properties",
        "info": "",
        "x": 160,
        "y": 420,
        "wires": []
    },
    {
        "id": "bd08e4b5.a06308",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "watering/zone",
        "func": "let hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/watering/zone?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 740,
        "wires": [
            [
                "9f36b157.2fff1"
            ]
        ]
    },
    {
        "id": "8959d509.b31648",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 740,
        "wires": []
    },
    {
        "id": "9f36b157.2fff1",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 570,
        "y": 740,
        "wires": [
            [
                "2dc30878.2b0b68"
            ]
        ]
    },
    {
        "id": "2dc30878.2b0b68",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 740,
        "wires": [
            [
                "309971dd.ab635e"
            ]
        ]
    },
    {
        "id": "f337e883.90d9b8",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 740,
        "wires": [
            [
                "bd08e4b5.a06308"
            ]
        ]
    },
    {
        "id": "309971dd.ab635e",
        "type": "bigsplitter",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload.zones",
        "x": 920,
        "y": 740,
        "wires": [
            [
                "8959d509.b31648"
            ],
            []
        ]
    },
    {
        "id": "4250c104.ba224",
        "type": "comment",
        "z": "171b21f.9e6efde",
        "name": "Watering Zone Status",
        "info": "",
        "x": 160,
        "y": 680,
        "wires": []
    },
    {
        "id": "2d1afcc0.79cf24",
        "type": "comment",
        "z": "171b21f.9e6efde",
        "name": "Set IP Address",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "a70d1d90.e721e",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "watering/log",
        "func": "let rainMachine = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\nlet today = msg.myymd;\n\nmsg.url = 'https://'+rainMachine+':8080/api/4/watering/log/'+today+'/120?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1640,
        "wires": [
            [
                "2cedc865.b48c18",
                "3ed02151cfacec8d"
            ]
        ]
    },
    {
        "id": "b9906667.55f468",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 1360,
        "wires": []
    },
    {
        "id": "2cedc865.b48c18",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 570,
        "y": 1360,
        "wires": [
            [
                "c01eceab.06356"
            ]
        ]
    },
    {
        "id": "c01eceab.06356",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 1360,
        "wires": [
            [
                "b9906667.55f468"
            ]
        ]
    },
    {
        "id": "c1275e5b.e7365",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "17e2682e.a00e78",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "restrictions/currently",
        "func": "let hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/restrictions/currently?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 860,
        "wires": [
            [
                "a3b942eb.5486b"
            ]
        ]
    },
    {
        "id": "a3b942eb.5486b",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 570,
        "y": 860,
        "wires": [
            [
                "7d330f93.53cb9"
            ]
        ]
    },
    {
        "id": "7d330f93.53cb9",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 860,
        "wires": [
            [
                "99208a36.7c4a58"
            ]
        ]
    },
    {
        "id": "2d83abe6.e58fd4",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 860,
        "wires": [
            [
                "17e2682e.a00e78"
            ]
        ]
    },
    {
        "id": "99208a36.7c4a58",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "Format for Influx",
        "func": "let hourly = msg.payload.hourly;\nlet freeze = msg.payload.freeze;\nlet month = msg.payload.month;\nlet weekDay = msg.payload.weekDay;\nlet rainDelay = msg.payload.rainDelay;\nlet rainSensor = msg.payload.rainSensor;\nlet rainDelayCounter = msg.payload.rainDelayCounter;\nlet lastLeakDetected = msg.payload.lastLeakDetected;\n\nlet measurement = 'waterRestrictions';\n\nmsg.payload = [{\n    houlry: hourly,\n    freeze: freeze,\n    month: month,\n    weekDay: weekDay,\n    rainDelay: rainDelay,\n},\n{\n    controller: 'edgewood',\n}];\n\nmsg.measurement = measurement;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 860,
        "wires": [
            [
                "aa2e486d.02fd58"
            ]
        ]
    },
    {
        "id": "aa2e486d.02fd58",
        "type": "link out",
        "z": "171b21f.9e6efde",
        "name": "irrigationRestrictions",
        "links": [
            "877267c2.c87fe8"
        ],
        "x": 1075,
        "y": 860,
        "wires": []
    },
    {
        "id": "bbb9226b.9d3ed",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "get zone",
        "func": "let zone_id = msg.payload;\nlet hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/zone/'+zone_id+'/start?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2120,
        "y": 280,
        "wires": [
            [
                "bfe7fd87.ba332"
            ]
        ]
    },
    {
        "id": "c7e3ec64.f93a5",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2710,
        "y": 280,
        "wires": []
    },
    {
        "id": "bfe7fd87.ba332",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2390,
        "y": 280,
        "wires": [
            [
                "d4f5635a.0da7c",
                "7e3fb47b.fe6aac"
            ]
        ]
    },
    {
        "id": "d4f5635a.0da7c",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2570,
        "y": 280,
        "wires": [
            [
                "c7e3ec64.f93a5"
            ]
        ]
    },
    {
        "id": "30139cb6.d25c04",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 1950,
        "y": 280,
        "wires": [
            [
                "bbb9226b.9d3ed"
            ]
        ]
    },
    {
        "id": "7e3fb47b.fe6aac",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2570,
        "y": 240,
        "wires": []
    },
    {
        "id": "873d3542.8d17a8",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "dailystats",
        "func": "let hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/dailystats/2022-01-22?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1040,
        "wires": [
            [
                "e94d60d9.76869"
            ]
        ]
    },
    {
        "id": "2dffe96.cf8ba16",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 1040,
        "wires": []
    },
    {
        "id": "e94d60d9.76869",
        "type": "http request",
        "z": "171b21f.9e6efde",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "f21111d7.3018c",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 570,
        "y": 1040,
        "wires": [
            [
                "d9f0b464.eacef8"
            ]
        ]
    },
    {
        "id": "d9f0b464.eacef8",
        "type": "json",
        "z": "171b21f.9e6efde",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 1040,
        "wires": [
            [
                "2dffe96.cf8ba16"
            ]
        ]
    },
    {
        "id": "ae56d93e.27d4f8",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1040,
        "wires": [
            [
                "873d3542.8d17a8"
            ]
        ]
    },
    {
        "id": "bd45c0e8.d64d5",
        "type": "function",
        "z": "171b21f.9e6efde",
        "name": "watering/log/details",
        "func": "let hostname = flow.get('rainMachine_ip');\nlet access_token = flow.get('rainMachine_access_token');\n\n\nmsg.url = 'https://'+hostname+':8080/api/4/watering/log/details/2021-07-01/120?access_token='+access_token;\nmsg.method = 'GET';\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1440,
        "wires": [
            [
                "2cedc865.b48c18"
            ]
        ]
    },
    {
        "id": "1a1694cc.fbeaeb",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1440,
        "wires": [
            [
                "bd45c0e8.d64d5"
            ]
        ]
    },
    {
        "id": "ae37257114f89ef8",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 710,
        "y": 200,
        "wires": []
    },
    {
        "id": "7ca01573425bb29c",
        "type": "simpletime",
        "z": "171b21f.9e6efde",
        "name": "",
        "mydate": false,
        "myymd": true,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": false,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": false,
        "myrawdate": false,
        "mypm": false,
        "x": 290,
        "y": 1640,
        "wires": [
            [
                "a70d1d90.e721e"
            ]
        ]
    },
    {
        "id": "2aa84fdbc24598b9",
        "type": "inject",
        "z": "171b21f.9e6efde",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1640,
        "wires": [
            [
                "7ca01573425bb29c"
            ]
        ]
    },
    {
        "id": "3ed02151cfacec8d",
        "type": "debug",
        "z": "171b21f.9e6efde",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 670,
        "y": 1640,
        "wires": []
    },
    {
        "id": "b12d515b3396e0b0",
        "type": "mqtt in",
        "z": "bf8b5ca4b28f6892",
        "name": "",
        "topic": "zwave/cov",
        "qos": "2",
        "datatype": "auto",
        "broker": "39c85520361d1f91",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 120,
        "y": 120,
        "wires": [
            [
                "e1456b72aa0fa9f2"
            ]
        ]
    },
    {
        "id": "e1456b72aa0fa9f2",
        "type": "json",
        "z": "bf8b5ca4b28f6892",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 280,
        "y": 120,
        "wires": [
            [
                "00c5531e0189a06a"
            ]
        ]
    },
    {
        "id": "00c5531e0189a06a",
        "type": "mongodb out",
        "z": "bf8b5ca4b28f6892",
        "mongodb": "c813143834382b28",
        "name": "",
        "collection": "multisensor",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 530,
        "y": 120,
        "wires": []
    },
    {
        "id": "28b042432c3b8ed3",
        "type": "link in",
        "z": "bf8b5ca4b28f6892",
        "name": "gpsSurveyMongo",
        "links": [
            "e7228b7d.dfabb8"
        ],
        "x": 195,
        "y": 700,
        "wires": [
            [
                "e5e6e86899685e57"
            ]
        ]
    },
    {
        "id": "e5e6e86899685e57",
        "type": "mongodb out",
        "z": "bf8b5ca4b28f6892",
        "mongodb": "c813143834382b28",
        "name": "",
        "collection": "gps_survey",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 535,
        "y": 700,
        "wires": []
    },
    {
        "id": "5aa79648c52521b7",
        "type": "mongodb in",
        "z": "bf8b5ca4b28f6892",
        "mongodb": "c813143834382b28",
        "name": "",
        "collection": "bdb_mbox",
        "operation": "find",
        "x": 530,
        "y": 800,
        "wires": [
            [
                "e0b3f59451bba9ac"
            ]
        ]
    },
    {
        "id": "aa68c77c3b8b4da5",
        "type": "inject",
        "z": "bf8b5ca4b28f6892",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 800,
        "wires": [
            [
                "468c067fe9fae648"
            ]
        ]
    },
    {
        "id": "468c067fe9fae648",
        "type": "function",
        "z": "bf8b5ca4b28f6892",
        "name": "",
        "func": "msg.query = \"select * from gps_survey\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 800,
        "wires": [
            [
                "5aa79648c52521b7"
            ]
        ]
    },
    {
        "id": "0cd5ee95300bc8d6",
        "type": "debug",
        "z": "bf8b5ca4b28f6892",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 800,
        "wires": []
    },
    {
        "id": "09be5390b367125d",
        "type": "comment",
        "z": "bf8b5ca4b28f6892",
        "name": "LoRaWAN Survey Sweep GPS db",
        "info": "",
        "x": 220,
        "y": 660,
        "wires": []
    },
    {
        "id": "56f43ce5f20fe1d0",
        "type": "link in",
        "z": "bf8b5ca4b28f6892",
        "name": "batteryVoltage",
        "links": [
            "eb0a71ce.4cc96"
        ],
        "x": 155,
        "y": 360,
        "wires": [
            [
                "58c7e3a099d047ce"
            ]
        ]
    },
    {
        "id": "58c7e3a099d047ce",
        "type": "mongodb out",
        "z": "bf8b5ca4b28f6892",
        "mongodb": "c813143834382b28",
        "name": "",
        "collection": "battery_voltage",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 420,
        "y": 360,
        "wires": []
    },
    {
        "id": "4464c7c9b2e3fb58",
        "type": "mongodb out",
        "z": "bf8b5ca4b28f6892",
        "mongodb": "c813143834382b28",
        "name": "",
        "collection": "bdb_mbox",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 410,
        "y": 480,
        "wires": []
    },
    {
        "id": "cde829be1e9dbbd9",
        "type": "link in",
        "z": "bf8b5ca4b28f6892",
        "name": "suppervisoryIn",
        "links": [
            "4ad77589.30ff7c"
        ],
        "x": 195,
        "y": 900,
        "wires": [
            [
                "feae569c770a3f9f"
            ]
        ]
    },
    {
        "id": "feae569c770a3f9f",
        "type": "mongodb out",
        "z": "bf8b5ca4b28f6892",
        "mongodb": "c813143834382b28",
        "name": "",
        "collection": "supervisory",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 530,
        "y": 900,
        "wires": []
    },
    {
        "id": "e0b3f59451bba9ac",
        "type": "switch",
        "z": "bf8b5ca4b28f6892",
        "name": "",
        "property": "payload.payload.events[1].n",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 800,
        "wires": [
            [],
            [
                "506c4965515f77e7"
            ]
        ]
    },
    {
        "id": "506c4965515f77e7",
        "type": "bigsplitter",
        "z": "bf8b5ca4b28f6892",
        "name": "",
        "property": "payload",
        "x": 920,
        "y": 800,
        "wires": [
            [
                "0cd5ee95300bc8d6"
            ],
            []
        ]
    },
    {
        "id": "b6d428594fd33efa",
        "type": "link in",
        "z": "bf8b5ca4b28f6892",
        "name": "senseCapIn",
        "links": [],
        "x": 225,
        "y": 1260,
        "wires": [
            [
                "9e706e998f841538",
                "4ff607dea1d7d339"
            ]
        ]
    },
    {
        "id": "9e706e998f841538",
        "type": "mongodb out",
        "z": "bf8b5ca4b28f6892",
        "mongodb": "c813143834382b28",
        "name": "",
        "collection": "senseCap",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 460,
        "y": 1260,
        "wires": []
    },
    {
        "id": "4ff607dea1d7d339",
        "type": "debug",
        "z": "bf8b5ca4b28f6892",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 1340,
        "wires": []
    },
    {
        "id": "2a7ab9d1.6964f6",
        "type": "inject",
        "z": "4576b216.7dd43c",
        "name": "inject",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "c0f540ae.330ea"
            ]
        ]
    },
    {
        "id": "c0f540ae.330ea",
        "type": "function",
        "z": "4576b216.7dd43c",
        "name": "",
        "func": "//\"Authorization: Bearer eyJrIjoidTZUNGNFU3ZMd29jU0dJUmVJYVNwVVVCSEsyRlJiRE8iLCJuIjoibm9kZS1yZWQiLCJpZCI6MX0=\" https://10.0.0.10/grafana/api/dashboards/home\n\n\nlet bearer_token = 'Bearer eyJrIjoidTZUNGNFU3ZMd29jU0dJUmVJYVNwVVVCSEsyRlJiRE8iLCJuIjoibm9kZS1yZWQiLCJpZCI6MX0=';\n\n//msg.url = 'https://10.0.0.10/grafana/api/keys';\nmsg.url = 'https://10.10.10.10/grafana/api/dashboards/home';\nmsg.method = 'GET';\nmsg.headers = {\n    Accept: \"application/json\",\n    'Content-Type': \"application/json\",\n    Authorization: bearer_token,\n};\n\nmsg.payload = {};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 180,
        "wires": [
            [
                "ea03bf2b.36423",
                "495bbcfc.f8a4a4"
            ]
        ]
    },
    {
        "id": "88147ee.83f038",
        "type": "debug",
        "z": "4576b216.7dd43c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 620,
        "y": 180,
        "wires": []
    },
    {
        "id": "ea03bf2b.36423",
        "type": "http request",
        "z": "4576b216.7dd43c",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "d15f51f5.84dab",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 470,
        "y": 180,
        "wires": [
            [
                "88147ee.83f038"
            ]
        ]
    },
    {
        "id": "495bbcfc.f8a4a4",
        "type": "debug",
        "z": "4576b216.7dd43c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 460,
        "y": 100,
        "wires": []
    },
    {
        "id": "7be4dda3.860c24",
        "type": "inject",
        "z": "4576b216.7dd43c",
        "name": "inject",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 400,
        "wires": [
            [
                "9edaeb16.554698"
            ]
        ]
    },
    {
        "id": "9edaeb16.554698",
        "type": "function",
        "z": "4576b216.7dd43c",
        "name": "",
        "func": "//\"Authorization: Bearer eyJrIjoidTZUNGNFU3ZMd29jU0dJUmVJYVNwVVVCSEsyRlJiRE8iLCJuIjoibm9kZS1yZWQiLCJpZCI6MX0=\" https://10.0.0.10/grafana/api/dashboards/home\n\n\nlet bearer_token = 'Bearer eyJrIjoidTZUNGNFU3ZMd29jU0dJUmVJYVNwVVVCSEsyRlJiRE8iLCJuIjoibm9kZS1yZWQiLCJpZCI6MX0=';\n\nmsg.url = 'https://10.10.10.10/grafana/api/auth/keys';\nmsg.method = 'POST';\nmsg.headers = {\n    Accept: \"application/json\",\n    'Content-Type': \"application/json\",\n    Authorization: bearer_token,\n};\n\nmsg.payload = {\n  \"name\": \"node-red-key\",\n  \"role\": \"Admin\",\n  \"secondsToLive\": null\n};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 400,
        "wires": [
            [
                "68988a96.ceed24",
                "add540f0.7a4f1"
            ]
        ]
    },
    {
        "id": "bd59b2b1.1293c",
        "type": "debug",
        "z": "4576b216.7dd43c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 620,
        "y": 400,
        "wires": []
    },
    {
        "id": "68988a96.ceed24",
        "type": "http request",
        "z": "4576b216.7dd43c",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "d15f51f5.84dab",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 470,
        "y": 400,
        "wires": [
            [
                "bd59b2b1.1293c"
            ]
        ]
    },
    {
        "id": "add540f0.7a4f1",
        "type": "debug",
        "z": "4576b216.7dd43c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 460,
        "y": 320,
        "wires": []
    },
    {
        "id": "227ed94f44606bf5",
        "type": "debug",
        "z": "c2dba5e02909beed",
        "name": "zwave/update/#",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 600,
        "y": 80,
        "wires": []
    },
    {
        "id": "3af55477032d9b26",
        "type": "json",
        "z": "c2dba5e02909beed",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 160,
        "wires": [
            [
                "7df6c02f55e0afb4"
            ]
        ]
    },
    {
        "id": "7df6c02f55e0afb4",
        "type": "switch",
        "z": "c2dba5e02909beed",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "zwave/update/",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "zwave/temp/#",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "zwave/notification/#",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "zwave/event",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 410,
        "y": 160,
        "wires": [
            [
                "227ed94f44606bf5"
            ],
            [
                "fbae8c90491464d5"
            ],
            [
                "c5dd00f7ff04c91e"
            ],
            [
                "1ee75df38432d7e2"
            ],
            [
                "e9f6c3694a659575"
            ]
        ]
    },
    {
        "id": "e9f6c3694a659575",
        "type": "debug",
        "z": "c2dba5e02909beed",
        "name": "otherwise",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 580,
        "y": 240,
        "wires": []
    },
    {
        "id": "dfeb4e604c6246b9",
        "type": "cepAggr",
        "z": "c2dba5e02909beed",
        "filters": [],
        "property": "payload",
        "windowType": "count",
        "windowParam": 0,
        "fieldsList": [
            {}
        ],
        "aggrOpList": [
            {}
        ],
        "x": 630,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "fbae8c90491464d5",
        "type": "debug",
        "z": "c2dba5e02909beed",
        "name": "zwave/temp/#",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 600,
        "y": 120,
        "wires": []
    },
    {
        "id": "2d992e106e2dcbae",
        "type": "mqtt in",
        "z": "c2dba5e02909beed",
        "name": "",
        "topic": "darksky",
        "qos": "2",
        "datatype": "auto",
        "broker": "39c85520361d1f91",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 150,
        "y": 360,
        "wires": [
            [
                "ad904e585359ce1d"
            ]
        ]
    },
    {
        "id": "0d2288ee9f8840d1",
        "type": "debug",
        "z": "c2dba5e02909beed",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 390,
        "y": 360,
        "wires": []
    },
    {
        "id": "ad904e585359ce1d",
        "type": "json",
        "z": "c2dba5e02909beed",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 360,
        "wires": [
            [
                "0d2288ee9f8840d1"
            ]
        ]
    },
    {
        "id": "1ee75df38432d7e2",
        "type": "debug",
        "z": "c2dba5e02909beed",
        "name": "zwave/event/#",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 600,
        "y": 200,
        "wires": []
    },
    {
        "id": "c5dd00f7ff04c91e",
        "type": "debug",
        "z": "c2dba5e02909beed",
        "name": "zwave/notification/#",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 620,
        "y": 160,
        "wires": []
    },
    {
        "id": "60cd631056826fa3",
        "type": "http response",
        "z": "c2dba5e02909beed",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 420,
        "y": 700,
        "wires": []
    },
    {
        "id": "edf62f8e2da15932",
        "type": "http in",
        "z": "c2dba5e02909beed",
        "name": "",
        "url": "/alerts",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 190,
        "y": 720,
        "wires": [
            [
                "eab78a87c5092324",
                "60cd631056826fa3",
                "421cc822a0889cce"
            ]
        ]
    },
    {
        "id": "eab78a87c5092324",
        "type": "debug",
        "z": "c2dba5e02909beed",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 410,
        "y": 800,
        "wires": []
    },
    {
        "id": "421cc822a0889cce",
        "type": "function",
        "z": "c2dba5e02909beed",
        "name": "",
        "func": "alert = msg.payload.ruleName;\n\nreturn {payload: {\n    alert\n}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "76e907dd89c5b323",
        "type": "google-home",
        "z": "b78ed3d06ab6db61",
        "conf": "09f2c70562eb4732",
        "device": "17955",
        "acknowledge": true,
        "name": "Doorbell",
        "topic": "",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "4c3cae0bb00f7e75"
            ]
        ]
    },
    {
        "id": "4c3cae0bb00f7e75",
        "type": "debug",
        "z": "b78ed3d06ab6db61",
        "name": "doorbell",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 140,
        "wires": []
    },
    {
        "id": "8b55369b6a873ecf",
        "type": "google-home",
        "z": "b78ed3d06ab6db61",
        "conf": "09f2c70562eb4732",
        "device": "3160",
        "acknowledge": true,
        "name": "Nest",
        "topic": "",
        "x": 180,
        "y": 320,
        "wires": [
            [
                "341474474b98c23b"
            ]
        ]
    },
    {
        "id": "341474474b98c23b",
        "type": "debug",
        "z": "b78ed3d06ab6db61",
        "name": "nest",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 320,
        "wires": []
    },
    {
        "id": "dc61fa1d.8cc708",
        "type": "inject",
        "z": "5a34b650.a16c48",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "21600",
        "crontab": "",
        "once": false,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 390,
        "y": 340,
        "wires": [
            [
                "52fda994.3231f8"
            ]
        ]
    },
    {
        "id": "f15da34b.ca27d",
        "type": "function",
        "z": "5a34b650.a16c48",
        "name": "",
        "func": "var ip = msg.payload.publicIPv4;\nvar publicIPv4 = flow.get('publicIPv4');\n\nif (ip === publicIPv4) {\n    return [{payload: publicIPv4},null];\n} else {\n    msg.url = \"https://domains.google.com/nic/update?hostname=pines.edgewoods.net&myip=\"+ip;\n    msg.method = \"POST\";\n    return [null, msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 840,
        "y": 240,
        "wires": [
            [
                "88cd07b1.5bc808"
            ],
            [
                "6a62d08f.52dc2"
            ]
        ]
    },
    {
        "id": "6a62d08f.52dc2",
        "type": "http request",
        "z": "5a34b650.a16c48",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "88e1b19a.74497",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "senderr": false,
        "x": 1030,
        "y": 340,
        "wires": [
            [
                "90cb4951.178cd8"
            ]
        ]
    },
    {
        "id": "52fda994.3231f8",
        "type": "ip",
        "z": "5a34b650.a16c48",
        "name": "ip",
        "https": false,
        "timeout": "5000",
        "internalIPv4": true,
        "internalIPv6": false,
        "publicIPv4": true,
        "publicIPv6": false,
        "x": 530,
        "y": 340,
        "wires": [
            [
                "8044aba.6e70458"
            ]
        ]
    },
    {
        "id": "90cb4951.178cd8",
        "type": "debug",
        "z": "5a34b650.a16c48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1190,
        "y": 340,
        "wires": []
    },
    {
        "id": "c0742c04.c4e7c",
        "type": "change",
        "z": "5a34b650.a16c48",
        "name": "publicIPv4",
        "rules": [
            {
                "t": "set",
                "p": "publicIPv4",
                "pt": "flow",
                "to": "payload.publicIPv4",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 240,
        "wires": [
            [
                "f15da34b.ca27d"
            ]
        ]
    },
    {
        "id": "88cd07b1.5bc808",
        "type": "debug",
        "z": "5a34b650.a16c48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1010,
        "y": 240,
        "wires": []
    },
    {
        "id": "8044aba.6e70458",
        "type": "function",
        "z": "5a34b650.a16c48",
        "name": "",
        "func": "let ip = msg.payload.publicIPv4;\n\nmsg.url = \"https://domains.google.com/nic/update?hostname=home.edgewoods.net&myip=\"+ip;\nmsg.method = \"POST\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 340,
        "wires": [
            [
                "6a62d08f.52dc2"
            ]
        ]
    },
    {
        "id": "b4443f5e4343bfcb",
        "type": "function",
        "z": "978ca627078b4010",
        "name": "Login",
        "func": "let user = env.get(\"UNIFIUSER\");\nlet password = env.get(\"UNIFIPASS\");\n\n\nmsg.url = \"http://udm.home.arpa/api/auth/login?remember=true\";\nmsg.method = \"POST\";\nmsg.headers = { \"Content-Type\":\"application/json;charset=UTF-8\"};\nmsg.payload = {\n    username: user,\n    password: password,\n//    remember: true\n};\n \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 260,
        "wires": [
            [
                "deaaa7a93b03fcac"
            ]
        ]
    },
    {
        "id": "dc93a468d08946e6",
        "type": "inject",
        "z": "978ca627078b4010",
        "name": "",
        "props": [
            {
                "p": "username",
                "v": "bdb",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "b4443f5e4343bfcb"
            ]
        ]
    },
    {
        "id": "1329140c36f2c2fa",
        "type": "debug",
        "z": "978ca627078b4010",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 260,
        "wires": []
    },
    {
        "id": "deaaa7a93b03fcac",
        "type": "http request",
        "z": "978ca627078b4010",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 510,
        "y": 260,
        "wires": [
            [
                "980432d0229f318e",
                "e9774e248410e341"
            ]
        ]
    },
    {
        "id": "980432d0229f318e",
        "type": "json",
        "z": "978ca627078b4010",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 260,
        "wires": [
            [
                "1329140c36f2c2fa"
            ]
        ]
    },
    {
        "id": "e9774e248410e341",
        "type": "debug",
        "z": "978ca627078b4010",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 320,
        "wires": []
    },
    {
        "id": "810d19c5d714526b",
        "type": "comment",
        "z": "978ca627078b4010",
        "name": "Auth Flow",
        "info": "",
        "x": 160,
        "y": 140,
        "wires": []
    },
    {
        "id": "e72db90d32d6dc91",
        "type": "function",
        "z": "978ca627078b4010",
        "name": "Status",
        "func": "msg.url = \"http://udm.home.arpa/api/status\";\nmsg.method = \"GET\";\nmsg.headers = {\n    \"Content-Type\":\"application/json;charset=UTF-8\",\n    Accept: \"application/json\",\n    \n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 520,
        "wires": [
            [
                "b8ec5509e389a9b9"
            ]
        ]
    },
    {
        "id": "776c4f9633c76bbd",
        "type": "inject",
        "z": "978ca627078b4010",
        "name": "",
        "props": [
            {
                "p": "username",
                "v": "bdb",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 520,
        "wires": [
            [
                "e72db90d32d6dc91"
            ]
        ]
    },
    {
        "id": "a20501be9d017351",
        "type": "debug",
        "z": "978ca627078b4010",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 520,
        "wires": []
    },
    {
        "id": "b8ec5509e389a9b9",
        "type": "http request",
        "z": "978ca627078b4010",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 510,
        "y": 520,
        "wires": [
            [
                "80b96712abf71a9f",
                "563aac3115ecbb3f",
                "605e146edd6f2a9e"
            ]
        ]
    },
    {
        "id": "80b96712abf71a9f",
        "type": "json",
        "z": "978ca627078b4010",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 520,
        "wires": [
            [
                "a20501be9d017351"
            ]
        ]
    },
    {
        "id": "563aac3115ecbb3f",
        "type": "debug",
        "z": "978ca627078b4010",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 580,
        "wires": []
    },
    {
        "id": "605e146edd6f2a9e",
        "type": "html",
        "z": "978ca627078b4010",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "",
        "ret": "html",
        "as": "single",
        "x": 650,
        "y": 680,
        "wires": [
            [
                "563aac3115ecbb3f"
            ]
        ]
    },
    {
        "id": "9d34a9159833a1ae",
        "type": "function",
        "z": "978ca627078b4010",
        "name": "device-basic",
        "func": "msg.url = \"http://udm.home.arpa/stat/device-basic\";\nmsg.method = \"GET\";\nmsg.headers = {\n    \"Content-Type\":\"application/json;charset=UTF-8\",\n    Accept: \"application/json\",\n    \n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 840,
        "wires": [
            [
                "deaa0d52d0240398"
            ]
        ]
    },
    {
        "id": "d4b163ce7c117dda",
        "type": "inject",
        "z": "978ca627078b4010",
        "name": "",
        "props": [
            {
                "p": "username",
                "v": "bdb",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 840,
        "wires": [
            [
                "9d34a9159833a1ae"
            ]
        ]
    },
    {
        "id": "fd5a0122638dfe52",
        "type": "debug",
        "z": "978ca627078b4010",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 840,
        "wires": []
    },
    {
        "id": "deaa0d52d0240398",
        "type": "http request",
        "z": "978ca627078b4010",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 510,
        "y": 840,
        "wires": [
            [
                "d765df24bdeadc1a",
                "764bcf5e5f678b8c",
                "81cad8106229113c"
            ]
        ]
    },
    {
        "id": "d765df24bdeadc1a",
        "type": "json",
        "z": "978ca627078b4010",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 840,
        "wires": [
            [
                "fd5a0122638dfe52"
            ]
        ]
    },
    {
        "id": "764bcf5e5f678b8c",
        "type": "debug",
        "z": "978ca627078b4010",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 900,
        "wires": []
    },
    {
        "id": "81cad8106229113c",
        "type": "html",
        "z": "978ca627078b4010",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "",
        "ret": "html",
        "as": "single",
        "x": 650,
        "y": 1000,
        "wires": [
            [
                "764bcf5e5f678b8c"
            ]
        ]
    },
    {
        "id": "e5246685c8f52273",
        "type": "function",
        "z": "978ca627078b4010",
        "name": "device-basic",
        "func": "msg.url = \"http://udm.home.arpa/stat/stat/alarm\";\nmsg.method = \"GET\";\nmsg.headers = {\n    \"Content-Type\":\"application/json;charset=UTF-8\",\n    Accept: \"application/json\",\n    \n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 920,
        "wires": [
            [
                "deaa0d52d0240398"
            ]
        ]
    },
    {
        "id": "18631d3f83e9e21b",
        "type": "inject",
        "z": "978ca627078b4010",
        "name": "",
        "props": [
            {
                "p": "username",
                "v": "bdb",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 920,
        "wires": [
            [
                "e5246685c8f52273"
            ]
        ]
    },
    {
        "id": "f8d77903088f315b",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"payload\":{\"result\":{\"data\":[{\"controller\":\"0755 RTCR\",\"cellname\":\"01.01 A-C1 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.01 A-COMP#1\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.02 A-C2 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.02 A-COMP#2\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.03 A-C3 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.03 A-COMP#3\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.04 A-C4 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.04 A-COMP#4\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.05 A-C5 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.05 A-COMP#5\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.09 A-C1 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.10 A-C2 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.11 A-C3 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.12 A-C4 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"01.13 A-C5 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.01 A-SUCTN\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.01 DEF DIFF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.02 A-DISCHG\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.02 A-SPLT V\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.03 A-EXH FN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.03 A-SCT TP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.04 A-DIS TP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.04 RCVR HTR\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.05 A-LQ PRS\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.05 SBCL VLV\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.06 A-LQ TMP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.06 SBCL DIS\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.07 A-SWCHBK\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.07 SBCL IN\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.08 A01 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.08 SBCL OUT\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.09 A-DL PRS\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.10 A-DL TMP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.12 A-PHASE\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.13 A-DISK#2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.14 A-DISK#1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"02.16 A-HI/LOW\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.01 A-SHTDWN\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.01 A01 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.02 A02 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.02 RCVR OUT\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.03 A-LQ LVL\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.03 A03 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.04 A-O.A.T.\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.04 A04 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.05 A05 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.05 ENCL TMP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.06 A06 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.07 A07 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"03.08 A08 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"04.01 A09  DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"04.02 A10  DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"04.03 A11  DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"04.04 A12  DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.01 B-C1 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.01 B-COMP#1\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.02 B-C2 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.02 B-COMP#2\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.03 B-C3 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.03 B-COMP#3\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.04 B-C4 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.04 B-COMP#4\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.05 B-C5 OIL\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.05 B-COMP#5\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.09 B-C1 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.10 B-C2 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.11 B-C3 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.12 B-C4 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"05.13 B-C5 PRF\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.01 B-SUCTN\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.01 B-SWCHBK\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.02 B-DISCHG\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.02 B-SPLT V\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.03 B-EXH FN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.03 B-SCT TP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.04 B-DIS TP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.04 RCVR HTR\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.05 B-LQ PRS\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.05 B10 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.06 B-LQ TMP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.08 B-SHTDWN\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.09 B-DL PRS\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.10 B-DL TMP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.12 B-PHASE\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.13 B-CMP SW\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.14 B-DISK#1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.15 B-DISK#2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"06.16 B-HI/LOW\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.01 B01 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.01 RCVR OUT\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.02 B-LQ LVL\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.02 B02 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.03 B-O.A.T.\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.03 B03 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.04 B04 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.04 ENCL TMP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.05 B06 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.06 B07 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.07 B08 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"07.08 B09 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"0755 RTCR\",\"celllongname\":\"\",\"celltype\":74,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"0755 WI\",\"celllongname\":\"\",\"celltype\":74,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"08.01 D01 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"08.02 D01 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"08.05 D01 DOOR\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"08.06 D01 SUCT\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"08.07 D01 DSCH\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"08.08 D01 LEAK\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.01 A-CFAN#1\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.01 A01A T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.02 A-CFAN#2\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.02 A01A D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.03 A01B T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.04 A01B D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.05 A01C T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.06 A01C D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.07 A02 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.08 A-SPLT F\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.08 A02 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.09 A02 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.10 A02 D2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.11 A02 T3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.12 A02 D3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.13 A03 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.14 A03 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.15 A03 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"09.16 A03 D2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"1-A01 DEFROST\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"1-A01 REFRIG\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"1-A09  DT MED\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"1-A10  DT MED\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"1-A11  DT MED\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"1-A12  DT MED\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.01 A03 T3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.01 B-CFAN#1\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.02 A03 D3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.02 B-CFAN#2\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.03 A03 T4\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.03 B-CFAN#3\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.04 A03 D4\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.05 A03 T5\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.06 A03 D5\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.07 A09  T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.08 A09  R1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.08 B-SPLT F\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.09 A10  T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.10 A10  D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.11 B01 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.12 B02 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.13 B03 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.14 B03 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.15 B03 T3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"10.16 B04  T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.01 B05  T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.02 B05  T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.03 B06 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.04 B06 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.05 B06 T3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.06 B07 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.07 B07 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.08 B07 T3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.09 B07 T4\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.10 B08 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.11 B08 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.12 B08 T3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.13 B08 T4\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.15 ZONE TMP\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"11.16 ZONE RH\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.01 A04 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.02 A04 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.03 A04 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.04 A04 D2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.05 A05 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.06 A05 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.07 A05 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.08 A05 D2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.09 A06 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.10 A06 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.11 A06 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.12 A06 D2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.13 A06 T3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.14 A06 D3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.15 A07 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"12.16 A07 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.01 A07 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.02 A07 D2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.03 A08 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.04 A08 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.05 A08 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.06 A08 D2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.07 A11  T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.08 A11  D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.09 A12  T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.10 A12  D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.11 B09 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.12 B09 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.13 B10 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.14 B10 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"13.15 B10 T3\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.01 C01 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.02 C01 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.03 C01 T2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.04 C01 D2\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.06 E01 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.07 E01 D1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.08 F01 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.09 G01 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.12 C01 DOOR\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.14 E01 DOOR\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.15 F01 DOOR\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"14.16 VAC ALRM\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.01 C01 SUCT\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.02 C01 DSCH\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.05 E01 SUCT\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.06 E01 DSCH\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.07 F01 SUCT\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.08 F01 DSCH\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.09 G01 SUCT\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.10 G01 DSCH\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.11 C01 LEAK\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.13 E01 LEAK\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.14 F01 LEAK\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"15.15 G01 LEAK\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.01 A01A DT\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.01 ALM LITE\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.02 A01B DT\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.02 ALM HORN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.03 A01C DT\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.03 SECURITY\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.04 A09  DT\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.05 A10  DT\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.06 A11  DT\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.07 A12  DT\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.14 #101 T1\",\"celllongname\":\"\",\"celltype\":1,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"16.16 ALM SLNC\",\"celllongname\":\"\",\"celltype\":2,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"17.01 C01 FAN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"17.02 E01 FAN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"17.03 C01 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"17.05 E01 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"17.06 F01 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"17.07 G01 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"18.01 C01 STRB\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"18.02 C01 HORN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"18.05 E01 STRB\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"18.06 E01 HORN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"18.07 F01 STRB\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"18.08 F01 HORN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"19.01 G01 STRB\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"19.02 G01 HORN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"19.07 C01 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"19.08 E01 DEF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"20.01 CASE LTS\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"20.02 ANTI-SWT\",\"celllongname\":\"\",\"celltype\":36,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"20.03 A11  DT\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"20.04 A12  DT\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"24.01 A09  DT\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"24.02 A10  DT\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"25.03 D01 REF\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"25.05 D01 STRB\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"25.06 D01 HORN\",\"celllongname\":\"\",\"celltype\":33,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"8RO#10\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"8RO#19\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"8RO#9\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-DROP LEG PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-DROP LEG TMP\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-HI/LO BYPASS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-LIQUID LEVEL\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-LQD HDR PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-LQD HDR TMP\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-MANUAL COMP\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-OUTSIDE TEMP\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-RACK EXHAUST\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-RCVR HEATER\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-RCVR OUTLET\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-RUPTURE DISK\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-RVCR LVL-LT\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-SHUTDOWN PRF\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-SUBCLR DISAB\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-SUBCLR VALVE\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"A-SUCTION PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"ACCESS LOG\",\"celllongname\":\"\",\"celltype\":236,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"ACCESS SERVICE\",\"celllongname\":\"\",\"celltype\":226,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"ADVISORY LOG\",\"celllongname\":\"\",\"celltype\":234,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"ADVISORY SERV\",\"celllongname\":\"\",\"celltype\":225,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-DROP LEG PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-DROP LEG TMP\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-HI/LO BYPASS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-LIQUID LEVEL\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-LQD HDR PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-LQD HDR TMP\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-MANUAL COMP\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-OUTSIDE TEMP\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-RACK EXHAUST\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-RCVR HEATER\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-RCVR OUTLET\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-RUPTURE DISK\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-RVCR LVL-LT\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-SHUTDOWN PRF\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"B-SUCTION PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"BASE LOG\",\"celllongname\":\"\",\"celltype\":73,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"C01 DISCH PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"C01 DOORSWITCH\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"C01 EVAP FANS\",\"celllongname\":\"\",\"celltype\":67,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"C01 LEAK HORN\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"C01 LEAK STROB\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"C01 REF LEAK\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"C01 SUCTN PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"CASE LIGHTS\",\"celllongname\":\"\",\"celltype\":80,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"D01 DISCHG PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"D01 DOORSWITCH\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"D01 LEAK HORN\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"D01 LEAK STROB\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"D01 REF LEAK\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"D01 SUCTN PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"DEVICE SUMM\",\"celllongname\":\"\",\"celltype\":89,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"DIGITAL\",\"celllongname\":\"\",\"celltype\":73,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"DOOR HEATERS\",\"celllongname\":\"\",\"celltype\":132,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"E01 DISCHG PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"E01 DOORSWITCH\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"E01 LEAK HORN\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"E01 LEAK STROB\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"E01 REF LEAK\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"E01 SUCTN PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"F01 DISCHG PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"F01 DOORSWITCH\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"F01 LEAK HORN\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"F01 LEAK STROB\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"F01 REF LEAK\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"F01 SUCTN PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"G01 DISCHG PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"G01 LEAK HORN\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"G01 LEAK STROB\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"G01 REF LEAK\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"G01 SUCTN PRS\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"GENERAL SERV\",\"celllongname\":\"\",\"celltype\":227,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"GLOBAL DATA\",\"celllongname\":\"\",\"celltype\":91,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"LGHT OVERRIDE\",\"celllongname\":\"\",\"celltype\":80,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M16#10\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M16#11\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M16#13\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#1\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#12\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#14\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#15\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#16\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#2\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#3\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#4\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#5\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#6\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#7\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168I#9\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#1\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#16\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#17\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#18\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#2\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#20\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#24\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#3\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#4\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#5\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#6\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M168O#7\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M88I#8\",\"celllongname\":\"\",\"celltype\":165,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"M88O#25\",\"celllongname\":\"\",\"celltype\":166,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"NOTE PAD\",\"celllongname\":\"\",\"celltype\":224,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"NV HANDLER\",\"celllongname\":\"\",\"celltype\":230,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"NetworkService\",\"celllongname\":\"\",\"celltype\":229,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"OVERRIDE LOG\",\"celllongname\":\"\",\"celltype\":237,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1M2_02D_A09_1\",\"celllongname\":\"HillPhoenix - OWIZ                  \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1M2_02D_A10_1\",\"celllongname\":\"Tyler - N5NGN                       \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1M2_02D_A11_1\",\"celllongname\":\"HillPhoenix - OWIZ                  \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1M2_03D_A12_1\",\"celllongname\":\"HillPhoenix - O5M/O5DM              \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1M2_BNK_A01_A\",\"celllongname\":\"HillPhoenix - O5M/O5DM              \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1M2_BNK_A01_B\",\"celllongname\":\"Hussmann - RLN                      \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1M2_BNK_A01_C\",\"celllongname\":\"Hussmann - RLN                      \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MB_12D_B10_3\",\"celllongname\":\"--                                  \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MD_09D_B09_2\",\"celllongname\":\"--                                  \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MD_18F_B05_2\",\"celllongname\":\"Hussmann - RLN                      \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MD_30F_B06_3\",\"celllongname\":\"HillPhoenix - O5M/O5DM              \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MD_32F_B03_3\",\"celllongname\":\"Tyler - N5FGN                       \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MD_40F_B07_4\",\"celllongname\":\"HillPhoenix - O5M/O5DM              \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MD_40F_B08_4\",\"celllongname\":\"Tyler - N5NGN                       \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MI_07D_A04_2\",\"celllongname\":\"Kysor - 10X18X9.5                   \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MI_07D_A05_2\",\"celllongname\":\"Tyler - N5FGN                       \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MI_08D_A07_2\",\"celllongname\":\"Fresh Pet                           \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MI_08D_A08_2\",\"celllongname\":\"Kysor - 14X35X9.5                   \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MI_15D_A02_3\",\"celllongname\":\"HillPhoenix - OWIZ                  \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MI_15D_A03_5\",\"celllongname\":\"--                                  \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MI_15D_A06_3\",\"celllongname\":\"--                                  \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MM_12F_B04_1\",\"celllongname\":\"Hussmann - RLN                      \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MP_06F_B01_1\",\"celllongname\":\"HillPhoenix - O5M/O5DM              \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1MP_08F_B02_1\",\"celllongname\":\"Tyler - N5FGN                       \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1RF_CMP_A\",\"celllongname\":\"HillPhoenix - RS - C01054\\r\\n\",\"celltype\":162,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"R1RR_CMP_B\",\"celllongname\":\"HillPhoenix\\r\\n\",\"celltype\":162,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"RAOA_WIB_G01\",\"celllongname\":\"Kysor - 9.5X40X9.5                  \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"RAOD_WIB_D01\",\"celllongname\":\"Hussmann - RLN                      \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"RAOF_WIB_C01\",\"celllongname\":\"Hussmann - RLN                      \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"RAOM_WIB_E01\",\"celllongname\":\"HillPhoenix - O5M/O5DM              \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"RAOP_WIB_F01\",\"celllongname\":\"Hussmann - RLN                      \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"RARF_ACC_A\",\"celllongname\":\"Bohn/Heatcraft - BNLG01A028 - T11B00001\\r\",\"celltype\":129,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"RARR_ACC_B\",\"celllongname\":\"Bohn/Heatcraft - BNLD06A048 - T11B00002\\r\",\"celltype\":129,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"REF ALM HORN\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"REF ALM LIGHT\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"REF ALM SILENC\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"REMOTE DIAL\",\"celllongname\":\"\",\"celltype\":233,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"RVCR LVL-LT\",\"celllongname\":\"\",\"celltype\":73,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"SECURITY ALARM\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"SM-ESR #1\",\"celllongname\":\"\",\"celltype\":158,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"SM-ESR #2\",\"celllongname\":\"\",\"celltype\":158,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"SM-ESR #4\",\"celllongname\":\"\",\"celltype\":158,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"SM-ESR #5\",\"celllongname\":\"\",\"celltype\":158,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"SM-ESR #8\",\"celllongname\":\"\",\"celltype\":158,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"STORE HUMIDITY\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"STORE TEMP\",\"celllongname\":\"\",\"celltype\":94,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"SVSR_02D_#101\",\"celllongname\":\"Hussmann - RLN                      \\r\\n\",\"celltype\":131,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"System\",\"celllongname\":\"\",\"celltype\":238,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"TIME SERVICES\",\"celllongname\":\"\",\"celltype\":228,\"celltypename\":\"???\"},{\"controller\":\"0755 RTCR\",\"cellname\":\"VAC PUMP ALARM\",\"celllongname\":\"\",\"celltype\":96,\"celltypename\":\"???\"}]},\"id\":0},\"_msgid\":\"615395228510fb24\",\"url\":\"http://t0755ref0001.target.com/JSON-RPC\",\"headers\":{\"date\":\"THU APR 21 19:43:24 2022\",\"server\":\"GoAhead-Webs\",\"content-length\":\"51135\",\"content-type\":\"text/html\",\"connection\":\"close\",\"set-cookie\":[\"CPCE2SID=3EA9700A_9C4E530-30B0_0001155C; path=/\"],\"x-node-red-request-node\":\"46459a40\"},\"statusCode\":200,\"responseUrl\":\"http://t0755ref0001.target.com/JSON-RPC\",\"redirectList\":[],\"retry\":0,\"responseCookies\":{\"CPCE2SID\":{\"path\":\"/\",\"value\":\"3EA9700A_9C4E530-30B0_0001155C\"}}}",
        "payloadType": "json",
        "x": 330,
        "y": 160,
        "wires": [
            [
                "0154d737c8180cb0",
                "880985249f9899ad"
            ]
        ]
    },
    {
        "id": "e7c8665da6f34dd7",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 160,
        "wires": []
    },
    {
        "id": "c743e68cb48dc2ed",
        "type": "function",
        "z": "44c96c079469bdd0",
        "name": "Periodic Event Loop",
        "func": "let dev_id = msg.device_name;\nlet hardware_serial = msg.payload.end_device_ids.dev_eui;\nlet app_id = msg.payload.end_device_ids.application_ids.application_id;\nlet counter = msg.payload.uplink_message.f_cnt;\nlet events = msg.payload.uplink_message.decoded_payload.events;\nlet influxMsg = {};\n\n\n/*\nTO Do...  when unknown_event is passed through to influxdb, it throws 400 bad request error.\nHow can I filter out using an array of bad events in my if statement most efficeintly?\nmap filter?\n\nlet exclusion_list = ['unknown_event', 'raw_data'];\n*/\ninfluxMsg.measurement = \"radio_bridge\";\n//var influxMsg = [];\n\n//if (msg.payload.object.events[i].n === \"temperature\") {\n\n/*\n122719 bdb - Doing a couple things here intentionally:  \n\n1) Stripping off raw_data packets - Already caputring them in mongodb if needed.  \n2) defining influxdb measurement equal to the name of the event from the codec.\n3) defining events[i].n \n\n*/\n\n\nfor (var i = 0 ; i < events.length; i++) {\n    //if (events[i].n !=[\"raw_data\", \"unknown_event\"] ){\n    //if (events[i].n != \"raw_data\" || events[i].n != \"unknown_event\" ) {\n    if (events[i].n != \"raw_data\") {\n        influxMsg = [{\n            measurement: events[i].n,\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: events[i].n,\n            u: events[i].u,\n            v: events[i].v,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: events[i].n\n        }],}];\n        node.send(influxMsg);\n    } else {}\n}    \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "0154d737c8180cb0",
        "type": "function",
        "z": "44c96c079469bdd0",
        "name": "loop example",
        "func": "let data = msg.payload.payload.result.data;\nlet standard_circuits = [];\n\n\nfor (var i = 0 ; i < data.length; i++) {\n    //if (events[i].n !=[\"raw_data\", \"unknown_event\"] ){\n    //if (events[i].n != \"raw_data\" || events[i].n != \"unknown_event\" ) {\n    if (data[i].celltype == 131) {\n            standard_circuits.push(data[i].controller+\":\"+data[i].cellname+\":CONTROL TEMP\");\n            standard_circuits.push(data[i].controller+\":\"+data[i].cellname+\":CIRCUIT STATE\");\n    } else {}\n}\nflow.set ('standard_circuits', standard_circuits)\n\n/*\n\n        influxMsg = [{\n            measurement: events[i].n,\n            payload: [{\n            dev_id: dev_id,\n            dev_eui: hardware_serial,\n            msg_counter: counter,\n            n: events[i].n,\n            u: events[i].u,\n            v: events[i].v,\n        },{\n            app_id: app_id,\n            device_id: dev_id,\n            event_name: events[i].n\n        }],}];\n        node.send(influxMsg);\n    } else {}\n}    \nvar equipment_pass = [];\nvar equipment_fail = [];\nvar to_do = flow.get('to_do');\n\n\n\nfor (var i = 0 ; i < results.length; i++) {\n    if (results[i] == \"[OK]\"){\n        equipment_pass.push(equipment_id);\n        }\n    else {\n        equipment_fail.push(equipment_id);\n        }\n}\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 160,
        "wires": [
            [
                "e7c8665da6f34dd7"
            ]
        ]
    },
    {
        "id": "13b791.91a1886f",
        "type": "function",
        "z": "44c96c079469bdd0",
        "name": "results loop",
        "func": "let results = msg.payload.set_values_return.set_values_return;\nlet equipment_id = msg.equipment_id;\nlet loop_msg = {};\nvar equipment_pass = [];\nvar equipment_fail = [];\nvar to_do = flow.get('to_do');\n\n\n\nfor (var i = 0 ; i < results.length; i++) {\n    if (results[i] == \"[OK]\"){\n        equipment_pass.push(equipment_id);\n        }\n    else {\n        equipment_fail.push(equipment_id);\n        }\n}\n\nconst unique_pass = equipment_pass;\nlet pass = [...new Set(unique_pass)]\n\n\nconst unique_fail = equipment_fail;\nlet fail = [...new Set(unique_fail)]\n\nif (fail.length === 1) {\n    fail_msg = {payload: {\n    failed_equipment: fail,\n    alarm_setup: false\n    }}\n    var failed = flow.get('failed') || \"\";\n    failed.push(fail);\n    flow.set ('failed', failed)\n    return [null, fail_msg]\n    \n} else if (pass.length === 1){\n    var completed = flow.get('completed') || \"\";\n    completed.push(pass);\n    flow.set('completed', completed)\n    to_do.pop();\n    flow.set(\"to_do\", to_do);\n    if (to_do === undefined || to_do.length === 0) {\n        complete_msg = {payload: \"Setup complete, to_do equipment list is empty.\"}\n        return [null, complete_msg]\n    } else {\n    var next_equipment = to_do[to_do.length -1];\n    length_test = {length_test: next_equipment.length,\n                    next_equipment: next_equipment,\n    };\n    pass_msg = {\n        payload: {\n            equipment_id: next_equipment,\n            alarm_setup: true\n        }\n    }\n    return [pass_msg, null];\n}} else {\n    fail_msg = {payload: {\n        failed_equipment: fail,\n        alarm_setup: false\n    }}\n    return [null, fail_msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 460,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "bb549dc1.c006b",
        "type": "function",
        "z": "44c96c079469bdd0",
        "name": "Standard Circuit",
        "func": "var loc = msg.payload;\nvar cells = [\n    'E2 Unit01:WIFI XR75 TEST:2048', // CIRCUIT STATE\n    'E2 Unit01:WIFI XR75 TEST:CIRCUIT STATE',\n//    'E2 Unit01:WIFI XR75 TEST:2049', //CASE TEMP STPT\n//    'E2 Unit01:WIFI XR75 TEST:CASE TEMP STPT',\n//    'E2 Unit01:WIFI XR75 TEST:2050', // REFRIG SOLENOID\n//    'E2 Unit01:WIFI XR75 TEST:2051',\n//    'E2 Unit01:WIFI XR75 TEST:2052',//CASE TEMP 1\n//    'E2 Unit01:WIFI XR75 TEST:2054',\n//    'E2 Unit01:WIFI XR75 TEST:DEFROST',\n//    'E2 Unit01:WIFI XR75 TEST:2056',\n//    'E2 Unit01:WIFI XR75 TEST:FAN',\n//    'E2 Unit01:WIFI XR75 TEST:2061',\n//    'E2 Unit01:WIFI XR75 TEST:2062',\n//    'E2 Unit01:WIFI XR75 TEST:7044', \n//    'E2 Unit01:WIFI XR75 TEST:CASE ALM HI SP',\n//    'E2 Unit01:WIFI XR75 TEST:7045',  //CONTROL TEMP\n//    'E2 Unit01:WIFI XR75 TEST:CONTROL TEMP',\n//    'E2 Unit01:WIFI XR75 TEST:2055', // PEAK DEF TEMP\n//    'E2 Unit01:WIFI XR75 TEST:PEAK DEF TEMP',\n//    'E2 Unit01:WIFI XR75 TEST:2070',   //CASE ALM HI SP\n//    'E2 Unit01:WIFI XR75 TEST:2071',  //CASE ALM LO SP\n//    'E2 Unit01:WIFI XR75 TEST:2072',  //COMB ALM HI SP\n//    'E2 Unit01:WIFI XR75 TEST:2073',  //COMB ALM LO SP\n//    'E2 Unit01:WIFI XR75 TEST:7001',  // TEMP CTRL STRAT\n//    'E2 Unit01:WIFI XR75 TEST:7002',  // TEMP DEADBAND\n//    'E2 Unit01:WIFI XR75 TEST:TEMP DEADBAND',  // TEMP DEADBAND\n//    'E2 Unit01:WIFI XR75 TEST:7009',  //\n//    'E2 Unit01:WIFI XR75 TEST:DEFROST TYPE',  //\n//    'E2 Unit01:WIFI XR75 TEST:7011',  //DEFROST DELAY\n//    'E2 Unit01:WIFI XR75 TEST:DEFROST DELAY',  //DEFROST DELAY\n//    'E2 Unit01:WIFI XR75 TEST:7014',  //DEFR DURATION\n//    'E2 Unit01:WIFI XR75 TEST:DEFR DURATION',  //DEFR DURATION\n//    'E2 Unit01:WIFI XR75 TEST:7016',  //TERM TYPE\n//    'E2 Unit01:WIFI XR75 TEST:TERM TYPE',  //TERM TYPE\n//    'E2 Unit01:WIFI XR75 TEST:7021',  //FAN DURING DEFR\n//    'E2 Unit01:WIFI XR75 TEST:7026',  // DEFROST TIME 1\n//    'E2 Unit01:WIFI XR75 TEST:7027',  // DEFROST TIME 2\n//    'E2 Unit01:WIFI XR75 TEST:7028',  // DEFROST TIME 3\n//    'E2 Unit01:WIFI XR75 TEST:7029',  // DEFROST TIME 4\n//    'E2 Unit01:WIFI XR75 TEST:7030',  // DEFROST TIME 5\n//    'E2 Unit01:WIFI XR75 TEST:7031',  // DEFROST TIME 6\n//    'E2 Unit01:WIFI XR75 TEST:7046',    // CASE ALRM DELAY\n//    'E2 Unit01:WIFI XR75 TEST:7044',    // CASE ALARM HI\n//    'E2 Unit01:WIFI XR75 TEST:7045',    // CASE ALARM LO\n//    'E2 Unit01:WIFI XR75 TEST:9', //ACTIVE SETPT\n//    'E2 Unit01:CONDENSER001:40',\n//    'E2 Unit01:CONDENSER001:74'\n    ];\n\n\nreturn {payload: cells,\n    loc: loc,\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "880985249f9899ad",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 80,
        "wires": []
    },
    {
        "id": "9bd706bd50bfa38b",
        "type": "ui_form",
        "z": "44c96c079469bdd0",
        "name": "",
        "label": "",
        "group": "df71c92d64343c4c",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "phone number",
                "value": "phone_number",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "phone_number": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 1190,
        "y": 180,
        "wires": [
            [
                "7d4f40f4bac6ce86"
            ]
        ]
    },
    {
        "id": "7d4f40f4bac6ce86",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 180,
        "wires": []
    },
    {
        "id": "4c3a83eae00fe03b",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "multisensor-lux",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"topic\":\"zwave/greatRoom/multisensor/49/0/Illuminance\",\"payload\":{\"id\":\"19-49-0-Illuminance\",\"nodeId\":19,\"commandClass\":49,\"commandClassName\":\"Multilevel Sensor\",\"endpoint\":0,\"property\":\"Illuminance\",\"propertyName\":\"Illuminance\",\"type\":\"number\",\"readable\":true,\"writeable\":false,\"label\":\"Illuminance\",\"ccSpecific\":{\"sensorType\":3,\"scale\":1},\"stateless\":false,\"commandClassVersion\":5,\"unit\":\"Lux\",\"list\":false,\"value\":3,\"lastUpdate\":1652666937512,\"nodeName\":\"multisensor\",\"nodeLocation\":\"greatRoom\"},\"qos\":1,\"retain\":false,\"_msgid\":\"9b70cbc059ca0c13\"}",
        "payloadType": "json",
        "x": 760,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "360b01c82e5b2988",
        "type": "snmp",
        "z": "44c96c079469bdd0",
        "host": "udm.home.apra",
        "version": "1",
        "timeout": 5,
        "community": "public",
        "auth": "noAuthNoPriv",
        "authprot": "MD5",
        "privprot": "DES",
        "oids": "",
        "name": "",
        "x": 680,
        "y": 600,
        "wires": [
            [
                "296c43b178efe0e6"
            ]
        ]
    },
    {
        "id": "345ba4cd011bb764",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "",
        "props": [
            {
                "p": "username",
                "v": "bdb",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 470,
        "y": 600,
        "wires": [
            [
                "360b01c82e5b2988"
            ]
        ]
    },
    {
        "id": "296c43b178efe0e6",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 600,
        "wires": []
    },
    {
        "id": "066badd8e06b2654",
        "type": "inject",
        "z": "44c96c079469bdd0",
        "name": "",
        "props": [
            {
                "p": "user",
                "v": "WATTTIMEUSER",
                "vt": "env"
            },
            {
                "p": "pass",
                "v": "WATTTIMEPASS",
                "vt": "env"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 290,
        "y": 1360,
        "wires": [
            [
                "ed7b92ed2961b505"
            ]
        ]
    },
    {
        "id": "ed7b92ed2961b505",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 1360,
        "wires": []
    },
    {
        "id": "d53dedc045fc17c8",
        "type": "function",
        "z": "44c96c079469bdd0",
        "name": "WATT Time Token",
        "func": "msg.url = 'https://api2.watttime.org/v2/login'\nmsg.method = 'GET'\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "bc3179fe375bf6d8",
        "type": "mqtt in",
        "z": "44c96c079469bdd0",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "39c85520361d1f91",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1190,
        "y": 340,
        "wires": [
            [
                "8fbc6af32c8a10b2",
                "f21eb7ab1f744da2"
            ]
        ]
    },
    {
        "id": "8fbc6af32c8a10b2",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "zwave #",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 280,
        "wires": []
    },
    {
        "id": "f21eb7ab1f744da2",
        "type": "switch",
        "z": "44c96c079469bdd0",
        "name": "topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "zwave/bdb_office/#",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 420,
        "wires": [
            [
                "c9f2b8345590aa2f"
            ],
            [
                "38f98df940fd1450"
            ]
        ]
    },
    {
        "id": "c9f2b8345590aa2f",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "bdb_office",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 380,
        "wires": []
    },
    {
        "id": "38f98df940fd1450",
        "type": "debug",
        "z": "44c96c079469bdd0",
        "name": "zwave_otherwise",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 480,
        "wires": []
    }
]